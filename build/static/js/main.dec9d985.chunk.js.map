{"version":3,"sources":["store/slices/userTasks.ts","components/Header.tsx","constants.js","components/SideBar.tsx","components/Content.tsx","pages/DiscussionDashBoard.jsx","reportWebVitals.js","api/wenet_api.js","store/sagas/userTasks.js","store/sagas/index.ts","store/index.ts","store/reducers.ts","components/common.tsx","components/StudentComponents.jsx","pages/StudentDashboard.jsx","components/TeacherComponents.jsx","components/StudentsProfileViewer.tsx","pages/TeacherDashboard.jsx","pages/WenetConnector.jsx","router.tsx","App.tsx","i18n.js","index.js"],"names":["userTasksSlice","createSlice","name","initialState","user","tasks","studentsProfile","reducers","willLogin","state","action","willLogout","willGetUserProfile","willLoadTasks","willCreateTask","willCreateTransaction","willLoadStudentsProfile","didGetUserProfile","payload","didLogout","localStorage","removeItem","didLoadTasks","didLoadStudentsProfile","actions","reducer","selectors","userTasks","wenet_id","profiles","i","length","Header","className","section","showMenu","useTranslation","useSuspense","t","_section","i18n","undefined","React","useState","isOpen","setIsOpen","dispatch","useDispatch","userProfile","useSelector","UserTasksSelectors","console","log","Navbar","style","marginBottom","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first","last","DropdownMenu","right","DropdownItem","UserTasksActions","Role","admin","teacher","student","SideBar","active","role","border","width","position","backgroundColor","bottom","top","vertical","NavItem","NavLink","textDecoration","fontWeight","tag","Link","to","icon","faBriefcase","Content","children","fluid","left","md5","require","RialeDiscussionBoard","props","comment","setComment","count","query","URLSearchParams","window","location","search","passcode","getItem","passcodeMD5","get","map","replies","useEffect","task","role_id","Card","padding","borderColor","CardHeader","paddingBottom","CardTitle","CardBody","currentUser","userId","avatarUrl","commentsArray","signinUrl","signupUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createNewTask","content","a","fetch","headers","method","body","JSON","stringify","response","text","result","createNewTransaction","sagas","takeLatest","type","put","push","call","json","myJson","runAllSagas","all","userTasksSagas","history","createBrowserHistory","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","router","connectRouter","userTasksReducer","store","createStore","run","transactionFieldMapper","studentsTransactionOptions","teachersTransactionOptions","StudentTransaction","transaction","indexOf","currentSelectedChoice","setCurrentSelectedChoice","currentSelectedStudentText","setCurrentStudentText","getAnswerOption","group","message","index","FormGroup","check","disabled","readonly","Input","value","onChange","ev","target","onUpdate","onChangeSelectedChoice","checked","Label","_done","answerLabel","display","justifyContent","moment","_creationTs","format","Form","margin","choice","marginTop","for","id","onChangeStudentText","renderStudentAnswerText","teacherFeedbackContent","teacherFeedback","getTeacherFeedbackContent","renderTeacherAnswerText","StudentTask","toggle","transactionData","setTransactionData","feedbackTeacherTransactions","setFeedbackTeacherTransactions","newTransactionFormVisibile","setNewTransactionFormVisible","filteredTransactions","setFilteredTransactions","ftd","transactions","transactionID","getFilteredTransactions","transactionsIDwithFeedback","Object","keys","includes","ft","filter","sort","t1","t2","taskTitle","goal","taskDescription","description","taskCreationDate","cursor","alignContent","size","CardSubtitle","label","CardFooter","Button","renderTopicContents","StudentDashboard","TeacherFeedback","currentSelectedTeacherText","setCurrentTeacherText","getTeacherFeedbackOption","onChangeTeacherText","createFeedbackTransaction","TeacherTransaction","transactionActioneer","StudentsProfileSelector","getStudentAnswerOption","TaskCreator","currentTaskTitle","setCurrentTaskTitle","currentTaskDescription","setCurrentTaskDescription","onChangeTaskTitle","onChangeTaskDescription","onClose","TeacherTasksViewer","height","marginRight","borderWidth","borderStyle","borderRadius","faPlus","Modal","ModalHeader","ModalBody","TeacherTaskViewer","renderTransactions","StudentsProfileViewer","columns","dataField","hidden","StudentsProfileAction","bootstrap4","keyField","data","TeacherDashboard","activeTab","setActiveTab","tabs","background","TabContent","TabPane","tabId","WenetConnector","setPasscode","setItem","onEnterPasscode","passCodeOrig","charset","toUpperCase","passCode","trim","passCodeSum","charAt","isValid","passCodeLen","error","checkPassCode","alignItems","textAlign","placeholder","AppRouter","path","App","use","Backend","initReactI18next","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue","navigator","language","changeLanguage","ReactDOM","render","Fragment","document","getElementById"],"mappings":"kSAGaA,EAAiBC,YAAY,CACtCC,KAAM,YACNC,aAAc,CACZC,KAAK,KACLC,MAAO,GACPC,gBAAiB,IAGnBC,SAAU,CACTC,UAAW,SAACC,EAAOC,GAAR,OAAsCD,GACjDE,WAAY,SAACF,EAAOC,GAAR,OAAsCD,GAClDG,mBAAoB,SAACH,EAAOC,GAAR,OAAsCD,GAC1DI,cAAe,SAACJ,EAAOC,GAAR,OAAsCD,GACrDK,eAAgB,SAACL,EAAOC,GAAR,OAAsCD,GACtDM,sBAAuB,SAACN,EAAOC,GAAR,OAAsCD,GAC7DO,wBAAyB,SAACP,EAAOC,GAAR,OAAsCD,GAE/DQ,kBAAmB,SAACR,EAAOC,GACxBD,EAAML,KAAOM,EAAOQ,SAGtBC,UAAU,SAACV,GACTA,EAAML,KAAO,KACbK,EAAMJ,MAAQ,GACde,aAAaC,WAAW,aAG1BC,aAAc,SAACb,EAAOC,GACpBD,EAAMJ,MAAQK,EAAOQ,SAGvBK,uBAAwB,SAACd,EAAOC,GAC9BD,EAAMH,gBAAkBI,EAAOQ,YAQxBM,EAAqBxB,EAArBwB,QAASC,EAAYzB,EAAZyB,QAEXC,EAID,SAACjB,GACT,OAAOA,EAAMkB,UAAUtB,OALdqB,EAOK,SAACjB,GAEf,OAAOA,EAAMkB,UAAUvB,MATdsB,EAWS,SAACjB,GACnB,OAAOA,EAAMkB,UAAUrB,iBAZdoB,EAeiB,SAACE,GAAD,OAAkB,SAACnB,GAE5C,IADA,IAAMoB,EAAWpB,EAAMkB,UAAUrB,gBACxBwB,EAAE,EAAEA,EAAED,EAASE,OAAOD,IAE7B,GAAID,EAASC,GAAT,UAAyBF,EAC7B,OAAOC,EAASC,GAElB,OAAO,O,0FC1DCE,EAAS,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,QAAqC,IAA5BC,gBAA4B,WAEjDC,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAF6D,EAE7DA,EACFC,GAH+D,EAE1DC,UACoBC,GAAdH,EAAEJ,GAAwBI,EAAEJ,GAAW,SAHa,EAIzCQ,IAAMC,UAAS,GAJ0B,mBAI9DC,EAJ8D,KAItDC,EAJsD,KAM/DC,EAAWC,cACXC,EAAcC,YAAYC,GAEhC,OADAC,QAAQC,IAAI,eAAgBJ,GAExB,eAACK,EAAA,EAAD,CAAQC,MAAO,CAACC,aAAa,QAAStB,UAAWA,EAAWuB,MAAM,UAAUC,OAAK,EAACC,OAAO,KAAzF,UACI,eAACC,EAAA,EAAD,CAAa1B,UAAU,8BAA8B2B,KAAK,IAA1D,wBAA0ErB,KACzEJ,GAAa,qCACV,cAAC0B,EAAA,EAAD,CAAeC,QARZ,kBAAMjB,GAAWD,MASpB,eAACmB,EAAA,EAAD,CAAUnB,OAAQA,EAAQoB,QAAM,EAAhC,UAEQ,cAACC,EAAA,EAAD,CAAKhC,UAAU,UAAU+B,QAAM,IAGnC,cAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,SACmB,MAAbhB,GAAuC,MAAlBA,EAAY9C,MACnC,mCACI,eAACgE,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,EAAlC,UACI,eAACC,EAAA,EAAD,CAAgBpC,UAAU,aAAakC,KAAG,EAACG,OAAK,EAAhD,UAAkDtB,EAAY9C,KAAKqE,MAAnE,IAA+EvB,EAAY9C,KAAKsE,QAChG,cAACC,EAAA,EAAD,CAAcC,OAAK,EAAnB,SACA,cAACC,EAAA,EAAD,CAAcb,QAAS,WACXhB,EAAS8B,EAAiBjE,WAAW,MADjD,uC,kDClCnBkE,EAAb,kCAAaA,EACFC,MAAQ,EADND,EAEFE,QAAU,EAFRF,EAGFG,QAAU,ECcd,IAAMC,EAAU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,KAAgB,EAE1B/C,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAFsC,EAEtCA,EAFsC,EAEnCE,KAEX,OADAW,QAAQC,IAAI,qBAAsB+B,EAAMN,EAAKE,QAAUI,GAAMN,EAAKE,SAAWI,GAAMN,EAAKC,OAEpF,qBAAKxB,MAAO,CACR8B,OAAQ,iBACRC,MAAO,QACPC,SAAU,WACVC,gBAAiB,UACjBC,OAAQ,EACRC,IAAK,IANT,SASI,eAACxB,EAAA,EAAD,CAAKyB,UAAQ,EAACzD,UAAU,qBAAxB,UACI,cAAC0D,EAAA,EAAD,CAAST,OAAmB,gBAAXA,EAAyCjD,UAAU,OAApE,SACI,eAAC2D,EAAA,EAAD,CAAS3D,UAAsB,gBAAXiD,EAA2B,eAAiB,iBAC5D5B,MAAO,CAAEuC,eAAgB,OAAQC,WAAY,UAAYC,IAAKC,IAC9DC,GAAI,SAFR,UAGI,cAAC,IAAD,CAAiBC,KAAMC,IAAalE,UAAU,SAHlD,IAG6DK,EAAE,qBAI9D6C,GAAMN,EAAKG,SAAWG,GAAMN,EAAKC,QAE9B,cAACa,EAAA,EAAD,CAAST,OAAmB,sBAAXA,EAA+CjD,UAAU,OAA1E,SACI,eAAC2D,EAAA,EAAD,CAAS3D,UAAsB,sBAAXiD,EAAiC,eAAiB,iBAClE5B,MAAO,CAAEuC,eAAgB,OAAQC,WAAY,UAAYC,IAAKC,IAC9DC,GAAI,qBAFR,UAGI,cAAC,IAAD,CAAiBC,KAAMC,IAAalE,UAAU,SAHlD,IAG6DK,EAAE,sBAOtE6C,GAAMN,EAAKE,SAAWI,GAAMN,EAAKC,QAE9B,cAACa,EAAA,EAAD,CAAST,OAAmB,sBAAXA,EAA+CjD,UAAU,OAA1E,SACI,eAAC2D,EAAA,EAAD,CAAS3D,UAAsB,sBAAXiD,EAAiC,eAAiB,iBAClE5B,MAAO,CAAEuC,eAAgB,OAAQC,WAAY,UAAYC,IAAKC,IAC9DC,GAAI,qBAFR,UAGI,cAAC,IAAD,CAAiBC,KAAMC,IAAalE,UAAU,SAHlD,IAG6DK,EAAE,2BC3D9E8D,EAAU,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,SAAUpE,EAAoC,EAApCA,UAAoC,IAAzBqE,aAAyB,SACtE,OACE,qBAAKrE,UAAWA,EAAWqB,MAAO,CAChC8B,OAAQ,iBAERE,SAAU,WACVC,gBAAiB,QACjBC,OAAQ,EACRC,IAAK,GACLc,KAAMD,EAAQ,EAAI,IAClB5B,MAAO,GART,SAUG2B,K,oCC6CDG,EAAMC,EAAQ,KAwHLC,EArHc,SAACC,GAAW,IAAD,EACRhE,mBAAS,IADD,mBAC/BiE,EAD+B,KACtBC,EADsB,KAEhC/D,EAAWC,cAEX1C,EAAS4C,YAAYC,GACrBF,EAAcC,YAAYC,GALM,EAMlBd,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAN8B,EAM9BA,EAOJwE,GAbkC,EAM3BtE,KAOC,GAENuE,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAC5CC,EAAWhG,aAAaiG,QAAQ,YAChCC,EAAcP,EAAMQ,IAAI,YAC9BpE,QAAQC,IAAI,UAAWgE,GACc,MAAbE,GAAqBd,EAAIY,GAIjDR,EAAQY,KAAI,SAAA1F,GAAOgF,GAAS,EAAGhF,EAAE2F,SAAW3F,EAAE2F,QAAQD,KAAI,SAAA1F,GAAC,OAAIgF,GAAS,QAqExE,OA1BAY,qBAAU,WACR5E,EAAS8B,EAAiBhE,sBAC1BkC,EAAS8B,EAAiB/D,mBACzB,IAGH6G,qBAAU,WAINb,EAHS,MAAPxG,EAGSA,EAAMmH,KAAI,SAACG,GACpB,MACE,CACE,OAAU,MACV,MAAS,MACT,SAAY,YACZ,UAAa,yDACb,KAAQA,EAAI,KAAJ,KACR,QAAW,OAGH,MAEf,CAACtH,IAIF,qCACA,cAAC,EAAD,CAAQ4B,UAAU,kBAAkBC,QAAQ,cAAcC,UAAU,IAClE,cAAC,EAAD,CAAS+C,OAAO,cAAcC,KAAmB,MAAbnC,EAAmBA,EAAY4E,QAAU,OAC7E,cAAC,EAAD,UACE,eAACC,EAAA,EAAD,CAAM5F,UAAU,OAAOqB,MAAO,CAAEwE,QAAS,OAAQC,YAAa,WAA9D,UACE,cAACC,EAAA,EAAD,CAAY1E,MAAO,CAAEiC,gBAAiB,UAAWwC,YAAa,UAAWE,cAAe,EAAGzE,MAAO,SAAlG,SACE,eAAC0E,EAAA,EAAD,WAAY5F,EAAE,eAAd,OAAkCwE,EAAlC,IAA0CxE,EAAE,YAA5C,SAKF,cAAC6F,EAAA,EAAD,UACE,cAAC,IAAD,CAAgBC,YAAuB,CAAEC,OAjGpC,MAiGoDC,UAhGjD,yDAgGuEpI,KA/F5E,OAgGDqI,cAAe3B,GAAW,GAC1BC,WAAYA,EAAY2B,UAhGlB,UAgGwCC,UA/FxC,uBC5DLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sECPDQ,GAAa,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,4DACb,WADa,kBAGAC,MAFb,WAGR,CACEC,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE,QAAWP,MAPf,cAGjBQ,EAHiB,OAUvBzG,QAAQC,IAAI,oCAAqCwG,GAV1B,SAWFA,EAASC,OAXP,cAWjBC,EAXiB,OAYvB3G,QAAQC,IAAI,kCAAmC0G,GAZxB,kBAahBA,GAbgB,yCAcX3G,QAAQC,IAAI,oCAAZ,MAdW,kBAciD,MAdjD,0DAAH,sDAkBX2G,GAAoB,uCAAG,WAAOX,GAAP,iBAAAC,EAAA,gGAGTC,MAHS,kBAI9B,CACEC,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE,QAAWP,MAPN,cAG1BQ,EAH0B,OAUhCzG,QAAQC,IAAI,6CAA8CwG,GAV1B,SAWXA,EAASC,OAXE,cAW1BC,EAX0B,OAYhC3G,QAAQC,IAAI,2CAA4C0G,GAZxB,kBAezBA,GAfyB,yCAgBpB3G,QAAQC,IAAI,uCAAZ,MAhBoB,kBAiBzB,MAjByB,0DAAH,sD,YCVlB4G,I,YAWPrJ,I,YAMEC,I,YAkBFE,I,YAoCAC,I,YAeAF,I,YAmBAG,IAzGH,SAAUgJ,KAAV,iEACL,OADK,SACCC,aAAWrF,EAAiBhE,mBAAmBsJ,KAAMtJ,IADtD,OAEL,OAFK,SAECqJ,aAAWrF,EAAiBjE,WAAWuJ,KAAMvJ,IAF9C,OAGL,OAHK,SAGCsJ,aAAWrF,EAAiB/D,cAAcqJ,KAAMrJ,IAHjD,OAIL,OAJK,SAICoJ,aAAWrF,EAAiB5D,wBAAwBkJ,KAAMlJ,IAJ3D,OAML,OANK,UAMCiJ,aAAWrF,EAAiB9D,eAAeoJ,KAAMpJ,IANlD,QAOL,OAPK,UAOCmJ,aAAWrF,EAAiB7D,sBAAsBmJ,KAAMnJ,IAPzD,yCAWP,SAAUJ,GAAWD,GAArB,iEACI,OADJ,SACUyJ,aAAIvF,EAAiBzD,aAD/B,OAEI,OAFJ,SAEUgJ,aAAIC,aAAK,YAFnB,wCAME,SAAUxJ,GAAmBF,GAA7B,yEAKmB,MALnB,iCAKyB2J,cAAK,kBAAMf,MALpC,gBAMGT,MAAK,SAAAe,GAAQ,OAAIA,EAASU,UAC1BzB,MAAK,SAAA0B,GAAM,OAAIA,QAPlB,OAWE,OANMX,EALR,OAUQ5G,EAA2B,MAAZ4G,EAAoB,GAAKA,EAVhD,SAWQO,aAAIvF,EAAiB3D,kBAAkB+B,IAX/C,+BAaI,OAbJ,oCAaUmH,aAAIvF,EAAiB3D,kBAAkB,OAbjD,uDAkBF,SAAUH,GAAeJ,GAAzB,yEAEiB,OADT0I,EAAU1I,EAAOQ,QADzB,SAEuBmJ,aAAKlB,GAAcC,GAF1C,UAGc,OADNU,EAFR,yBAMI,OADA3G,QAAQC,IAAI,oDAAoD0G,GALpE,SAMUK,aAAIvF,EAAiB/D,iBAN/B,+BASIsC,QAAQC,IAAI,iCAThB,yCAoCA,SAAUrC,GAAsBL,GAAhC,yEAEiB,OADT0I,EAAU1I,EAAOQ,QADzB,SAEuBmJ,aAAKN,GAAqBX,GAFjD,UAGc,OADNU,EAFR,yBAMI,OADA3G,QAAQC,IAAI,2DAA2D0G,GAL3E,SAMUK,aAAIvF,EAAiB/D,iBAN/B,+BASIsC,QAAQC,IAAI,qCAThB,yCAeA,SAAUvC,GAAcH,GAAxB,yEAOqB,OANnByC,QAAQC,IAAI,mCADd,2BAO2BiH,cAAK,kBAAMf,MAPtC,UAQKT,MAAK,SAAAe,GAAQ,OAAIA,EAASU,UAC1BzB,MAAK,SAAA0B,GAAM,OAAIA,QATpB,OAaI,OANMX,EAPV,OAYUvJ,EAAqB,MAAZuJ,EAAoB,GAAKA,EAAQ,MAZpD,SAaUO,aAAIvF,EAAiBtD,aAAajB,IAb5C,+BAeM,OAfN,oCAeY8J,aAAIvF,EAAiBtD,aAAa,KAf9C,uDAmBA,SAAUN,GAAwBN,GAAlC,yEAGmB,MAHnB,8BAGyB2J,cAAK,kBAAMf,MAHpC,aAIGT,MAAK,SAAAe,GAAQ,OAAIA,EAASU,UAC1BzB,MAAK,SAAA0B,GAAM,OAAIA,QALlB,OAQE,OALMX,EAHR,OAOQtJ,EAA+B,MAAZsJ,EAAoB,GAAKA,EAPpD,SAQQO,aAAIvF,EAAiBrD,uBAAuBjB,IARpD,+BAUI,OAVJ,oCAUU6J,aAAIvF,EAAiBrD,uBAAuB,KAVtD,uD,gBC9GUiJ,IAAV,SAAUA,KAAV,iEAEI,OADArH,QAAQC,IAAI,gBADhB,SAEUqH,aAAI,CACPC,OAHP,wCAOeF,U,SCAFG,GAAUC,eAEVC,GAAiB,SAACC,GAG7B,ICVgCH,EDU1BI,EAAiBC,cACjBC,EAAmB,CAACC,aAAiBP,IAAUI,GAK/CI,EAAY,CAHSC,kBAAe,WAAf,EAAmBH,IAIxCI,EAAoBC,sBAAmB,WAAnB,EAAuBH,GAE3CI,GCnB0BZ,EDmBMA,GCnBWa,0BAAgB,CACjEC,OAAQC,aAAcf,GACtBhJ,UAAWgK,KDkBLC,EAAQC,sBAAYN,EAAaT,EAAgBO,GAUvD,OAFAN,EAAee,IAAItB,IAEZoB,G,uFEnCIG,GAAyB,CAClC,aAAgB,SAChB,kBAAqB,OACrB,QAAW,OACX,SAAY,SACZ,eAAkB,aAClB,qBAAwB,eACxB,QAAW,MACX,YAAe,WAGNC,GAA6B,CAAC,eAAgB,oBAAqB,UAAW,YAC9EC,GAA6B,CAAC,iBAAkB,uBAAwB,UAAW,eC+B1FC,GAAqB,SAACvF,GAAW,IAE5BwF,EAAexF,EAAfwF,YACPhJ,QAAQC,IAAI,wBAAyB+I,GAHH,MAId/J,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAJ0B,EAI1BA,EAJ0B,KAIvBE,KAC+CG,mBAAsB,MAAbwJ,GAAoB,EAAIH,GAA2BI,QAAQD,EAAW,SALvG,mBAK3BE,EAL2B,KAKJC,EALI,OAOlC3J,mBAAsB,MAAbwJ,EAAmB,GAAKA,EAAW,WAAeJ,GAAuBI,EAAW,SAP3D,mBAM3BI,EAN2B,KAMCC,EAND,KAuB5BC,EAAkB,SAACC,EAAOC,EAASC,GACrC,OAAO,eAACC,GAAA,EAAD,CAAWC,OAAK,EAACC,SAAUpG,EAAMqG,SAAjC,UACH,cAACC,GAAA,EAAD,CAAOF,SAAUpG,EAAMqG,SACnB9M,KAAMwM,EACNQ,MAAON,EACPO,SAAU,SAACC,GAAD,OAnBS,SAACA,GAC5BjK,QAAQC,IAAI,mBAAoBgK,EAAGC,OAAOH,OAC1CZ,EAAyBc,EAAGC,OAAOH,OACnCvG,EAAM2G,UAAYjB,GAAuB,GAAM1F,EAAM2G,SAAStB,GAA2BK,GACrFE,GAesBgB,CAAuBH,IACzCI,QAASnB,GAAyBO,EAClC1C,KAAK,UAER,IACD,cAACuD,GAAA,EAAD,CAAOX,OAAK,EAAZ,SACKH,MAV8CC,IAoErDc,EAAQ/G,EAAMqG,SAAW,QAAU,GACnCW,EAAW,sBAAkBD,GAEnC,OACI,qCACG/G,EAAMwF,aACF,qBAAK7I,MAAO,CAACsK,QAAQ,OAASC,eAAgB,YAA9C,SACA,cAACJ,GAAA,EAAD,UACI,4BAAIK,IAAOnH,EAAMwF,YAAY4B,aAAaC,OAAO,4BAI5D,eAACC,GAAA,EAAD,CAAM3K,MAAO,CAAE8B,OAAQ,oBAAqB0C,QAAS,OAAQoG,OAAQ,QAArE,UAGI,cAACT,GAAA,EAAD,UACI,4BAAInL,EAAEqL,OArBP3B,GAA2BxE,KAAI,SAACmF,EAASC,GAC5C,OAAOH,EAAgB,gBAAiBnK,EAAEqK,GAAUC,MAjD5B,WAC5B,IAAMc,EAAQ/G,EAAMqG,SAAW,QAAU,GACnCmB,EAAM,UAAMnC,GAA2BK,IAAjC,OAA0DqB,GACtE,OAAOrB,GAAuB,GAAK,cAACQ,GAAA,EAAD,UAC/B,sBAAKvJ,MAAO,CAAE8K,UAAW,QAAzB,UACI,cAACX,GAAA,EAAD,CAAOY,IAAI,oBAAX,SACI,4BAAI/L,EAAE,cAAD,OAAe6L,QAExB,cAAClB,GAAA,EAAD,CAAOF,SAAUpG,EAAMqG,SACnBsB,GAAG,oBACHpO,KAAK,OACLgK,KAAK,WACLiD,SAAU,SAACC,GAAD,OAnCE,SAACA,GACzBjK,QAAQC,IAAI,gBAAiBgK,EAAGC,OAAOH,OACvCV,EAAsBY,EAAGC,OAAOH,OAChCvG,EAAM2G,UAAYjB,GAAuB,GAAM1F,EAAM2G,SAAStB,GAA2BK,GACrFe,EAAGC,OAAOH,OA+BgBqB,CAAoBnB,IACtCF,MAAOX,SA2DdiC,GA3CuB,WAC5B,IAAMC,EAXwB,WACjC,IACUC,EAAgC/H,EAAhC+H,gBACP,OADuC/H,EAAfwF,YACH,MAAjBuC,EAA8B,MAClCvL,QAAQC,IAAI,6BAA6BsL,GAErBA,EAAe,WAAe3C,GAAuB2C,EAAe,SAKzDC,GAE/B,OAAOF,GAA2B,cAAC5B,GAAA,EAAD,UAC9B,sBAAKvJ,MAAO,CAAE8K,UAAW,QAAzB,UACI,cAACX,GAAA,EAAD,CAAOY,IAAI,oBAAX,SACI,4BAAI/L,EAAE,uBAEV,cAAC2K,GAAA,EAAD,CAAOF,SAAUpG,EAAMqG,SACnBsB,GAAG,oBACHpO,KAAK,OACLgK,KAAK,WACLgD,MAAOuB,SAgCdG,UAKAC,GAAc,SAAClI,GAAW,IAAD,EAENhE,oBAAS,GAFH,mBAE3BC,EAF2B,KAEnBC,EAFmB,KAG5BiM,EAAS,kBAAMjM,GAAWD,IAHE,EAIdR,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAJ0B,EAI1BA,EACFQ,GAL4B,EAIvBN,KACMO,eALiB,EAMYJ,mBAAS,MANrB,mBAM3BoM,EAN2B,KAMVC,EANU,KAO5BhM,EAAcC,YAAYC,GAPE,EAQoCP,mBAAS,IAR7C,mBAQ3BsM,EAR2B,KAQEC,EARF,OASiCvM,oBAAS,GAT1C,mBAS3BwM,EAT2B,KASCC,EATD,OAUsBzM,mBAAS,IAV/B,mBAU3B0M,EAV2B,KAULC,EAVK,KAYlC5H,qBAAU,WAAO,IACNC,EAAQhB,EAARgB,KACPxE,QAAQC,IAAI,gBAAiBuE,GAE7B,IADA,IAAI4H,EAAM,GACDzN,EAAE,EAAEA,EAAE6F,EAAK6H,aAAazN,OAAOD,IACxC,CACE,IAAM2N,EAAgB9H,EAAK6H,aAAa1N,GAAlB,yBACH,MAAf2N,IAEAF,EAAIE,GAAiB9H,EAAK6H,aAAa1N,IAG3CqB,QAAQC,IAAI,4CAA6CmM,GACzDL,EAA+BK,GAC/BD,EAAwBI,KAGxBN,GAA6B,GAC7B,IAAMO,EAA6BC,OAAOC,KAAKN,GAC/CpM,QAAQC,IAAR,2CAAgDuE,EAAI,IAAS0H,EAAqBtN,QAClFoB,QAAQC,IAAI,gCAAiC+L,GAC7C,IAAK,IAAIrN,EAAE,EAAEA,EAAEuN,EAAqBtN,OAAOD,IAGpC6N,EAA2BG,SAAST,EAAqBvN,GAArB,KAEvCsN,GAA6B,GAGjCA,EAA6BC,EAAqBtN,QAAS6N,OAAOC,KAAKN,GAAKxN,UAG7E,CAAC4E,EAAMgB,OAEZ,IAUM+H,EAA0B,WAG5B,GADAvM,QAAQC,IAAR,gCAAqCuD,EAAMgB,KAAN,GAArC,MAA2DhB,EAAMgB,KAAK6H,cACzC,MAAzB7I,EAAMgB,KAAK6H,aAAoB,MAAO,GAE1C,IAAMO,EAAKpJ,EAAMgB,KAAK6H,aAAaQ,QAAO,SAAC7D,GAKvC,OAAOH,GAA2B8D,SAAS3D,EAAW,QACtC,MAAbnJ,GAAqBA,EAAW,IAASmJ,EAAW,eAK3D,OADA4D,EAAGE,MAAK,SAACC,EAAGC,GAAJ,OAAYD,EAAE,YAAiBC,EAAE,eAClCJ,GA2DX,OA3C4B,WACxB,IAAMK,EAAYzJ,EAAMgB,KAAK0I,KAAKnQ,KAC5BoQ,EAAkB3J,EAAMgB,KAAK0I,KAAKE,YAClCC,EAAmB1C,IAAOnH,EAAMgB,KAAKoG,aAAaC,OAAO,sBAC/D,OAEI,eAACnG,EAAA,EAAD,CAAM5F,UAAU,OAAOqB,MAAO,CAAEwE,QAAS,OAAQC,YAAa,WAA9D,UAEI,cAACC,EAAA,EAAD,CAAYlE,QAAS,WAAQgL,KAAYxL,MAAO,CAAEmN,OAAQ,UAAWlL,gBAAiB,UAAWwC,YAAa,UAAWE,cAAe,EAAGzE,MAAO,SAAlJ,SAEI,cAAC0E,EAAA,EAAD,UACI,sBAAK5E,MAAO,CAAEsK,QAAS,OAAQC,eAAgB,gBAAiB6C,aAAc,iBAA9E,cACMF,EADN,KAC0BJ,EACrBxN,EACG,cAAC,KAAD,CAAkB+N,KAAM,QAASF,OAAO,UAAUjN,MAAM,QAAQM,QAAS,WAAQgL,OACjF,cAAC,KAAD,CAAoB6B,KAAM,QAASF,OAAO,UAAUjN,MAAM,QAAQM,QAAS,WAAQgL,cAQnG,eAAC/K,EAAA,EAAD,CAAUnB,OAAQA,EAAlB,UACK0N,GACG,cAACM,GAAA,EAAD,CAActN,MAAO,CAAEwE,QAAS,OAAQoG,OAAQ,OAAQ3I,gBAAiB,WAAzE,SACK+K,IAIT,cAACnI,EAAA,EAAD,UACI,eAAC8F,GAAA,EAAD,YA1ChB9K,QAAQC,IAAI,2BAA4BiM,GACjCA,EAAqB7H,KAAI,SAAC2E,GAC7B,OAAO,cAAC,GAAD,CAAoBa,UAAQ,EAACb,YAAaA,EACzCuC,gBAAiBO,EAA4B9C,EAAW,UAyC/CgD,GApCb,cAAC,GAAD,CAAoB7B,SAAa,SAACuD,EAAMlE,GAAP,OAAmBqC,EAAmB,CAAC6B,QAAMlE,oBAuC1E,cAACmE,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAQvN,MAAM,UAAUM,QAAS,SAACsJ,IA/EzB,WAEzB,GAAqB,MAAjB2B,EAAJ,CACA,IACM7N,EAAU,CAAE,OADHyF,EAAMgB,KAAN,GACsB,QAAY,CAAC,MAASoH,EAAe,MAC1E,QAAYA,EAAe,UAC3B5L,QAAQC,IAAI,+DACZN,EAAS8B,EAAiB7D,sBAAsBG,KAwEU6I,IAA1C,SAAqEzH,EAAE,kBAOvF0O,ICvRKC,GAAmB,SAACtK,GAC7B,IAAM3D,EAAcC,YAAYC,GAC1B7C,EAAS4C,YAAYC,GACrBJ,EAAWC,cAEjB2E,qBAAU,WACN5E,EAAS8B,EAAiBhE,sBAC1BkC,EAAS8B,EAAiB/D,mBACzB,IAQL,OACI,qCACI,cAAC,EAAD,CAAQoB,UAAU,kBAAkBC,QAAQ,eAAeC,UAAU,IACrE,cAAC,EAAD,CAAS+C,OAAO,oBAAoBC,KAAqB,MAAfnC,EAAsBA,EAAY4E,QAAU,OACtF,cAAC,EAAD,UAPGvH,GAASA,EAAMmH,KAAI,SAACG,EAAKiF,GAAN,OAAgB,cAAC,GAAD,CAAajF,KAAMA,GAAWiF,Y,8BCL1EsE,GAAkB,SAACvK,GAAW,IACxBwF,EAAgBxF,EAAhBwF,YADuB,EAEX/J,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAFuB,EAEvBA,EAFuB,KAEpBE,KAC+CG,mBAAwB,MAAfwJ,GAAuB,EAAIF,GAA2BG,QAAQD,EAAW,SAH7G,mBAGxBE,EAHwB,KAGDC,EAHC,OAK3B3J,mBAAS,IALkB,mBAIxBwO,EAJwB,KAIIC,EAJJ,KAMzBtO,EAAWC,cA0CXsO,EAA2B,SAAC3E,EAAOC,EAASC,GAC9C,OAAO,eAACC,GAAA,EAAD,CAAWC,OAAK,EAACC,SAAUpG,EAAMqG,SAAjC,UACH,cAACC,GAAA,EAAD,CAAOF,SAAUpG,EAAMqG,SACnB9M,KAAMwM,EACNQ,MAAON,EACPO,SAAU,SAACC,GAAD,OAAQG,EAAuBH,IACzCI,QAASnB,GAAyBO,EAClC1C,KAAK,UAER,IACD,cAACuD,GAAA,EAAD,CAAOX,OAAK,EAAZ,SACKH,MAV8CC,IAerDW,EAAyB,SAACH,GAC5BjK,QAAQC,IAAI,4BAA6BgK,EAAGC,OAAOH,OACnDZ,EAAyBc,EAAGC,OAAOH,OACnCvG,EAAM2G,UAAYjB,GAAyB,GAAK1F,EAAM2G,SAASrB,GAA2BI,GACtF8E,IAGFG,EAAsB,SAAClE,GACzBjK,QAAQC,IAAI,gBAAiBgK,EAAGC,OAAOH,OACvCkE,EAAsBhE,EAAGC,OAAOH,OAChCvG,EAAM2G,UAAYjB,GAAyB,GAAK1F,EAAM2G,SAASrB,GAA2BI,GACtFe,EAAGC,OAAOH,QAGlB,OAAO,qCACP,qBAAK5J,MAAO,CAAE8K,UAAW,QAAzB,SACI,cAACX,GAAA,EAAD,UAAO,4BAAInL,EAAE,kCAzDN2J,GAA2BzE,KAAI,SAACmF,EAASC,GAC5C,OAAOyE,EAAyB,gBAAiB/O,EAAEqK,GAAUC,MAK1DP,GAAyB,GAAK,eAACQ,GAAA,EAAD,WACjC,sBAAKvJ,MAAO,CAAE8K,UAAW,QAAzB,UACI,cAACX,GAAA,EAAD,CAAOY,IAAI,oBAAX,SACI,4BAAI/L,EAAE,sBAAD,OAAuB2J,GAA2BI,SAE3D,cAACY,GAAA,EAAD,CAAOF,UAAU,EACbuB,GAAG,oBACHpO,KAAK,OACLgK,KAAK,WACLiD,SAAU,SAACC,GAASkE,EAAoBlE,IACxCF,MAAOiE,OAGf,qBAAK7N,MAAO,CAAEsK,QAAS,OAAQQ,UAAW,OAAQP,eAAgB,YAAlE,SACI,cAACkD,GAAA,EAAD,CAAQjN,QAAS,kBAnCK,WAC9B,KAAIuI,EAAwB,GAA5B,CACA,IACMnL,EAAU,CACZ,OAFWyF,EAAMwF,YAAN,OAEO,QAAW,CACzB,MAASF,GAA2BI,GACpC,QAAW8E,EACX,cAAiBxK,EAAMwF,YAAN,KAGzBhJ,QAAQC,IAAI,oBAAqBlC,GACjC4B,EAAS8B,EAAiB7D,sBAAsBG,KAwBjBqQ,IAA6B/N,MAAM,UAA1D,SAAqElB,EAAE,mBA6CjFkP,GAAqB,SAAC7K,GAAW,IAE3BwF,EAAgBxF,EAAhBwF,YACRhJ,QAAQC,IAAI,wBAAyB+I,GACrC,IAAMsF,EAAuBxO,YAAYyO,EAAmDvF,GAAeA,EAAW,cAJpF,EAKd/J,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAL0B,EAK1BA,EAL0B,KAKvBE,KAC+CG,mBAAwB,MAAfwJ,GAAuB,EAAIH,GAA2BI,QAAQD,EAAW,SAN1G,mBAM3BE,EAN2B,KAMJC,EANI,OAQ9B3J,mBAAwB,MAAfwJ,EAAsB,GAAKA,EAAW,WAAeJ,GAAuBI,EAAW,SARlE,mBAO3BI,EAP2B,KAwB5BoF,GAxB4B,KAwBH,SAACjF,EAAOC,EAASC,GAC5C,OAAO,eAACC,GAAA,EAAD,CAAWC,OAAK,EAACC,SAAUpG,EAAMqG,SAAjC,UACH,cAACC,GAAA,EAAD,CAAOF,SAAUpG,EAAMqG,SACnB9M,KAAMwM,EACNQ,MAAON,EACPO,SAAU,SAACC,GAAD,OAnBS,SAACA,GAC5BjK,QAAQC,IAAI,mBAAoBgK,EAAGC,OAAOH,OAC1CZ,EAAyBc,EAAGC,OAAOH,OACnCvG,EAAM2G,UAAYjB,GAAyB,GAAK1F,EAAM2G,SAAStB,GAA2BK,GACtFE,GAesBgB,CAAuBH,IACzCI,QAASnB,GAAyBO,EAClC1C,KAAK,UAER,IACD,cAACuD,GAAA,EAAD,CAAOX,OAAK,EAAZ,SACKH,MAV8CC,KAgCrD+B,EAA4B,WAAO,IAC7BD,EAAiC/H,EAAjC+H,gBAAiC/H,EAAhBwF,YACzB,OAAuB,MAAnBuC,EAAgC,MACpCvL,QAAQC,IAAI,6BAA8BsL,GAEtBpM,EAAE,GAAD,OAAIoM,EAAe,QAAe,IACnCA,EAAe,WAAe3C,GAAuB2C,EAAe,UA0B5F,OACI,qCACK/H,EAAMwF,aACH,qBAAK7I,MAAO,CAAEsK,QAAS,OAAQC,eAAgB,YAA/C,SACK4D,EACG,cAAChE,GAAA,EAAD,UACI,8BAAIgE,EAAoB,KAAxB,YAAyCA,EAAoB,QACxD,MADL,IACa3D,IAAOnH,EAAMwF,YAAY4B,aAAaC,OAAO,2BAG9D,cAACP,GAAA,EAAD,UACI,4BAAIK,IAAOnH,EAAMwF,YAAY4B,aAAaC,OAAO,4BAKjE,eAACC,GAAA,EAAD,CAAM3K,MAAO,CAAE8B,OAAQ,oBAAqB0C,QAAS,OAAQoG,OAAQ,QAArE,UAGI,cAACT,GAAA,EAAD,UACI,4BAAInL,EAAE,4BAzBX0J,GAA2BxE,KAAI,SAACmF,EAASC,GAC5C,OAAO+E,EAAuB,gBAAiBrP,EAAEqK,GAAUC,MA5CxDP,GAAyB,GAAK,cAACQ,GAAA,EAAD,UACjC,sBAAKvJ,MAAO,CAAE8K,UAAW,QAAzB,UACI,cAACX,GAAA,EAAD,CAAOY,IAAI,oBAAX,SACI,4BAAI/L,EAAE,sBAAD,OAAuB0J,GAA2BK,SAE3D,cAACY,GAAA,EAAD,CAAOF,UAAU,EACbuB,GAAG,oBACHpO,KAAK,OACLgK,KAAK,WACLiD,SAAU,SAACC,KACXF,MAAOX,SA8De,MAAzB5F,EAAM+H,gBA7CR,cAAC7B,GAAA,EAAD,UACH,sBAAKvJ,MAAO,CAAE8K,UAAW,QAAzB,UACI,cAACX,GAAA,EAAD,CAAOY,IAAI,oBAAX,SACI,4BAAI/L,EAAE,uBAEV,cAAC2K,GAAA,EAAD,CAAOF,SAAUpG,EAAMqG,SACnBsB,GAAG,oBACHpO,KAAK,OACLgK,KAAK,WACLgD,MAAOyB,WAqCP,cAAC,GAAD,CAAiBxC,YAAaxF,EAAMwF,qBAO3CyF,GAAc,SAACjL,GAAW,IAAD,EACdvE,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAD0B,EAC1BA,EAD0B,KACvBE,KAEqCG,mBAAS,KAHvB,mBAG3BkP,EAH2B,KAGTC,EAHS,OAI0BnP,mBAAS,IAJnC,mBAI3BoP,EAJ2B,KAIHC,EAJG,KAK5BlP,EAAWC,cAiBjB,OAEI,eAACkL,GAAA,EAAD,WACI,cAACpB,GAAA,EAAD,UACI,sBAAKvJ,MAAO,CAAE8K,UAAW,QAAzB,UACI,cAACX,GAAA,EAAD,CAAOY,IAAI,mBAAX,SACI,4BAAI/L,EAAE,wBAEV,cAAC2K,GAAA,EAAD,CACIqB,GAAG,mBACHpO,KAAK,OACLgK,KAAK,OACLiD,SAAU,SAACC,GAAD,OApBJ,SAACA,GACvB0E,EAAoB1E,EAAGC,OAAOH,OAmBI+E,CAAkB7E,IACpCF,MAAO2E,SAInB,cAAChF,GAAA,EAAD,UACI,sBAAKvJ,MAAO,CAAE8K,UAAW,QAAzB,UACI,cAACX,GAAA,EAAD,CAAOY,IAAI,yBAAX,SACI,4BAAI/L,EAAE,8BAEV,cAAC2K,GAAA,EAAD,CACIqB,GAAG,yBACHpO,KAAK,OACLgK,KAAK,WACLiD,SAAU,SAACC,GAAD,OA9BE,SAACA,GAC7B4E,EAA0B5E,EAAGC,OAAOH,OA6BFgF,CAAwB9E,IAC1CF,MAAO6E,SAInB,cAAClF,GAAA,EAAD,UACI,sBAAKvJ,MAAO,CAAEsK,QAAS,OAAQ,eAAkB,iBAAjD,UACI,cAACmD,GAAA,EAAD,CAAQjN,QAAS,SAACsJ,GAASzG,EAAMwL,WAAjC,qBACA,cAACpB,GAAA,EAAD,CAAQvN,MAAM,UAAUM,QAAS,SAACsJ,GAhD9CtK,EAAS8B,EAAiB9D,eAAe,CACrC,KAAQ+Q,EACR,YAAeE,KA8CuDpL,EAAMwL,WAApE,SAAkF7P,EAAE,mBAU3F8P,GAAqB,SAACzL,GAEX1D,YAAYC,GAAhC,IAFyC,EAGrBd,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAHiC,EAGjCA,EAHiC,KAG9BE,KACiBG,oBAAS,IAJI,mBAIlCC,EAJkC,KAI1BC,EAJ0B,KAKnCC,EAAWC,cACX1C,EAAS4C,YAAYC,GAE3BwE,qBAAU,WACN5E,EAAS8B,EAAiBhE,sBAC1BkC,EAAS8B,EAAiB/D,mBACzB,IAcL,OACI,qCACI,eAACwC,EAAA,EAAD,CAAQC,MAAO,CAAEC,aAAc,QAAUtB,UAAU,kBAAkBuB,MAAM,UAAUC,OAAK,EAACC,OAAO,KAAlG,UACI,cAACC,EAAA,EAAD,CAAa1B,UAAU,8BAA8B2B,KAAK,IAA1D,SAA+DtB,EAAE,2BACjE,cAAC2B,EAAA,EAAD,CAAKhC,UAAU,UAAU+B,QAAM,IAE/B,cAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,SACI,eAAC+M,GAAA,EAAD,CAAQjN,QAAS,SAACsJ,GAASjK,QAAQC,IAAI,sBAAuBP,GAAU,IACpES,MAAO,CAAE+O,OAAQ,GAAIC,YAAa,GAAIlE,UAAW,EAAG7K,aAAc,EAAGgP,YAAa,EAAGxK,YAAa,QAASyK,YAAa,QAASC,aAAc,GAAKjP,MAAM,UAD9J,UAEI,cAAC,IAAD,CAAiB0C,KAAMwM,MAAWpQ,EAAE,wBAK/CM,GAzBE,eAAC+P,GAAA,EAAD,CAAO/P,OAAQA,EAAf,UACH,cAACgQ,GAAA,EAAD,UAActQ,EAAE,kBAChB,cAACuQ,GAAA,EAAD,UACI,cAAC,GAAD,CAAaV,QAAS,kBAAMtP,GAAU,WAKvCxC,GAASA,EAAMmH,KAAI,SAACG,EAAMiF,GAAP,OAAiB,cAAC,GAAD,CAAmBjF,KAAMA,GAAWiF,UAuB1EkG,GAAoB,SAACnM,GAAW,IAAD,EAEZhE,oBAAS,GAFG,mBAEjCC,EAFiC,KAEzBC,EAFyB,KAGlCiM,EAAS,kBAAMjM,GAAWD,IAHQ,EAIpBR,YAAe,WAAY,CAAEC,aAAa,IAJtB,KAIhCC,EAJgC,EAI7BE,KACSS,YAAYC,GACsCP,mBAAS,KANvC,mBAMjCsM,EANiC,KAMJC,EANI,KAQxCxH,qBAAU,WAAO,IACLC,EAAShB,EAATgB,KACRxE,QAAQC,IAAI,gBAAiBuE,GAE7B,IADA,IAAI4H,EAAM,GACDzN,EAAI,EAAGA,EAAI6F,EAAK6H,aAAazN,OAAQD,IAAK,CAC/C,IAAM2N,EAAgB9H,EAAK6H,aAAa1N,GAAlB,yBACD,MAAjB2N,IACAF,EAAIE,GAAiB9H,EAAK6H,aAAa1N,IAG3CqB,QAAQC,IAAI,wCAAyCmM,GACrDL,EAA+BK,MAGpC,CAAC5I,EAAMgB,OAEV,IAeMoL,EAAqB,WACvB,IAAM1D,EAhBsB,WAE5B,GADAlM,QAAQC,IAAI,uBAAwBuD,EAAMgB,KAAK6H,cAChB,MAA3B7I,EAAMgB,KAAK6H,aAAsB,MAAO,GAE5C,IAAMO,EAAKpJ,EAAMgB,KAAK6H,aAAaQ,QAAO,SAAC7D,GAIvC,OAHAhJ,QAAQC,IAAI,yBAA0B+I,GAG/BH,GAA2B8D,SAAS3D,EAAW,UAI1D,OADA4D,EAAGE,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAE,YAAkBC,EAAE,eACpCJ,EAIsBL,GAE7B,OADAvM,QAAQC,IAAI,yBAA0BiM,GAC/BA,EAAqB7H,KAAI,SAAC2E,EAAaS,GAC1C,OAAO,cAAC,GAAD,CAAoBI,UAAQ,EAACb,YAAaA,EAC7CuC,gBAAiBO,EAA4B9C,EAAW,KAAcS,OA4ClF,OAvC4B,WACxB,IAAMwD,EAAYzJ,EAAMgB,KAAK0I,KAAKnQ,KAC5BoQ,EAAkB3J,EAAMgB,KAAK0I,KAAKE,YAClCC,EAAmB1C,IAAOnH,EAAMgB,KAAKoG,aAAaC,OAAO,sBAC/D,OAEI,eAACnG,EAAA,EAAD,CAAM5F,UAAU,OAAOqB,MAAO,CAAEwE,QAAS,OAAQC,YAAa,WAA9D,UAEI,cAACC,EAAA,EAAD,CAAYlE,QAAS,WAAQgL,KAAYxL,MAAO,CAAEmN,OAAQ,UAAWlL,gBAAiB,UAAWwC,YAAa,UAAWE,cAAe,EAAGzE,MAAO,SAAlJ,SAEI,cAAC0E,EAAA,EAAD,UACI,sBAAK5E,MAAO,CAAEsK,QAAS,OAAQC,eAAgB,gBAAiB6C,aAAc,iBAA9E,cACMF,EADN,KAC0BJ,EACrBxN,EACG,cAAC,KAAD,CAAkB+N,KAAM,QAASF,OAAO,UAAUjN,MAAM,QAAQM,QAAS,WAAQgL,OACjF,cAAC,KAAD,CAAoB6B,KAAM,QAASF,OAAO,UAAUjN,MAAM,QAAQM,QAAS,WAAQgL,cAQnG,eAAC/K,EAAA,EAAD,CAAUnB,OAAQA,EAAlB,UACK0N,GACG,cAACM,GAAA,EAAD,CAActN,MAAO,CAAEwE,QAAS,OAAQoG,OAAQ,OAAQ3I,gBAAiB,WAAzE,SACK+K,IAIT,cAACnI,EAAA,EAAD,UACI,cAAC8F,GAAA,EAAD,UACK8E,cAQrB/B,I,oBC5ZKgC,GAAwB,SAACrM,GACrC,IAAD,EACwBvE,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EADZ,EACYA,EACFQ,GAFV,EACeN,KACMO,eACXzC,EAAkB2C,YAAYyO,GAG9BuB,EAAU,CAEd,CACEC,UAAW,OACXrJ,KAAMvH,EAAE,QACR2N,MAAM,GAGN,CACEiD,UAAW,UACXrJ,KAAMvH,EAAE,WACR2N,MAAM,GAIR,CACEiD,UAAW,WACXrJ,KAAMvH,EAAE,YACR2N,MAAM,EACNkD,QAAO,GAEP,CACED,UAAW,KACXrJ,KAAMvH,EAAE,WACR2N,MAAM,GAER,CACEiD,UAAW,cACXrJ,KAAMvH,EAAE,eACR2N,MAAM,IASd,OALAvN,IAAMgF,WAAU,WAEZ,OADA5E,EAASsQ,EAAsBpS,wBAAwB,OAChD,eACN,IAEE,mCACN,cAAC,KAAD,CAAgBqS,YAAU,EAACC,SAAS,WAAWC,KAC9BjT,EAEF2S,QAAUA,O,oBCrDjBO,GAAmB,SAAC7M,GAC7B,IAAM3D,EAAcC,YAAYC,GADO,EAELP,mBAAS,KAFJ,mBAEhC8Q,EAFgC,KAErBC,EAFqB,OAGnBtR,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAH+B,EAG/BA,EACFQ,GAJiC,EAG5BN,KACMO,eAOjB,OALA2E,qBAAU,WACN5E,EAAS8B,EAAiBhE,wBAEzB,IAGD,qCACI,cAAC,EAAD,CAAQqB,UAAU,kBAAkBC,QAAQ,eAAeC,UAAU,IACrE,cAAC,EAAD,CAAS+C,OAAO,oBAAoBC,KAAqB,MAAfnC,EAAsBA,EAAY4E,QAAU,OACtF,eAAC,EAAD,WACI,eAAC3D,EAAA,EAAD,CAAK0P,MAAI,EAAT,UACI,cAAChO,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAStC,MAAqB,MAAdmQ,EACZ,CAAEhD,OAAQ,QAAS3K,WAAY,OAAQ8N,WAAY,WAAc,CAAEnD,OAAQ,UAAW3K,WAAY,UAClGhC,QAAS,WAAQ4P,EAAa,MAFlC,SAIKpR,EAAE,wBAGX,cAACqD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAStC,MAAqB,MAAdmQ,EACZ,CAAEhD,OAAQ,QAAS3K,WAAY,OAAQ8N,WAAY,WAAc,CAAEnD,OAAQ,UAAW3K,WAAY,UAClGhC,QAAS,WAAQ4P,EAAa,MAFlC,SAIKpR,EAAE,2BAIf,eAACuR,GAAA,EAAD,CAAYJ,UAAWA,EAAvB,UACI,cAACK,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,MAEJ,cAACD,GAAA,EAAD,CAASC,MAAM,IAAf,SACI,cAAC,GAAD,gBCwCTC,GAnFQ,WAAO,IAAD,EAEL5R,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAFiB,EAEjBA,EAFiB,KAEdE,KAEqBG,mBAAS,OAJhB,mBAIlByE,EAJkB,KAIR6M,EAJQ,KAMzBvM,qBAAU,WACLtG,aAAa8S,QAAQ,WAAY9M,KACjC,CAACA,IAEN,IAwBM+M,EAAkB,SAAC/G,GACrBjK,QAAQC,IAAI,WAAYgK,EAAGC,OAAOH,OAzBhB,SAACkH,GAGnB,IAAMC,EAAU,6BAA6BC,cAE7C,IACI,IAAMC,EAAWH,EAAaI,OAAOF,cACrC,GAHgB,GAGZC,EAASxS,OAAuB,KAAO,UAE3C,IADA,IAAI0S,EAAc,EACT3S,EAAI,EAAGA,EAAIyS,EAASxS,OAAS,EAAGD,IAErC2S,GAAeJ,EAAQjI,QAAQmI,EAASG,OAAO5S,IAKnD,IAAM6S,GAFNF,GAAeJ,EAAQjI,QAAQmI,EAASG,OAAOE,KAEhBP,EAAQtS,QAAW,EAClDkS,EAAaU,EAAUJ,EAAW,MACpC,MAAOM,GACLZ,EAAY,OAOhBa,CAAc1H,EAAGC,OAAOH,QAG5B,OACI,qBAAK5J,MAAO,CACRsK,QAAS,OACTmH,WAAY,SACZlH,eAAgB,SAChBwE,OAAQ,SAJZ,SAMI,eAACxK,EAAA,EAAD,CAAM5F,UAAU,OAAOqB,MAAO,CAAEyE,YAAa,WAA7C,UACI,cAACC,EAAA,EAAD,CAAY1E,MAAO,CACfiC,gBAAiB,UACjBwC,YAAa,UACbE,cAAe,EACfzE,MAAO,SAJX,SAOI,cAAC0E,EAAA,EAAD,CAAW5E,MAAO,CAAE0R,UAAW,UAA/B,SAA4C1S,EAAE,sBAElD,cAAC6F,EAAA,EAAD,UAGI,cAAC8E,GAAA,EAAD,CAAOE,SAAU,SAACC,GAAD,OAAQ+G,EAAgB/G,IAAKlD,KAAK,OAAOhK,KAAK,WAC/DoO,GAAG,WAAW2G,YAAa3S,EAAE,sBAG7B,cAACwO,GAAA,EAAD,CAAYxN,MAAO,CACCsK,QAAS,OACTmH,WAAY,SACZlH,eAAgB,UAHpC,SAMIzG,GACI,mBAAGxD,KAAI,4BAAuBwD,GAA9B,SAA2C9E,EAAE,8BC9D5D4S,GAAY,WACvB,OAAQ,cAAC,KAAD,CAAiBvK,QAASA,GAA1B,SACR,eAAC,KAAD,WACA,cAAC,KAAD,CAAOwK,KAAK,SAAZ,SACQ,cAAC,EAAD,MAGN,cAAC,KAAD,CAAOA,KAAK,qBAAZ,SACM,cAAC,GAAD,MAGN,cAAC,KAAD,CAAOA,KAAK,qBAAZ,SACM,cAAC,GAAD,MAGN,cAAC,KAAD,CAAOA,KAAK,IAAZ,SACM,cAAC,GAAD,YC5BK,SAASC,KACtB,OACE,cAAC,IAAD,CAAUxJ,MAAOf,GAAe,IAAhC,SACG,cAAC,GAAD,M,sCCAPrI,KAGG6S,IAAIC,MAKJD,IAAIE,MAGJC,KAAK,CACJC,GAAI,CAAC,KAAM,YACXC,UAAW,KACXC,YAAa,KACbC,OAAO,EACPC,cAAe,CACbC,aAAa,KAKJtT,UAAf,ECjBW,WADDyE,OAAO8O,UAAP,cAAmC9O,OAAO8O,UAAUC,UAE1DxT,GAAKyT,eAAe,SAEpBzT,GAAKyT,eAAe,SAGxBC,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAChB,GAAD,MAEFiB,SAASC,eAAe,SAgB1B5N,M","file":"static/js/main.dec9d985.chunk.js","sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport { profile } from \"console\";\n\nexport const userTasksSlice = createSlice({\n    name: 'userTasks',\n    initialState: {\n      user:null,\n      tasks: [],\n      studentsProfile: []\n    }\n  ,\n    reducers: {\n     willLogin: (state, action:PayloadAction<any>) => state,\n     willLogout: (state, action:PayloadAction<any>) => state,\n     willGetUserProfile: (state, action:PayloadAction<any>) => state,\n     willLoadTasks: (state, action:PayloadAction<any>) => state,\n     willCreateTask: (state, action:PayloadAction<any>) => state,\n     willCreateTransaction: (state, action:PayloadAction<any>) => state,\n     willLoadStudentsProfile: (state, action:PayloadAction<any>) => state,\n      \n     didGetUserProfile: (state, action:PayloadAction<any>) => { \n        state.user = action.payload;\n      },\n\n      didLogout:(state) => { \n        state.user = null;\n        state.tasks = [];\n        localStorage.removeItem(\"passcode\");\n      },\n\n      didLoadTasks: (state, action:PayloadAction<any>) =>{\n        state.tasks = action.payload;\n      },\n\n      didLoadStudentsProfile: (state, action:PayloadAction<any>) =>{\n        state.studentsProfile = action.payload;\n      },\n \n \n    \n    }\n});\n\nexport const { actions, reducer } = userTasksSlice;\n\nexport const selectors = {\n  isLogged: (state:any) => {\n    return state.userTasks.user!=null && localStorage.getItem(\"passcode\")==state.userTasks.user[\"passcode\"];\n  },\n  getTasks: (state:any) => {\n    return state.userTasks.tasks;\n  },\n  getUserProfile: (state:any) => {\n    //return {\"role_id\" : 1, \"name\" : {\"first\" : \"test\", \"last\" : \"test\"}}\n    return state.userTasks.user;\n  },\n  getStudentsProfile: (state:any) => {\n    return state.userTasks.studentsProfile;\n  },\n\n  getStudentDetailsByWenetID: (wenet_id:any) => (state:any) => {\n     const profiles = state.userTasks.studentsProfile;\n     for (let i=0;i<profiles.length;i++)\n     {\n       if (profiles[i][\"wenet_id\"]==wenet_id)\n       return profiles[i];\n     }\n     return null;\n  }\n}\n","import React from \"react\";\nimport {\n    Container, Button, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav,\n    NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions as UserTasksActions, selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\nexport const Header = ({ className, section, showMenu = false }: any) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const _section = t(section) != undefined ? t(section) : \"Forum\"\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const dispatch = useDispatch();\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    console.log(\"UserProfile:\", userProfile);\n    return (\n        <Navbar style={{marginBottom:\"10px\"}} className={className} color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\" href=\"/\">RIALENET - {_section}</NavbarBrand>\n            {showMenu && (<>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    {(\n                        <Nav className=\"mr-auto\" navbar>\n                        </Nav>\n                    )}\n                    <Nav navbar>\n                        { userProfile!=null && userProfile.name!=null &&\n                        <>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle className=\"text-white\" nav caret>{userProfile.name.first}{` `}{userProfile.name.last}</DropdownToggle>\n                                <DropdownMenu right>\n                                <DropdownItem onClick={() => {\n                                            dispatch(UserTasksActions.willLogout(\"\"));\n                                        }}>Logout</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </>\n                        }\n                    </Nav>\n                </Collapse>\n            </>)}\n        </Navbar>\n\n    )\n}\n","export class Role {\n    static admin = 1;\n    static teacher = 2;\n    static student = 3;\n}","import { NavItem, NavLink, Nav } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faHome,\n    faChartPie,\n    faBriefcase,\n    faTimes,\n    faQuestion,\n    faImage,\n    faBook,\n    faCalendarAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { Role } from \"../constants\";\n\nexport const SideBar = ({ active, role }: any) => {\n  \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    console.log(\"Role in sidebar ->\", role, Role.teacher, (role==Role.teacher || role==Role.admin));\n    return (\n        <div style={{\n            border: '0px solid #000',\n            width: '240px',\n            position: 'absolute',\n            backgroundColor: '#f1f1f1',\n            bottom: 0,\n            top: 56\n        }}>\n\n            <Nav vertical className=\"list-unstyled pb-3\">\n                <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                    <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                        style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                        to={\"/forum\"}>\n                        <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"public_area\")}\n                    </NavLink>\n                </NavItem>\n                {\n                    (role==Role.student || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"student_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"student_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/student_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"student_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n                {\n                    (role==Role.teacher || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"teacher_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"teacher_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/teacher_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"teacher_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n\n            </Nav>\n        </div>)\n\n}","export const Content = ({ children, className, fluid = false }: any) => {\n  return (\n    <div className={className} style={{\n      border: '0px solid #000',\n      // width: '240px',\n      position: 'absolute',\n      backgroundColor: 'white',\n      bottom: 0,\n      top: 56,\n      left: fluid ? 0 : 240,\n      right: 0\n    }}>\n      {children}\n    </div>\n  )\n}","import React, { PureComponent, useState, useEffect } from 'react'\nimport { CommentSection } from 'react-comments-section'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation, useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport {\n  Card, CardImg, CardText, CardBody, CardHeader,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst data = [\n  {\n    \"userId\": \"01a\",\n    \"comId\": \"012\",\n    \"fullName\": \"Riya Negi\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n    \"text\": \"Hey, Loved your blog! \",\n    \"replies\": [\n      {\n        \"userId\": \"02a\",\n        \"comId\": \"013\",\n\n        \"fullName\": \"Adam Scott\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Adam&background=random\",\n        \"text\": \"Thanks! It took me 1 month to finish this project but I am glad it helped out someone!🥰\"\n      },\n      {\n        \"userId\": \"01a\",\n        \"comId\": \"014\",\n\n        \"fullName\": \"Riya Negi\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n        \"text\": \"thanks!😊\"\n      }\n    ]\n  },\n  {\n    \"userId\": \"02b\",\n    \"comId\": \"017\",\n    \"fullName\": \"Lily\",\n    \"text\": \"I have a doubt about the 4th point🤔\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Lily&background=random\"\n  },\n  {\n    \"userId\": \"01c\",\n    \"comId\": \"018\",\n    \"fullName\": \"Derek\",\n    \"text\": \"Great explanation!!!\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Derek&background=random\"\n  }\n]\n\nconst md5 = require('md5');\n\n\nconst RialeDiscussionBoard = (props) => {\n  const [comment, setComment] = useState([])\n  const dispatch = useDispatch();\n  \n  const tasks =  useSelector(UserTasksSelectors.getTasks);  //(result == null) ? [] : result[\"tasks\"]\n  const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  \n  const userId = \"01a\"\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n  const name = \"xyz\"\n  const signinUrl = \"/signin\"\n  const signupUrl = \"/signup\"\n  let count = 0\n\n  const query = new URLSearchParams(window.location.search);\n  const passcode = localStorage.getItem(\"passcode\");\n  const passcodeMD5 = query.get(\"passcode\");\n  console.log(\"params:\", passcode);\n  const isAuthenticated = passcodeMD5!=null && md5(passcode)==passcodeMD5;\n\n  \n\n  comment.map(i => { count += 1; i.replies && i.replies.map(i => count += 1) })\n \n  const loadAllTasks = async () => {\n    console.log(\"WENET loading tasks\")\n    try {\n      const url = `/tasks?passcode=${passcode}`\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\"\n        }\n      )\n      console.log(\"WENET authentication response:\", response)\n\n      const result = await response.json();\n      console.log(\"WENET authentication result:\", result)\n\n     \n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          });\n        /*\n        setPosts(\n          tasks.map((task)=> {return(\n           {\"profileImage\" : 'https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg',\n           \"name\" : task[\"goal\"][\"name\"],\n           \"content\" : task[\"goal\"][\"description\"],\n           \"date\" : moment(parseInt(task[\"_creationTs\"])).toDate()\n           } )\n          }\n        )) */\n      }));\n\n    } catch (e) { console.log(\"WENET response error:\", e) }\n  }\n  \n  useEffect(() => {\n    dispatch(UserTasksActions.willGetUserProfile());\n    dispatch(UserTasksActions.willLoadTasks());\n  }, [])\n\n\n  useEffect(() => {\n    if (tasks!=null)\n    {\n\n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          })}));\n    }\n    else setComment([]);\n   \n  }, [tasks])\n\n\n  return (\n    <>\n    <Header className=\"mb-0 text-white\" section=\"public_area\" showMenu={true} />\n      <SideBar active=\"public_area\" role={userProfile!=null? userProfile.role_id : null} />\n      <Content>\n        <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n          <CardHeader style={{ backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n            <CardTitle>{t(\"public_area\")} (n.{count} {t(\"comments\")}) \n              {/*passcode && <div className=\"pull-right\">{passcode}</div>*/}\n            </CardTitle>\n\n          </CardHeader>\n          <CardBody>\n            <CommentSection currentUser={userId && { userId: userId, avatarUrl: avatarUrl, name: name }}\n              commentsArray={comment || []}\n              setComment={setComment} signinUrl={signinUrl} signupUrl={signupUrl} />\n          </CardBody>\n\n        </Card>\n      </Content>\n    </>\n  )\n\n}\n\nexport default RialeDiscussionBoard\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const createNewTask = async (content) => {\n    const url = \"/newtask\"\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify({ \"content\": content })  // JSON.stringify(\"PROVA 2 CONTENUTO\")\n        }\n      )\n      console.log(\"SAGA2 API WENET newtask response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 API WENET newtask result:\", result);\n      return result;\n    } catch (e) { console.log(\"WENET API newtask response error:\", e); return null;}\n  }\n\n\n  export const createNewTransaction = async (content) => {\n    const url = `/newtransaction`;\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify({ \"content\": content }) \n        }\n      )\n      console.log(\"SAGA2 (API) WENET newtransaction response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 (API) WENET newtransaction result:\", result)\n      // ricarico tutti i task dopo che ne ho aggiunto\n      //await loadAllTasks();\n      return result;\n    } catch (e) { console.log(\"WENET newtransaction response error:\", e) \n      return null;\n  }\n  }","import { all, call, takeLatest, put, select, take } from \"redux-saga/effects\";\nimport {\n    actions as UserTasksActions,\n    selectors as UserTasksSelector,\n  } from \"../slices/userTasks\";\nimport { push } from 'connected-react-router'\nimport { createNewTask, createNewTransaction } from \"../../api/wenet_api\";\n\nexport function* sagas() {\n  yield takeLatest(UserTasksActions.willGetUserProfile.type, willGetUserProfile)\n  yield takeLatest(UserTasksActions.willLogout.type, willLogout)\n  yield takeLatest(UserTasksActions.willLoadTasks.type, willLoadTasks) \n  yield takeLatest(UserTasksActions.willLoadStudentsProfile.type, willLoadStudentsProfile) \n  \n  yield takeLatest(UserTasksActions.willCreateTask.type, willCreateTask) \n  yield takeLatest(UserTasksActions.willCreateTransaction.type, willCreateTransaction) \n}\n\n\nfunction* willLogout(action) {\n    yield put(UserTasksActions.didLogout());\n    yield put(push(\"/logout\"));\n  }\n\n\n  function* willGetUserProfile(action) {\n  \n    const url = `/userprofile`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const userProfile = (response == null) ? [] : response\n    yield put(UserTasksActions.didGetUserProfile(userProfile));\n    } catch (error) {\n      yield put(UserTasksActions.didGetUserProfile(null));\n    }\n}\n\n\nfunction* willCreateTask(action) {\n  const content = action.payload; \n  const result = yield call(createNewTask,content)\n  if (result!=null)\n  {\n    console.log(\"SAGA2 willCreateTask result OK. Loading tasks...|\",result);\n    yield put(UserTasksActions.willLoadTasks()); \n  }\n  else{\n    console.log(\"SAGA2 willCreateNewTask error\");\n  }\n}\n\nfunction* willCreateTaskOld(action) {\n\n  const url = `/newtask`;\n  const content = action.payload; // {\"name\" : \"domanda 1\" , \"description\" ; \"Cosa sono i ...?\"}\n   \n    try{\n    const response = yield call(() => fetch(url,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify({ \"content\": content })  // {\"name\" : \"nome\" , \"description\" : \"...\"}\n      })\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n      console.log(\"SAGA NEW TASK response:\", response);\n      yield put(UserTasksActions.willLoadTasks());\n  } catch (error) {\n      console.log(\"SAGA NEW TASK error:\".error);\n     // yield put(UserTasksActions.didLoadTasks([]));\n    }\n}\n\nfunction* willCreateTransaction(action) {\n  const content = action.payload; \n  const result = yield call(createNewTransaction,content)\n  if (result!=null)\n  {\n    console.log(\"SAGA2 willCreateTransaction result OK. Loading tasks...|\",result);\n    yield put(UserTasksActions.willLoadTasks()); \n  }\n  else{\n    console.log(\"SAGA2 willCreateTransaction error\");\n  }\n}\n\n\n\nfunction* willLoadTasks(action) {\n  console.log(\"SAGA2 called willLoadTasks NEW!\");\n    //const data = action.payload;\n    //const passcode = localStorage.getItem(\"passcode\")\n    const url = `/tasks`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const tasks = (response == null) ? [] : response[\"tasks\"]\n    yield put(UserTasksActions.didLoadTasks(tasks));\n    } catch (error) {\n      yield put(UserTasksActions.didLoadTasks([]));\n    }\n}\n\nfunction* willLoadStudentsProfile(action) {\n  const url = `/students`;\n  try{\n  const response = yield call(() => fetch(url)\n  .then(response => response.json())\n  .then(myJson => myJson)\n  );\n  const studentsProfile = (response == null) ? [] : response;\n  yield put(UserTasksActions.didLoadStudentsProfile(studentsProfile));\n  } catch (error) {\n    yield put(UserTasksActions.didLoadStudentsProfile([]));\n  }\n}\n\n\n\n\n/*\nconst newTransaction = {\n        \"taskId\": \"62a0b984925841535833b690\",\n        \"label\": \"cannotAnswer\",\n        \"attributes\": {\n            \"reason\": \"....\"\n        },\n        \"actioneerId\": \"studente\",\n        \"messages\": []\n     }\n     */","import { all } from 'redux-saga/effects'\nimport { sagas as userTasksSagas } from './userTasks'\n\nfunction* runAllSagas() {\n    console.log('in root saga')\n    yield all([\n       userTasksSagas()\n    ])\n  }\n\nexport default runAllSagas;","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport runAllSagas from './sagas'\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport { createRootReducer } from './reducers'\nexport const history = createBrowserHistory()\n\nexport const configureStore = (preloadedState: any) => {\n  // const middlewares = [loggerMiddleware, thunkMiddleware]\n\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares: any = [routerMiddleware(history), sagaMiddleware]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  // const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  \n  const rootReducer = createRootReducer(history)\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n \n  if (process.env.NODE_ENV !== 'production' && (module as any).hot) {\n    (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n \n\n  // then run the saga\n  sagaMiddleware.run(runAllSagas)\n\n  return store\n}","import { combineReducers } from 'redux'\n\nimport { reducer as userTasksReducer } from './slices/userTasks'\nimport { connectRouter } from 'connected-react-router'\n\nexport const createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  userTasks: userTasksReducer\n})","export const transactionFieldMapper = {\n    \"cannotAnswer\": \"reason\",\n    \"needClarification\": \"note\",\n    \"notSure\": \"note\",\n    \"myAnswer\": \"answer\",\n    \"goToAttachment\": \"attachment\",\n    \"goToTimelinePosition\": \"timelineLink\",\n    \"goToTag\": \"tag\",\n    \"rightAnswer\": \"message\"\n}\n\nexport const studentsTransactionOptions = [\"cannotAnswer\", \"needClarification\", \"notSure\", \"myAnswer\"];\nexport const teachersTransactionOptions = [\"goToAttachment\", \"goToTimelinePosition\", \"goToTag\", \"rightAnswer\"];\n\n\nconst fakeStudentTransactions = [\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"needClarification\",\n        \"attributes\": {\n            \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ],\n        \"id\": \"0\",\n        \"_creationTs\": 1655835879,\n        \"_lastUpdateTs\": 1655835879\n    },\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"notSure\",\n        \"attributes\": {\n            \"note\": \"Non saprei rispondere\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ]\n    }\n]\n\nexport const fakeTask = {\n    \"id\": \"62a9ff27925841535833b6a1\",\n    \"_creationTs\": 1655308072,\n    \"_lastUpdateTs\": 1656328149,\n    \"taskTypeId\": \"62a87b53925841535833b69d\",\n    \"requesterId\": \"671\",\n    \"appId\": \"xUi1mwCJ0X\",\n    \"goal\": {\n        \"name\": \"Primo Task rivolto allo studente Pantera assonnata\",\n        \"description\": \"Descrizione del primo Task rivolto allo studente Pantera assonnata\",\n        \"keywords\": [\n            \"social interaction\",\n            \"lab\"\n        ]\n    },\n    \"norms\": [],\n    \"attributes\": {},\n    \"closeTs\": null,\n    \"communityId\": \"624703620e5af47df0eed5eb\",\n    \"transactions\": [\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"needClarification\",\n            \"attributes\": {\n                \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"0\",\n            \"_creationTs\": 1655835879,\n            \"_lastUpdateTs\": 1655835879\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"notSure\",\n            \"attributes\": {\n                \"note\": \"Non saprei rispondere\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"1\",\n            \"_creationTs\": 1655884187,\n            \"_lastUpdateTs\": 1655884187\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"myAnswer\",\n            \"attributes\": {\n                \"answer\": \"Proprio non lo so\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"2\",\n            \"_creationTs\": 1655993192,\n            \"_lastUpdateTs\": 1655993192\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"goToTag\",\n            \"attributes\": {\n                \"tag\": \"TAG_HELP\"\n            },\n            \"actioneerId\": \"671\",\n            \"messages\": [],\n            \"id\": \"3\",\n            \"_creationTs\": 1656326636,\n            \"_lastUpdateTs\": 1656326636\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"goToTag\",\n            \"attributes\": {\n                \"tag\": \"TAG_ESOMA\",\n                \"transactionID\": \"0\"\n            },\n            \"actioneerId\": \"671\",\n            \"messages\": [],\n            \"id\": \"4\",\n            \"_creationTs\": 1656328149,\n            \"_lastUpdateTs\": 1656328149\n        }\n    ]\n}\n\n\nexport const fakeTasks = [{\n    \"id\": \"62a9ff27925841535833b6a1\", \"_creationTs\": 1655308072,\n    \"_lastUpdateTs\": 1656426153, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\",\n    \"appId\": \"xUi1mwCJ0X\", \"goal\": {\n        \"name\": \"Primo Task rivolto allo studente Pantera assonnata\",\n        \"description\": \"Descrizione del primo Task rivolto allo studente Pantera assonnata\",\n        \"keywords\": [\"social interaction\", \"lab\"]\n    }, \"norms\": [], \"attributes\": {}, \"closeTs\": null,\n    \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"needClarification\", \"attributes\": { \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1655835879, \"_lastUpdateTs\": 1655835879\n    }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non saprei rispondere\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"1\", \"_creationTs\": 1655884187, \"_lastUpdateTs\": 1655884187 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"myAnswer\", \"attributes\": { \"answer\": \"Proprio non lo so\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"2\", \"_creationTs\": 1655993192, \"_lastUpdateTs\": 1655993192 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToTag\", \"attributes\": { \"tag\": \"TAG_HELP\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"3\", \"_creationTs\": 1656326636, \"_lastUpdateTs\": 1656326636 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToTag\", \"attributes\": { \"tag\": \"TAG_ESOMA\", \"transactionID\": \"0\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"4\", \"_creationTs\": 1656328149, \"_lastUpdateTs\": 1656328149 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non so cosa rispondere\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"5\", \"_creationTs\": 1656407889, \"_lastUpdateTs\": 1656407889 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non so cosa rispondere\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"6\", \"_creationTs\": 1656407905, \"_lastUpdateTs\": 1656407905 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToAttachment\", \"attributes\": { \"attachment\": \"il_dna.pdf\", \"transactionID\": \"5\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"7\", \"_creationTs\": 1656408841, \"_lastUpdateTs\": 1656408841 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Ho bisogno di ulteriori chiarimenti!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"8\", \"_creationTs\": 1656413631, \"_lastUpdateTs\": 1656413631 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non ho ancora ricevuto alcun feedback!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"9\", \"_creationTs\": 1656414157, \"_lastUpdateTs\": 1656414157 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Ribasisco che ho bisogno di chiarimenti!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"10\", \"_creationTs\": 1656414274, \"_lastUpdateTs\": 1656414274 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non mi sento sicuro della risposta\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"11\", \"_creationTs\": 1656414477, \"_lastUpdateTs\": 1656414477 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"cannotAnswer\", \"attributes\": { \"reason\": \"NON SONO in grado di rispondere!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"12\", \"_creationTs\": 1656415030, \"_lastUpdateTs\": 1656415030 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToTimelinePosition\", \"attributes\": { \"timelineLink\": \"https://beta.riale.ideab3.it/public/accbe99d-97a8-4f3b-8cf9-8b1f35ef5b87?start_time=1636327040000&active_tab=0\", \"transactionID\": \"8\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"13\", \"_creationTs\": 1656426153, \"_lastUpdateTs\": 1656426153 }]\n}, { \"id\": \"62aa04a3925841535833b6a2\", \"_creationTs\": 1655309475, \"_lastUpdateTs\": 1656409400, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Secondo Task da Lupo Solitario a Pantera assonnata\", \"description\": \"Descrizione del Secondo Task da Lupo Solitario a Pantera assonnata\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{ \"taskId\": \"62aa04a3925841535833b6a2\", \"label\": \"CREATE_TASK\", \"attributes\": {}, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1655835291, \"_lastUpdateTs\": 1655835291 }, { \"taskId\": \"62aa04a3925841535833b6a2\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non sono sicuro...\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"1\", \"_creationTs\": 1656409400, \"_lastUpdateTs\": 1656409400 }] }, {\n    \"id\": \"62b9cc67925841535833b6b8\", \"_creationTs\": 1656343656, \"_lastUpdateTs\": 1656407942, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Terzo Task per Pantera assonnata\", \"description\": \"Che cosa è la tagmantazione?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null,\n    \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{ \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Non capisco il termine \\\"tagmantazione\\\"\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1656344477, \"_lastUpdateTs\": 1656344477 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"goToAttachment\", \"attributes\": { \"attachment\": \"Scusa per il refuso, intendevo dire \\\"Tagmentazione\\\"\", \"transactionID\": \"0\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"1\", \"_creationTs\": 1656344583, \"_lastUpdateTs\": 1656344583 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"myAnswer\", \"attributes\": { \"answer\": \"E' una tecnica impiegata nel processo di sequenziamento del DNA\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"2\", \"_creationTs\": 1656344745, \"_lastUpdateTs\": 1656344745 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Ciao, sono scoiattolo ardito e non penso di avere la risposta...posso avere dell'aiuto?\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"3\", \"_creationTs\": 1656401711, \"_lastUpdateTs\": 1656401711 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"goToTag\", \"attributes\": { \"tag\": \"TAGMENTAZIONE\", \"transactionID\": \"3\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"4\", \"_creationTs\": 1656402034, \"_lastUpdateTs\": 1656402034 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"rightAnswer\", \"attributes\": { \"message\": \"Bravo, la risposta è corretta!\", \"transactionID\": \"2\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"5\", \"_creationTs\": 1656403752, \"_lastUpdateTs\": 1656403752 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"myAnswer\", \"attributes\": { \"answer\": \"adesso penso di saperlo\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"6\", \"_creationTs\": 1656407942, \"_lastUpdateTs\": 1656407942 }]\n}, { \"id\": \"62b9cee4925841535833b6b9\", \"_creationTs\": 1656344293, \"_lastUpdateTs\": 1656344293, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Quarto task per i miei studenti\", \"description\": \"Che cosa si intende per sequenziamento del DNA?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62b9cf34925841535833b6ba\", \"_creationTs\": 1656344373, \"_lastUpdateTs\": 1656344373, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Quinto task\", \"description\": \"Che cosa è la drosophila?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62bac539925841535833b6bb\", \"_creationTs\": 1656407353, \"_lastUpdateTs\": 1656407353, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Nuovo task rivolto ai miei 2 studenti\", \"description\": \"Che cosa è il DNA?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62bae5bc925841535833b6bc\", \"_creationTs\": 1656415677, \"_lastUpdateTs\": 1656415677, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Domanda per Scoliattolo Ardito e Pantera Assonnata\", \"description\": \"Come si risolvono le equazioni di secondo grado?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62bae7a9925841535833b6bd\", \"_creationTs\": 1656416169, \"_lastUpdateTs\": 1656416303, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Nuova domanda per SA e PA\", \"description\": \"Che cosa sono le molecole?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{ \"taskId\": \"62bae7a9925841535833b6bd\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non saprei\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1656416303, \"_lastUpdateTs\": 1656416303 }] }, {\n    \"id\": \"62bb106e925841535833b6be\", \"_creationTs\": 1656426606, \"_lastUpdateTs\": 1656426606, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Nuovo task di test\", \"description\": \"Il numero 1 è primo?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\",\n    \"transactions\": []\n}]","import React, { useState, useEffect } from 'react'\nimport {\n    Button, Collapse, Form, FormText,\n    Card, CardHeader, CardTitle, CardSubtitle, CardBody, CardFooter,\n    FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport moment from 'moment';\nimport {transactionFieldMapper, studentsTransactionOptions} from './common';\n\nconst fakeStudentTransactions = [\n    {\n       \"taskId\":\"62a9ff27925841535833b6a1\",\n       \"label\":\"needClarification\",\n       \"attributes\":{\n          \"note\":\"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n       },\n       \"actioneerId\":\"928\",\n       \"messages\":[\n          \n       ],\n       \"id\":\"0\",\n       \"_creationTs\":1655835879,\n       \"_lastUpdateTs\":1655835879\n    },\n    {\n       \"taskId\":\"62a9ff27925841535833b6a1\",\n       \"label\":\"notSure\",\n       \"attributes\":{\n          \"note\":\"Non saprei rispondere\"\n       },\n       \"actioneerId\":\"928\",\n       \"messages\":[\n          \n       ]\n    }\n]\n\n\n\nconst StudentTransaction = (props) => {\n    \n    const {transaction} = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction==null? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] = \n    useState(transaction==null? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice>=0 &&  props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            currentSelectedStudentText)\n    }\n\n    const onChangeStudentText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentStudentText(ev.target.value);\n        props.onUpdate && currentSelectedChoice>=0 &&  props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    const getAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        const _done = props.readonly ? \"_done\" : \"\"\n        const choice = `${studentsTransactionOptions[currentSelectedChoice]}${_done}`\n        return currentSelectedChoice>=0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`comment_on_${choice}`)}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => onChangeStudentText(ev)}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackContent = () =>\n    {\n        const {teacherFeedback, transaction} = props;\n        if (teacherFeedback==null) return null;\n        console.log(\"TF FeedbackTransaction ID:\",teacherFeedback);\n        \n        const teacherText = teacherFeedback[\"attributes\"][transactionFieldMapper[teacherFeedback[\"label\"]]]\n        return teacherText;\n    }\n\n    const renderTeacherAnswerText = () => {\n        const teacherFeedbackContent = getTeacherFeedbackContent()\n\n        return teacherFeedbackContent &&  <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={teacherFeedbackContent}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    const _done = props.readonly ? \"_done\" : \"\"\n    const answerLabel = `selectAnswer${_done}`\n\n    return (\n        <>\n         { props.transaction &&\n               <div style={{display:\"flex\",  justifyContent: \"flex-end\"}}>\n               <Label>\n                   <b>{moment(props.transaction._creationTs).format(\"DD/MM/YYYY - hh:mm\")}</b>\n               </Label>\n               </div>\n            }\n        <Form style={{ border: \"1px solid #007bff\", padding: \"10px\", margin: \"10px\" }}>\n           \n           \n            <Label>\n                <b>{t(answerLabel)}</b>\n            </Label>\n            {renderAnswerOptions()}\n            {renderStudentAnswerText()}\n            {renderTeacherAnswerText()}\n        </Form>\n        </>)\n}\n\nexport const StudentTask = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const [transactionData, setTransactionData] = useState(null);\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [feedbackTeacherTransactions, setFeedbackTeacherTransactions] = useState({})\n    const [newTransactionFormVisibile, setNewTransactionFormVisible] = useState(false);\n    const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n    useEffect(() => {\n        const {task} = props;\n        console.log(\"Student task:\", task);\n        let ftd = {}\n        for (let i=0;i<task.transactions.length;i++)\n        {\n          const transactionID = task.transactions[i][\"attributes\"][\"transactionID\"];\n          if (transactionID!=null)\n          {\n              ftd[transactionID] = task.transactions[i]\n          }\n        }\n          console.log(\"SC: setFeedbackTeacherTransactions to->: \", ftd)\n          setFeedbackTeacherTransactions(ftd);\n          setFilteredTransactions(getFilteredTransactions());\n          // lo studente puo' rispondere solo dopo che è arrivata una nuova richiesta\n          // da parte del docente oppure un feedback\n          setNewTransactionFormVisible(true);\n          const transactionsIDwithFeedback = Object.keys(ftd);\n          console.log(`SC: FilteredTransactionLen: task:${task[\"id\"]}`,filteredTransactions.length);\n          console.log(\"SC: NewTransactionFormVisible\", newTransactionFormVisibile);\n          for (let i=0;i<filteredTransactions.length;i++)\n          { // se manca anche solo un feedback allo studente \n            // non gli è consentito inoltrare nuove richieste\n            if (!transactionsIDwithFeedback.includes(filteredTransactions[i][\"id\"]))\n            {\n              setNewTransactionFormVisible(false)\n            }\n          }\n          setNewTransactionFormVisible(filteredTransactions.length== Object.keys(ftd).length);\n        \n\n      }, [props.task])\n\n    const createNewTransaction = () =>\n    {\n        if (transactionData==null) return;\n        const taskId = props.task[\"id\"];\n        const payload = { \"taskId\" : taskId, \"content\" : {\"label\" :transactionData[\"label\"], \n        \"message\" : transactionData[\"message\"]}}\n        console.log(\"SAGA2 request da StudentComponents di willCreateTransaction\");\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n       }\n    \n    const getFilteredTransactions = () =>\n    {  \n        console.log(`SC Transaction: (Task ${props.task[\"id\"]}):`, props.task.transactions);\n        if (props.task.transactions==null) return [];\n\n        const ft = props.task.transactions.filter((transaction) =>\n        {\n            //console.log(\"Transaction: (Filter):\", transaction);\n            // mostro solo le transactions create dallo studente compatilmente con le\n            // label definite dalla app logic\n            return studentsTransactionOptions.includes(transaction[\"label\"]) \n            && userProfile!=null && userProfile[\"id\"]== transaction[\"actioneerId\"]\n            \n        })\n        // ordinate cronologicamente dalla più recente alla meno recente\n        ft.sort((t1,t2) => (t1[\"_creationTs\"]- t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const renderTransactions = () => {\n        //const filteredTransactions =  getFilteredTransactions()\n        console.log(\"Transaction: (filtered):\", filteredTransactions);\n        return filteredTransactions.map((transaction) => {\n            return <StudentTransaction readonly transaction={transaction} \n                    teacherFeedback={feedbackTeacherTransactions[transaction[\"id\"]]} />\n        })\n    }\n\n    const renderNewTransaction = () => {\n         return <StudentTransaction onUpdate = { (label,message) => setTransactionData({label,message})} />\n    }\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs).format(\"DD/MM/YYYY - hh:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                            {newTransactionFormVisibile && renderNewTransaction()}\n                        </Form>\n                    </CardBody>\n                    <CardFooter>\n                        <Button color=\"primary\" onClick={(ev) => {createNewTransaction() }}>{t(\"send\")}</Button>\n                    </CardFooter>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { StudentTask } from '../components/StudentComponents';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { fakeTask } from '../components/common';\n\n\n//@audit LocalFrontend\n//const tasks = [fakeTask];\n\nexport const StudentDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const tasks =  useSelector(UserTasksSelectors.getTasks);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(UserTasksActions.willGetUserProfile());\n        dispatch(UserTasksActions.willLoadTasks());\n      }, [])\n\n   \n    const renderTasks = () =>\n    {\n        return tasks && tasks.map((task,index) => <StudentTask task={task} key={index} />)\n    }\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"student_area\" showMenu={true} />\n            <SideBar active=\"student_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                {renderTasks()}\n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {\n    Button, Collapse, Form, Nav, Navbar, NavbarBrand,\n    FormText, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardSubtitle, CardHeader, CardTitle, CardBody, CardFooter, FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { transactionFieldMapper, studentsTransactionOptions, teachersTransactionOptions } from './common';\nimport { fakeTask } from '../components/common';\nimport moment from 'moment';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction } from '../store/slices/userTasks'\n\n// link timeline drosophila\n//https://beta.riale.ideab3.it/public/a6563273-863b-4e60-8b05-c6b41b332b42\n\nconst TeacherFeedback = (props) => {\n    const { transaction } = props;\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : teachersTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedTeacherText, setCurrentTeacherText] =\n        useState(\"\") //(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n    const dispatch = useDispatch();\n\n    const createFeedbackTransaction = () => {\n        if (currentSelectedChoice < 0) return;\n        const taskId = props.transaction[\"taskId\"];\n        const payload = {\n            \"taskId\": taskId, \"content\": {\n                \"label\": teachersTransactionOptions[currentSelectedChoice],\n                \"message\": currentSelectedTeacherText,\n                \"transactionID\": props.transaction[\"id\"]\n            }\n        }\n        console.log(\"Feedback payload:\", payload);\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n    }\n\n    const renderTeacherFeedbackOptions = () => {\n        return teachersTransactionOptions.map((message, index) => {\n            return getTeacherFeedbackOption(\"teacherChoice\", t(message), index);\n        })\n    }\n\n    const renderTeacherAnswerText = () => {\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(`teacher_comment_on_${teachersTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={false}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => { onChangeTeacherText(ev) }}\n                    value={currentSelectedTeacherText}\n                />\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"10px\", justifyContent: \"flex-end\" }}>\n                <Button onClick={() => createFeedbackTransaction()} color=\"primary\">{t(\"send\")}</Button>\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected feedback choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(teachersTransactionOptions[currentSelectedChoice],\n            currentSelectedTeacherText)\n    }\n\n    const onChangeTeacherText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentTeacherText(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(teachersTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    return <>\n    <div style={{ marginTop: \"20px\" }}>\n        <Label><b>{t(\"send_feedback_to_student\")}</b></Label>\n    </div>\n        {renderTeacherFeedbackOptions()}\n        {renderTeacherAnswerText()}\n    </>\n\n}\n\nconst TeacherTransaction = (props) => {\n\n    const { transaction } = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const transactionActioneer = useSelector(StudentsProfileSelector.getStudentDetailsByWenetID(transaction && transaction[\"actioneerId\"]));\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] =\n        useState(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            currentSelectedStudentText)\n    }\n\n    const onChangeStudentText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentStudentText(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    const getStudentAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`teacher_comment_on_${studentsTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={true}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => { }}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackContent = () => {\n        const { teacherFeedback, transaction } = props;\n        if (teacherFeedback == null) return null;\n        console.log(\"TF FeedbackTransaction ID:\", teacherFeedback);\n\n        const teacherText = t(`${teacherFeedback[\"label\"]}`) + \" \" + \n                            teacherFeedback[\"attributes\"][transactionFieldMapper[teacherFeedback[\"label\"]]]\n        return teacherText;\n    }\n\n    const renderTeacherAnswerText = () => {\n        return <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={getTeacherFeedbackContent()}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getStudentAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    return (\n        <>\n            {props.transaction &&\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    {transactionActioneer ?\n                        <Label>\n                            <b>{transactionActioneer[\"name\"]} {` `} {transactionActioneer[\"surname\"]}\n                                {' - '} {moment(props.transaction._creationTs).format(\"DD/MM/YYYY - hh:mm\")}</b>\n                        </Label>\n                        :\n                        <Label>\n                            <b>{moment(props.transaction._creationTs).format(\"DD/MM/YYYY - hh:mm\")}</b>\n                        </Label>}\n\n                </div>\n            }\n            <Form style={{ border: \"1px solid #007bff\", padding: \"10px\", margin: \"10px\" }}>\n\n\n                <Label>\n                    <b>{t(\"teacher_selectAnswer\")}</b>\n                </Label>\n                {renderStudentAnswerOptions()}\n                {renderStudentAnswerText()}\n                {props.teacherFeedback != null ? renderTeacherAnswerText() :\n                    <TeacherFeedback transaction={props.transaction} />\n                }\n\n            </Form>\n        </>)\n}\n\nexport const TaskCreator = (props) => {\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [currentTaskTitle, setCurrentTaskTitle] = useState(\"\");\n    const [currentTaskDescription, setCurrentTaskDescription] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const createNewTask = (ev) => {\n        dispatch(UserTasksActions.willCreateTask({\n            \"name\": currentTaskTitle,\n            \"description\": currentTaskDescription\n        }))\n    }\n\n    const onChangeTaskTitle = (ev) => {\n        setCurrentTaskTitle(ev.target.value)\n    }\n\n    const onChangeTaskDescription = (ev) => {\n        setCurrentTaskDescription(ev.target.value)\n    }\n\n    return (\n\n        <Form>\n            <FormGroup>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Label for=\"teacherTaskTitle\">\n                        <b>{t(\"teacherTaskTitle\")}</b>\n                    </Label>\n                    <Input\n                        id=\"teacherTaskTitle\"\n                        name=\"text\"\n                        type=\"text\"\n                        onChange={(ev) => onChangeTaskTitle(ev)}\n                        value={currentTaskTitle}\n                    />\n                </div>\n            </FormGroup>\n            <FormGroup>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Label for=\"teacherTaskDescription\">\n                        <b>{t(\"teacherTaskDescription\")}</b>\n                    </Label>\n                    <Input\n                        id=\"teacherTaskDescription\"\n                        name=\"text\"\n                        type=\"textarea\"\n                        onChange={(ev) => onChangeTaskDescription(ev)}\n                        value={currentTaskDescription}\n                    />\n                </div>\n            </FormGroup>\n            <FormGroup>\n                <div style={{ display: \"flex\", \"justifyContent\": \"space-between\" }}>\n                    <Button onClick={(ev) => { props.onClose() }}>Annulla</Button>\n                    <Button color=\"primary\" onClick={(ev) => { createNewTask(ev); props.onClose() }}>{t(\"send\")}</Button>\n                </div>\n            </FormGroup>\n        </Form>\n    )\n}\n\n//@audit Local Frontend DEV\n//const tasks = [fakeTask];\n\nexport const TeacherTasksViewer = (props) => {\n\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const tasks =  useSelector(UserTasksSelectors.getTasks);\n\n    useEffect(() => {\n        dispatch(UserTasksActions.willGetUserProfile());\n        dispatch(UserTasksActions.willLoadTasks());\n      }, [])\n\n    const renderTaskCreator = () => {\n        return <Modal isOpen={isOpen}>\n            <ModalHeader>{t(\"new_question\")}</ModalHeader>\n            <ModalBody>\n                <TaskCreator onClose={() => setIsOpen(false)} />\n            </ModalBody>\n        </Modal>\n    }\n    const renderTasks = () => {\n        return tasks && tasks.map((task, index) => <TeacherTaskViewer task={task} key={index} />)\n    }\n\n    return (\n        <>\n            <Navbar style={{ marginBottom: \"10px\" }} className=\"mb-0 text-white\" color=\"primary\" light expand=\"md\">\n                <NavbarBrand className=\"text-white font-weight-bold\" href=\"/\">{t(\"answers_and_questions\")}</NavbarBrand>\n                <Nav className=\"mr-auto\" navbar>\n                </Nav>\n                <Nav navbar>\n                    <Button onClick={(ev) => { console.log(\"Click new Question\"); setIsOpen(true) }}\n                        style={{ height: 34, marginRight: 12, marginTop: 6, marginBottom: 6, borderWidth: 1, borderColor: 'white', borderStyle: 'solid', borderRadius: 4 }} color=\"primary\">\n                        <FontAwesomeIcon icon={faPlus} />{t(\"new_question\")}</Button>\n\n                </Nav>\n\n            </Navbar>\n            {isOpen && renderTaskCreator()}\n            {renderTasks()}\n        </>\n    )\n}\n\nexport const TeacherTaskViewer = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [feedbackTeacherTransactions, setFeedbackTeacherTransactions] = useState({})\n\n    useEffect(() => {\n        const { task } = props;\n        console.log(\"Student task:\", task);\n        let ftd = {}\n        for (let i = 0; i < task.transactions.length; i++) {\n            const transactionID = task.transactions[i][\"attributes\"][\"transactionID\"];\n            if (transactionID != null) {\n                ftd[transactionID] = task.transactions[i]\n            }\n\n            console.log(\"setFeedbackTeacherTransactions to->: \", ftd)\n            setFeedbackTeacherTransactions(ftd);\n        }\n\n    }, [props.task])\n\n    const getFilteredTransactions = () => {\n        console.log(\"Transaction: (Task):\", props.task.transactions);\n        if (props.task.transactions == null) return [];\n\n        const ft = props.task.transactions.filter((transaction) => {\n            console.log(\"Transaction: (Filter):\", transaction);\n            // mostro tutte le transactions create dagli compatilmente con le\n            // label definite dalla app logic\n            return studentsTransactionOptions.includes(transaction[\"label\"])\n        })\n        // ordinate cronologicamente dalla più recente alla meno recente\n        ft.sort((t1, t2) => (t1[\"_creationTs\"] - t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const renderTransactions = () => {\n        const filteredTransactions = getFilteredTransactions()\n        console.log(\"Transaction: (filter):\", filteredTransactions);\n        return filteredTransactions.map((transaction, index) => {\n            return <TeacherTransaction readonly transaction={transaction}\n                teacherFeedback={feedbackTeacherTransactions[transaction[\"id\"]]} key={index} />\n        })\n    }\n\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs).format(\"DD/MM/YYYY - hh:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                        </Form>\n                    </CardBody>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction} from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\nconst fakeProfiles = [\n  {\"passcode\":\"VPFYBRSX\",\"name\":\"Pantera\",\n\"surname\":\"Assonnata\",\"wenet_id\":928,\"id\":\"B+\",\n\"description\":\"Profilo B+\",\"teacher_wenet_id\":671},\n{\"passcode\":\"APFYBRSX\",\"name\":\"Leone\",\n\"surname\":\"Indaffarato\",\"wenet_id\":928,\"id\":\"C+\",\n\"description\":\"Profilo C+\",\"teacher_wenet_id\":671}\n\n] as any;\n\n\nexport const StudentsProfileViewer = (props:any) =>\n{   \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const studentsProfile = useSelector(StudentsProfileSelector.getStudentsProfile);\n    //const studentsProfile = fakeProfiles;\n\n    const columns = [\n\n      {\n        dataField: 'name',\n        text: t('name'),\n        sort: true\n      },\n\n        {\n          dataField: 'surname',\n          text: t('surname'),\n          sort: true\n        },\n        \n\n        {\n          dataField: 'passcode',\n          text: t('passcode'),\n          sort: true,\n          hidden:false\n        },\n          {\n            dataField: 'id',\n            text: t('profile'),\n            sort: true\n          },\n          {\n            dataField: 'description',\n            text: t('description'),\n            sort: false\n          }\n      ]\n\n    React.useEffect(() => {\n        dispatch(StudentsProfileAction.willLoadStudentsProfile(null))        \n        return () => { }\n      }, []);\n\n    return <>\n     <BootstrapTable bootstrap4 keyField='passcode' data={ \n                      studentsProfile\n                    } \n                    columns={ columns } />\n    </>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TaskCreator, TeacherTasksViewer } from '../components/TeacherComponents';\nimport { StudentsProfileViewer } from '../components/StudentsProfileViewer';\n\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { fakeTask } from '../components/common';\n\n\nexport const TeacherDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [activeTab, setActiveTab] = useState(\"0\");\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(UserTasksActions.willGetUserProfile());\n        //dispatch(UserTasksActions.willLoadTasks());\n      }, [])\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"teacher_area\" showMenu={true} />\n            <SideBar active=\"teacher_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink style={activeTab === '0' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('0'); }}\n                        >\n                            {t(\"students_answers\")}\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={activeTab === '1' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('1'); }}\n                        >\n                            {t(\"students_profile\")}\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId=\"0\">\n                        <TeacherTasksViewer/>\n                    </TabPane>\n                    <TabPane tabId=\"1\">\n                        <StudentsProfileViewer/>\n                    </TabPane>\n                </TabContent>\n\n                \n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button, Form, FormGroup, Label, Input, FormText, Card, CardHeader, CardBody,\n    CardText, CardTitle, CardFooter\n} from 'reactstrap';\n\n\n//https://www.npmjs.com/package/compress-json\nconst WenetConnector = () => {\n    \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [passcode, setPasscode] = useState(null);\n\n    useEffect(()=>{\n         localStorage.setItem(\"passcode\", passcode);\n      }, [passcode])\n\n    const checkPassCode = (passCodeOrig) => {\n\n        //WQBLLIZQ\n        const charset = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n        const passCodeLen = 8\n        try {\n            const passCode = passCodeOrig.trim().toUpperCase();\n            if (passCode.length != passCodeLen) throw (\"Invalid\");\n            let passCodeSum = 0;\n            for (let i = 0; i < passCode.length - 1; i++) {\n                //console.log(\"Indice carattere:\",charset.indexOf(passCode.charAt(i)))\n                passCodeSum += charset.indexOf(passCode.charAt(i))\n            }\n\n            passCodeSum -= charset.indexOf(passCode.charAt(passCodeLen - 1))\n            //console.log(`PasscodeSum check:${passCodeSum}`)\n            const isValid = (passCodeSum % charset.length) == 0\n            setPasscode( isValid ? passCode : null);\n        } catch (error) {\n            setPasscode(null);\n        }\n\n    }\n\n    const onEnterPasscode = (ev) => {\n        console.log(\"entered:\", ev.target.value)\n        checkPassCode(ev.target.value);\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100vh'\n        }}>\n            <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n                <CardHeader style={{\n                    backgroundColor: \"#007bff\",\n                    borderColor: \"#007bff\",\n                    paddingBottom: 0,\n                    color: 'white'\n\n                }}>\n                    <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n                </CardHeader>\n                <CardBody>\n\n\n                    <Input onChange={(ev) => onEnterPasscode(ev)} type=\"text\" name=\"passcode\" \n                    id=\"passcode\" placeholder={t(\"passcode_enter\")} />\n\n                </CardBody>\n                    <CardFooter style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}>\n                    {\n                        passcode && (\n                            <a href={`/connect?passcode=${passcode}`}>{t(\"connect_to_wenet\")}</a>\n                        )\n                    }\n                        \n                    </CardFooter>\n\n            </Card>\n\n\n        </div>\n    );\n}\n\nexport default WenetConnector","import React from \"react\";\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory\n  } from \"react-router-dom\";\n  import { useSelector } from \"react-redux\";\n  import { history } from './store'\n  \n  import RialeDiscussionBoard from './pages/DiscussionDashBoard'\n  import { StudentDashboard } from \"./pages/StudentDashboard\";\n  import { TeacherDashboard } from \"./pages/TeacherDashboard\";\n  import WenetConnector from \"./pages/WenetConnector\";\nexport const AppRouter = () => { \n  return (<ConnectedRouter history={history}>\n  <Switch>\n  <Route path=\"/forum\">\n          <RialeDiscussionBoard />\n    </Route>\n\n    <Route path=\"/student_dashboard\">\n          <StudentDashboard />\n    </Route>\n\n    <Route path=\"/teacher_dashboard\">\n          <TeacherDashboard />\n    </Route>\n\n    <Route path=\"/\">\n          <WenetConnector />\n    </Route>\n  </Switch>\n\n</ConnectedRouter>)\n}","import React from \"react\";\nimport { Provider } from 'react-redux'\nimport { configureStore } from './store'\nimport { AppRouter } from './router';\n\nconst Test = () => { return(<></>)}\nexport default function App() {\n  return (\n    <Provider store={configureStore({})}>\n       <AppRouter/>\n    \n    </Provider >\n  );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: ['tl', 'frontend'],\n    defaultNS: 'tl',\n    fallbackLng: 'it',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport RialeDiscussionBoard from './pages/DiscussionDashBoard';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-comments-section/dist/index.css'\nimport App from './App';\n\n// seutp i18n ---------------\nimport i18n from './i18n';\n\nvar lng = window.navigator['userLanguage']|| window.navigator.language;\nif(lng !== 'it-IT'){\n    i18n.changeLanguage('en-US');\n}else{\n    i18n.changeLanguage('it-IT');\n}\n   \nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n/*\n//https://create-react-app.dev/docs/deployment/\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["store/slices/userTasks.ts","components/Header.tsx","constants.js","components/SideBar.tsx","components/Content.tsx","reportWebVitals.js","pages/DiscussionDashBoard.jsx","api/wenet_api.js","store/sagas/userTasks.js","store/sagas/index.ts","store/index.ts","store/reducers.ts","components/UtilsComponents.tsx","components/common.tsx","components/StudentComponents.jsx","components/SearchBar.tsx","pages/StudentDashboard.jsx","components/TaskTransactionsSummary.tsx","components/TeacherComponents.jsx","components/StudentsProfileViewer.tsx","pages/TeacherDashboard.jsx","pages/WenetConnector.jsx","router.tsx","App.tsx","i18n.js","index.js"],"names":["userTasksSlice","createSlice","name","initialState","user","tasks","offset","limit","total","filteredIds","studentsProfile","isSendingMessage","reducers","willLogin","state","action","willLogout","willGetUserProfile","willLoadTasks","willCreateTask","willCreateTransaction","willLoadStudentsProfile","setFilteredIds","map","payload","clearFilter","console","log","didGetUserProfile","setIsSendingMessage","setTotal","setOffset","didLogout","localStorage","removeItem","didLoadTasks","didLoadStudentsProfile","actions","reducer","selectors","userTasks","wenet_id","profiles","i","length","Header","className","section","showMenu","useTranslation","useSuspense","t","_section","i18n","undefined","React","useState","isOpen","setIsOpen","dispatch","useDispatch","userProfile","useSelector","UserTasksSelectors","Navbar","style","marginBottom","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first","last","DropdownMenu","right","DropdownItem","UserTasksActions","Role","admin","teacher","student","SideBar","active","role","border","width","position","backgroundColor","bottom","top","vertical","NavItem","NavLink","textDecoration","fontWeight","tag","Link","to","icon","faBriefcase","Content","children","fluid","left","reportWebVitals","require","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createNewTask","content","a","fetch","headers","method","body","JSON","stringify","response","text","result","createNewTransaction","logout","sagas","takeLatest","type","put","call","push","json","myJson","select","UserTasksSelector","url","sort","t1","t2","runAllSagas","all","userTasksSagas","history","createBrowserHistory","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","router","connectRouter","userTasksReducer","store","createStore","run","ActivityButton","disabled","rest","isActivityRunning","Button","Spinner","size","AppLoader","props","display","alignItems","justifyContent","height","Card","borderColor","CardHeader","paddingBottom","CardTitle","textAlign","CardBody","margin","transactionFieldMapper","studentsTransactionOptions","teachersTransactionOptions","fakeTasks","slice","StudentTransaction","transaction","indexOf","currentSelectedChoice","setCurrentSelectedChoice","currentSelectedStudentText","setCurrentStudentText","getAnswerOption","group","message","index","FormGroup","check","readonly","Input","value","onChange","ev","target","onUpdate","onChangeSelectedChoice","checked","Label","_done","answerLabel","moment","_creationTs","format","Form","padding","choice","marginTop","for","id","onChangeStudentText","renderStudentAnswerText","teacherFeedbackContent","teacherFeedback","getTeacherFeedbackContent","renderTeacherAnswerText","StudentTask","toggle","transactionData","setTransactionData","feedbackTeacherTransactions","setFeedbackTeacherTransactions","newTransactionFormVisibile","setNewTransactionFormVisible","filteredTransactions","setFilteredTransactions","isDone","setIsDone","useEffect","task","ftd","transactions","transactionID","filteredT","getFilteredTransactions","newTVisible","transactionsIDwithFeedback","Object","keys","includes","isValidTransactionData","ft","filter","renderNewTransaction","goal","taskDescription","description","numFeedbacks","label","taskTitle","taskCreationDate","cursor","alignContent","Badge","CardSubtitle","CardFooter","renderTopicContents","SearchBar","setValue","searchEngine","setSearchEngine","MiniSearch","fields","searchOptions","combineWith","extractField","document","fieldName","Array","isArray","obj","values","join","split","reduce","doc","key","storeFields","addAll","results","search","InputGroup","e","prefix","scoredResult","score","userTasksActions","placeholder","InputGroupAddon","addonType","faSearch","fontSize","faTimes","StudentDashboard","filteredTasks","setFilteredTasks","interval","setInterval","seconds","clearInterval","renderOffsetAndTotalTasksBar","newOffset","loadPrevTasks","loadNextTasks","role_id","IconButton","marginRight","borderWidth","borderStyle","borderRadius","Provider","data-place","data-for","data-tip","fakeProfiles","TaskTransactionsSummary","summaryData","setSummaryData","data","summary","record","studentSummary","columns","dataField","hidden","formatter","cell","bootstrap4","keyField","TeacherFeedback","currentSelectedTeacherText","setCurrentTeacherText","getTeacherFeedbackOption","onChangeTeacherText","createFeedbackTransaction","TeacherTransaction","transactionActioneer","StudentsProfileSelector","getStudentAnswerOption","TaskCreator","currentTaskTitle","setCurrentTaskTitle","currentTaskDescription","setCurrentTaskDescription","required","onChangeTaskTitle","onChangeTaskDescription","onClose","trim","TeacherTasksViewer","faPlus","Modal","ModalHeader","ModalBody","TeacherTaskViewer","amountOfFeedbackToSend","setAmountOfFeedbackToSend","studentsInteractionsSummary","setStudentsInteractionsSummary","activeTab","setActiveTab","getAmountOfFeedbackToSend","summaryR","getStudentsInteractionsSummary","feedbackTransactions","studentWenetId","completed","tabs","background","TabContent","TabPane","tabId","StudentsProfileViewer","StudentsProfileAction","TeacherDashboard","WenetConnector","passcode","setPasscode","setItem","onEnterPasscode","passCodeOrig","charset","toUpperCase","passCode","passCodeSum","charAt","isValid","passCodeLen","error","checkPassCode","href","AppRouter","alert","path","App","use","Backend","initReactI18next","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue","window","navigator","language","changeLanguage","ReactDOM","render","Fragment","getElementById"],"mappings":"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","file":"static/js/main.e5c6223c.chunk.js","sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport { map, includes } from 'lodash'\nimport { fakeTasks } from '../../components/common';\nexport const userTasksSlice = createSlice({\n    name: 'userTasks',\n    initialState: {\n      user:null,\n\n      //@audit INFO in production replace fakeTasks with []\n      tasks: [],\n      offset: 0,\n      limit: 10,\n      total : -1, // -1 -> caricamento in corso\n      filteredIds: null,\n      studentsProfile: [],\n      isSendingMessage: false\n    }\n  ,\n    reducers: {\n     willLogin: (state, action:PayloadAction<any>) => state,\n     willLogout: (state, action:PayloadAction<any>) => state,\n     willGetUserProfile: (state, action:PayloadAction<any>) => state,\n     willLoadTasks: (state, action:PayloadAction<any>) => state,\n     willCreateTask: (state, action:PayloadAction<any>) => state,\n     willCreateTransaction: (state, action:PayloadAction<any>) => state,\n     willLoadStudentsProfile: (state, action:PayloadAction<any>) => state,\n\n     setFilteredIds: (state, action) => {\n      state.filteredIds = map(action.payload, 'id') as any;\n    },\n\n    clearFilter: (state, action: PayloadAction<any>) => {\n      console.log('in clear filter')\n      state.filteredIds = null;\n    },\n      \n     didGetUserProfile: (state, action:PayloadAction<any>) => { \n        state.user = action.payload;\n      },\n\n      setIsSendingMessage:(state, action) =>\n      {\n        state.isSendingMessage = action.payload;\n      },\n\n      setTotal:(state, action) =>\n      {\n        state.total = action.payload;\n      },\n\n      setOffset:(state, action) =>\n      {\n        state.offset = action.payload;\n      },\n\n\n      didLogout:(state) => { \n        state.user = null;\n        state.tasks = [];\n        state.isSendingMessage = false;\n        localStorage.removeItem(\"passcode\");\n      },\n\n      didLoadTasks: (state, action:PayloadAction<any>) =>{\n        state.tasks = action.payload[\"tasks\"];\n        state.offset =  action.payload[\"offset\"];\n        state.total =  action.payload[\"total\"];\n      },\n      didLoadStudentsProfile: (state, action:PayloadAction<any>) =>{\n        state.studentsProfile = action.payload;\n      }\n    }\n});\n\nexport const { actions, reducer } = userTasksSlice;\n\nexport const selectors = {\n\n  getFilteredIds: (state: any) => state.userTasks.filteredIds,\n\n  isLogged: (state:any) => {\n    return state.userTasks.user!=null && localStorage.getItem(\"passcode\")==state.userTasks.user[\"passcode\"];\n  },\n  getTasks: (state:any) => {\n    return state.userTasks.tasks;\n  },\n  getUserProfile: (state:any) => {\n    //return {\"role_id\" : 1, \"name\" : {\"first\" : \"test\", \"last\" : \"test\"}}\n    return state.userTasks.user;\n  },\n  getStudentsProfile: (state:any) => {\n    return state.userTasks.studentsProfile;\n  },\n\n  isSendingMessage: (state:any) => {\n    return state.userTasks.isSendingMessage;\n  },\n\n  getTasksLimit: (state:any) => {\n    return state.userTasks.limit;\n  },\n\n  getTasksTotal: (state:any) => {\n    return state.userTasks.total;\n  },\n\n  getTasksOffset: (state:any) => {\n    return state.userTasks.offset;\n  },\n\n\n  getStudentDetailsByWenetID: (wenet_id:any) => (state:any) => {\n     const profiles = state.userTasks.studentsProfile;\n     for (let i=0;i<profiles.length;i++)\n     {\n       if (profiles[i][\"wenet_id\"]==wenet_id)\n       return profiles[i];\n     }\n     return null;\n  }\n}\n","\nimport React, { useState, useEffect } from 'react'\nimport {\n    Container, Button, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav,\n    NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions as UserTasksActions, selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\nexport const Header = ({ className, section, showMenu = false }: any) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const _section = t(section) != undefined ? t(section) : \"Forum\"\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const dispatch = useDispatch();\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    \n\n    console.log(\"UserProfile:\", userProfile);\n    return (\n        <Navbar style={{marginBottom:\"10px\"}} className={className} color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\">RIALENET - {_section}</NavbarBrand>\n            {showMenu && (<>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    {(\n                        <Nav className=\"mr-auto\" navbar>\n                        </Nav>\n                    )}\n                    <Nav navbar>\n                        { userProfile!=null && userProfile.name!=null &&\n                        <>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle className=\"text-white\" nav caret>{userProfile.name.first}{` `}{userProfile.name.last}</DropdownToggle>\n                                <DropdownMenu right>\n                                <DropdownItem onClick={() => {\n                                            dispatch(UserTasksActions.willLogout(\"\"));\n                                        }}>Logout</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </>\n                        }\n                    </Nav>\n                </Collapse>\n            </>)}\n        </Navbar>\n\n    )\n}\n","export class Role {\n    static admin = 1;\n    static teacher = 2;\n    static student = 3;\n}","import { NavItem, NavLink, Nav } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faHome,\n    faChartPie,\n    faBriefcase,\n    faTimes,\n    faQuestion,\n    faImage,\n    faBook,\n    faCalendarAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { Role } from \"../constants\";\n\nexport const SideBar = ({ active, role }: any) => {\n  \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    console.log(\"Role in sidebar ->\", role, Role.teacher, (role==Role.teacher || role==Role.admin));\n    return (\n        <div style={{\n            border: '0px solid #000',\n            width: '240px',\n            position: 'absolute',\n            backgroundColor: '#f1f1f1',\n            bottom: 0,\n            top: 56\n        }}>\n\n            <Nav vertical className=\"list-unstyled pb-3\">\n                {/* \n                <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                    <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                        style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                        to={\"/forum\"}>\n                        <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"public_area\")}\n                    </NavLink>\n                </NavItem>\n                */}\n                {\n                    (role==Role.student || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"student_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"student_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/student_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"student_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n                {\n                    (role==Role.teacher || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"teacher_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"teacher_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/teacher_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"teacher_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n\n            </Nav>\n        </div>)\n\n}","export const Content = ({ children, className, fluid = false }: any) => {\n  return (\n    <div className={className} style={{\n      border: '0px solid #000',\n      // width: '240px',\n      position: 'absolute',\n      backgroundColor: 'white',\n      bottom: 0,\n      top: 56,\n      left: fluid ? 0 : 240,\n      right: 0\n    }}>\n      {children}\n    </div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { PureComponent, useState, useEffect } from 'react'\nimport { CommentSection } from 'react-comments-section'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation, useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport {\n  Card, CardImg, CardText, CardBody, CardHeader,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst data = [\n  {\n    \"userId\": \"01a\",\n    \"comId\": \"012\",\n    \"fullName\": \"Riya Negi\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n    \"text\": \"Hey, Loved your blog! \",\n    \"replies\": [\n      {\n        \"userId\": \"02a\",\n        \"comId\": \"013\",\n\n        \"fullName\": \"Adam Scott\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Adam&background=random\",\n        \"text\": \"Thanks! It took me 1 month to finish this project but I am glad it helped out someone!🥰\"\n      },\n      {\n        \"userId\": \"01a\",\n        \"comId\": \"014\",\n\n        \"fullName\": \"Riya Negi\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n        \"text\": \"thanks!😊\"\n      }\n    ]\n  },\n  {\n    \"userId\": \"02b\",\n    \"comId\": \"017\",\n    \"fullName\": \"Lily\",\n    \"text\": \"I have a doubt about the 4th point🤔\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Lily&background=random\"\n  },\n  {\n    \"userId\": \"01c\",\n    \"comId\": \"018\",\n    \"fullName\": \"Derek\",\n    \"text\": \"Great explanation!!!\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Derek&background=random\"\n  }\n]\n\nconst md5 = require('md5');\n\n\nconst RialeDiscussionBoard = (props) => {\n  const [comment, setComment] = useState([])\n  const dispatch = useDispatch();\n  \n  const tasks =  useSelector(UserTasksSelectors.getTasks);  //(result == null) ? [] : result[\"tasks\"]\n  const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  \n  const userId = \"01a\"\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n  const name = \"xyz\"\n  const signinUrl = \"/signin\"\n  const signupUrl = \"/signup\"\n  let count = 0\n\n  const query = new URLSearchParams(window.location.search);\n  const passcode = localStorage.getItem(\"passcode\");\n  const passcodeMD5 = query.get(\"passcode\");\n  console.log(\"params:\", passcode);\n  const isAuthenticated = passcodeMD5!=null && md5(passcode)==passcodeMD5;\n\n  \n\n  comment.map(i => { count += 1; i.replies && i.replies.map(i => count += 1) })\n \n  const loadAllTasks = async () => {\n    console.log(\"WENET loading tasks\")\n    try {\n      const url = `/tasks?passcode=${passcode}`\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\"\n        }\n      )\n      console.log(\"WENET authentication response:\", response)\n\n      const result = await response.json();\n      console.log(\"WENET authentication result:\", result)\n\n     \n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          });\n        /*\n        setPosts(\n          tasks.map((task)=> {return(\n           {\"profileImage\" : 'https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg',\n           \"name\" : task[\"goal\"][\"name\"],\n           \"content\" : task[\"goal\"][\"description\"],\n           \"date\" : moment(parseInt(task[\"_creationTs\"])).toDate()\n           } )\n          }\n        )) */\n      }));\n\n    } catch (e) { console.log(\"WENET response error:\", e) }\n  }\n  \n  useEffect(() => {\n    dispatch(UserTasksActions.willGetUserProfile());\n    dispatch(UserTasksActions.willLoadTasks());\n  }, [])\n\n\n  useEffect(() => {\n    if (tasks!=null)\n    {\n\n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          })}));\n    }\n    else setComment([]);\n   \n  }, [tasks])\n\n\n  return (\n    <>\n    <Header className=\"mb-0 text-white\" section=\"public_area\" showMenu={true} />\n      <SideBar active=\"public_area\" role={userProfile!=null? userProfile.role_id : null} />\n      <Content>\n        <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n          <CardHeader style={{ backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n            <CardTitle>{t(\"public_area\")} (n.{count} {t(\"comments\")}) \n              {/*passcode && <div className=\"pull-right\">{passcode}</div>*/}\n            </CardTitle>\n\n          </CardHeader>\n          <CardBody>\n            <CommentSection currentUser={userId && { userId: userId, avatarUrl: avatarUrl, name: name }}\n              commentsArray={comment || []}\n              setComment={setComment} signinUrl={signinUrl} signupUrl={signupUrl} />\n          </CardBody>\n\n        </Card>\n      </Content>\n    </>\n  )\n\n}\n\nexport default RialeDiscussionBoard\n\n\n\n","export const createNewTask = async (content) => {\n    const url = \"/newtask\"\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify({ \"content\": content })  // JSON.stringify(\"PROVA 2 CONTENUTO\")\n        }\n      )\n      console.log(\"SAGA2 API WENET newtask response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 API WENET newtask result:\", result);\n      return result;\n    } catch (e) { console.log(\"WENET API newtask response error:\", e); return null;}\n  }\n\n\n  export const createNewTransaction = async (content) => {\n    const url = `/newtransaction`;\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify({ \"content\": content }) \n        }\n      )\n      console.log(\"SAGA2 (API) WENET newtransaction response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 (API) WENET newtransaction result:\", result)\n      // ricarico tutti i task dopo che ne ho aggiunto\n      //await loadAllTasks();\n      return result;\n    } catch (e) { console.log(\"WENET newtransaction response error:\", e) \n      return null;\n  }\n  }\n\n  export const logout = async () => {\n    const url = `/logout`;\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\",\n        }\n      )\n      console.log(\"SAGA2 (API) logout response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 (API) logout result:\", result)\n      return result;\n    } catch (e) { console.log(\"WENET logout response error:\", e) \n      return null;\n  }\n  }","import { all, call, takeLatest, put, select, take } from \"redux-saga/effects\";\nimport {\n    actions as UserTasksActions,\n    selectors as UserTasksSelector,\n  } from \"../slices/userTasks\";\nimport { push } from 'connected-react-router'\nimport { createNewTask, createNewTransaction, logout } from \"../../api/wenet_api\";\n\nexport function* sagas() {\n  yield takeLatest(UserTasksActions.willGetUserProfile.type, willGetUserProfile)\n  yield takeLatest(UserTasksActions.willLogout.type, willLogout)\n  yield takeLatest(UserTasksActions.willLoadTasks.type, willLoadTasks) \n  yield takeLatest(UserTasksActions.willLoadStudentsProfile.type, willLoadStudentsProfile) \n  \n  yield takeLatest(UserTasksActions.willCreateTask.type, willCreateTask) \n  yield takeLatest(UserTasksActions.willCreateTransaction.type, willCreateTransaction) \n}\n\n\nfunction* willLogout(action) {\n    yield put(UserTasksActions.didLogout());\n   \n    const result = yield call(logout)\n    console.log(\"Logout result:\", result);\n    yield put(push(\"/\"));\n  }\n\n\n  function* willGetUserProfile(action) {\n  \n    const url = `/userprofile`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const userProfile = (response == null) ? null : response\n    yield put(UserTasksActions.didGetUserProfile(userProfile));\n    if (userProfile==null)\n    {yield put(push(\"/logout\"));}\n\n    } catch (error) {\n      yield put(UserTasksActions.didGetUserProfile(null));\n      yield put(push(\"/\"));\n    }\n}\n\n\nfunction* willCreateTask(action) {\n  const content = action.payload; \n  yield put(UserTasksActions.setIsSendingMessage(true));\n  const result = yield call(createNewTask,content)\n  if (result!=null)\n  {\n    console.log(\"SAGA2 willCreateTask result OK. Loading tasks...|\",result);\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n    yield put(UserTasksActions.willLoadTasks()); \n  }\n  else{\n    console.log(\"SAGA2 willCreateNewTask error\");\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n  }\n}\n\nfunction* willCreateTransaction(action) {\n  const content = action.payload; \n  yield put(UserTasksActions.setIsSendingMessage(true));\n  const result = yield call(createNewTransaction,content)\n  if (result!=null)\n  {\n    console.log(\"SAGA2 willCreateTransaction result OK. Loading tasks...|\",result);\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n    yield put(UserTasksActions.willLoadTasks()); \n  }\n  else{\n    console.log(\"SAGA2 willCreateTransaction error\");\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n  }\n}\n\n\n\nfunction* willLoadTasks(action) {\n  console.log(\"SAGA2 called willLoadTasks NEW!\");\n    let offset = action.payload;\n    if (offset==null) offset = yield select(UserTasksSelector.getTasksOffset);\n    const limit =  yield select(UserTasksSelector.getTasksLimit);\n    const url = `/tasks?offset=${offset}&limit=${limit}`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const tasks = (response == null) ? [] : response[\"tasks\"]\n    const offset =  (response == null) ? 0 : response[\"offset\"]\n    const total =  (response == null) ? 0 : response[\"total\"]\n    // Ordino i task dal più recente al piu' vecchio\n    tasks.sort((t1,t2)=> t2[\"_creationTs\"]- t1[\"_creationTs\"]);\n\n    yield put(UserTasksActions.didLoadTasks({tasks, offset, total}));\n  \n    } catch (error) {\n      yield put(UserTasksActions.didLoadTasks({tasks:[], offset:0, total:0}));\n    }\n}\n\nfunction* willLoadStudentsProfile(action) {\n  const url = `/students`;\n  try{\n  const response = yield call(() => fetch(url)\n  .then(response => response.json())\n  .then(myJson => myJson)\n  );\n  const studentsProfile = (response == null) ? [] : response;\n  yield put(UserTasksActions.didLoadStudentsProfile(studentsProfile));\n  } catch (error) {\n    yield put(UserTasksActions.didLoadStudentsProfile([]));\n  }\n}\n\n\n\n\n/*\nconst newTransaction = {\n        \"taskId\": \"62a0b984925841535833b690\",\n        \"label\": \"cannotAnswer\",\n        \"attributes\": {\n            \"reason\": \"....\"\n        },\n        \"actioneerId\": \"studente\",\n        \"messages\": []\n     }\n     */","import { all } from 'redux-saga/effects'\nimport { sagas as userTasksSagas } from './userTasks'\n\nfunction* runAllSagas() {\n    console.log('in root saga')\n    yield all([\n       userTasksSagas()\n    ])\n  }\n\nexport default runAllSagas;","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport runAllSagas from './sagas'\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport { createRootReducer } from './reducers'\nexport const history = createBrowserHistory()\n\nexport const configureStore = (preloadedState: any) => {\n  // const middlewares = [loggerMiddleware, thunkMiddleware]\n\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares: any = [routerMiddleware(history), sagaMiddleware]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  // const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  \n  const rootReducer = createRootReducer(history)\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n \n  if (process.env.NODE_ENV !== 'production' && (module as any).hot) {\n    (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n \n\n  // then run the saga\n  sagaMiddleware.run(runAllSagas)\n\n  return store\n}","import { combineReducers } from 'redux'\n\nimport { reducer as userTasksReducer } from './slices/userTasks'\nimport { connectRouter } from 'connected-react-router'\n\nexport const createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  userTasks: userTasksReducer\n})","import { useSelector } from 'react-redux';\nimport { Button, Spinner, Card, CardHeader, CardBody, CardTitle } from 'reactstrap';\n\nimport { selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\n//https://reactstrap.github.io/?path=/story/home-installation--page\n\nexport const ActivityButton = ({ name, disabled, children, ...rest }: any) => {\n\n  //const isActivityRunning = useSelector(state => UISelectors.activityRunningSelector(state, name));\n  const isActivityRunning = useSelector(UserTasksSelectors.isSendingMessage);\n  return (\n    <>\n      {\n        isActivityRunning ? (\n          < Button disabled {...rest}>{children}  <Spinner size=\"sm\" color=\"light\" /></Button >\n        ) : (\n          < Button disabled={disabled} {...rest}>{children}</Button >\n        )\n      }\n    </>\n  )\n}\n\n\nexport const AppLoader = (props: any) => {\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  return (\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh'\n    }}>\n      <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n        <CardHeader style={{\n          backgroundColor: \"#007bff\",\n          borderColor: \"#007bff\",\n          paddingBottom: 0,\n          color: 'white'\n\n        }}>\n          <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n            <Spinner style={{ margin: \"20px\" }} color=\"primary\" />\n          </div>\n        </CardBody>\n      </Card>\n\n\n    </div>\n  );\n\n}","export const transactionFieldMapper = {\n    \"cannotAnswer\": \"reason\",\n    \"needClarification\": \"note\",\n    \"notSure\": \"note\",\n    \"myAnswer\": \"answer\",\n    \"goToAttachment\": \"attachment\",\n    \"goToTimelinePosition\": \"timelineLink\",\n    \"goToTag\": \"tag\",\n    \"rightAnswer\": \"message\",\n    \"freeAnnotation\" : \"message\"\n}\n\n//export const studentsTransactionOptions = [\"cannotAnswer\", \"needClarification\", \"notSure\", \"myAnswer\"];\nexport const studentsTransactionOptions = [\"myAnswer\", \"needClarification\", \"cannotAnswer\" ];\n\nexport const teachersTransactionOptions = [\"freeAnnotation\", \"goToAttachment\", \"goToTimelinePosition\", \n                                            \"goToTag\", \"rightAnswer\"];\n\n\nconst fakeStudentTransactions = [\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"needClarification\",\n        \"attributes\": {\n            \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ],\n        \"id\": \"0\",\n        \"_creationTs\": 1655835879,\n        \"_lastUpdateTs\": 1655835879\n    },\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"notSure\",\n        \"attributes\": {\n            \"note\": \"Non saprei rispondere\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ]\n    }\n]\n\nexport const fakeTask = {\n    \"id\": \"62a9ff27925841535833b6a1\",\n    \"_creationTs\": 1655308072,\n    \"_lastUpdateTs\": 1656328149,\n    \"taskTypeId\": \"62a87b53925841535833b69d\",\n    \"requesterId\": \"671\",\n    \"appId\": \"xUi1mwCJ0X\",\n    \"goal\": {\n        \"name\": \"Primo Task rivolto allo studente Pantera assonnata\",\n        \"description\": \"Descrizione del primo Task rivolto allo studente Pantera assonnata\",\n        \"keywords\": [\n            \"social interaction\",\n            \"lab\"\n        ]\n    },\n    \"norms\": [],\n    \"attributes\": {},\n    \"closeTs\": null,\n    \"communityId\": \"624703620e5af47df0eed5eb\",\n    \"transactions\": [\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"needClarification\",\n            \"attributes\": {\n                \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"0\",\n            \"_creationTs\": 1655835879,\n            \"_lastUpdateTs\": 1655835879\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"notSure\",\n            \"attributes\": {\n                \"note\": \"Non saprei rispondere\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"1\",\n            \"_creationTs\": 1655884187,\n            \"_lastUpdateTs\": 1655884187\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"myAnswer\",\n            \"attributes\": {\n                \"answer\": \"Proprio non lo so\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"2\",\n            \"_creationTs\": 1655993192,\n            \"_lastUpdateTs\": 1655993192\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"goToTag\",\n            \"attributes\": {\n                \"tag\": \"TAG_HELP\"\n            },\n            \"actioneerId\": \"671\",\n            \"messages\": [],\n            \"id\": \"3\",\n            \"_creationTs\": 1656326636,\n            \"_lastUpdateTs\": 1656326636\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"goToTag\",\n            \"attributes\": {\n                \"tag\": \"TAG_ESOMA\",\n                \"transactionID\": \"0\"\n            },\n            \"actioneerId\": \"671\",\n            \"messages\": [],\n            \"id\": \"4\",\n            \"_creationTs\": 1656328149,\n            \"_lastUpdateTs\": 1656328149\n        }\n    ]\n}\n\n\nconst fakeTasksAll = [{\"id\":\"62cd7e373dd5251c7183553e\",\"_creationTs\":1657634360,\"_lastUpdateTs\":1657634705,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"Protocol\",\"description\":\"What is the protocol followed by the researcher?\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[{\"taskId\":\"62cd7e373dd5251c7183553e\",\"label\":\"needClarification\",\"attributes\":{\"note\":\"Which protocol are you speaking about?\"},\"actioneerId\":\"928\",\"messages\":[],\"id\":\"0\",\"_creationTs\":1657634434,\"_lastUpdateTs\":1657634434},{\"taskId\":\"62cd7e373dd5251c7183553e\",\"label\":\"goToAttachment\",\"attributes\":{\"attachment\":\"protocollo processazione cervelli TEM\",\"transactionID\":\"0\"},\"actioneerId\":\"671\",\"messages\":[],\"id\":\"1\",\"_creationTs\":1657634533,\"_lastUpdateTs\":1657634533},{\"taskId\":\"62cd7e373dd5251c7183553e\",\"label\":\"cannotAnswer\",\"attributes\":{\"reason\":\"Sorry. I have no idea.\"},\"actioneerId\":\"928\",\"messages\":[],\"id\":\"2\",\"_creationTs\":1657634605,\"_lastUpdateTs\":1657634605},{\"taskId\":\"62cd7e373dd5251c7183553e\",\"label\":\"goToTimelinePosition\",\"attributes\":{\"timelineLink\":\"https://beta.riale.ideab3.it/public/a6563273-863b-4e60-8b05-c6b41b332b42?start_time=1635927135000&active_tab=0\",\"transactionID\":\"2\"},\"actioneerId\":\"671\",\"messages\":[],\"id\":\"3\",\"_creationTs\":1657634705,\"_lastUpdateTs\":1657634705}]},{\"id\":\"62c3115b925841535833b6cd\",\"_creationTs\":1656951131,\"_lastUpdateTs\":1656951131,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"Ultimo task\",\"description\":\"non posso  modificarlo!\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[]},{\"id\":\"62c3007a925841535833b6cc\",\"_creationTs\":1656946811,\"_lastUpdateTs\":1656946811,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"Diciasettesima domanda\",\"description\":\"Altra domanda di test per verificare l'ordinamento dei task\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[]},{\"id\":\"62c2feac925841535833b6cb\",\"_creationTs\":1656946348,\"_lastUpdateTs\":1656946348,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"Sedicesima Domanda\",\"description\":\"domanda di prova\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[]},{\"id\":\"62c17639925841535833b6c9\",\"_creationTs\":1656845881,\"_lastUpdateTs\":1656845881,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"L'architettura del PC\",\"description\":\"Che cosa è la ram?\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[]},{\"id\":\"62c06bf9925841535833b6c8\",\"_creationTs\":1656777722,\"_lastUpdateTs\":1656777722,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"Fiumi d'Italia\",\"description\":\"Quanto è lungo il Po?\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[]},{\"id\":\"62bf041f925841535833b6c7\",\"_creationTs\":1656685600,\"_lastUpdateTs\":1656950940,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"I nuraghi\",\"description\":\"A quale periodo storico risalgono i nuraghi della Sardegna?\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[{\"taskId\":\"62bf041f925841535833b6c7\",\"label\":\"myAnswer\",\"attributes\":{\"answer\":\"1800-1200 a.c\"},\"actioneerId\":\"928\",\"messages\":[],\"id\":\"0\",\"_creationTs\":1656757905,\"_lastUpdateTs\":1656757905},{\"taskId\":\"62bf041f925841535833b6c7\",\"label\":\"freeAnnotation\",\"attributes\":{\"message\":\"Studia di più\",\"transactionID\":\"0\"},\"actioneerId\":\"671\",\"messages\":[],\"id\":\"1\",\"_creationTs\":1656950940,\"_lastUpdateTs\":1656950940}]},{\"id\":\"62bde874925841535833b6c3\",\"_creationTs\":1656612980,\"_lastUpdateTs\":1656684725,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"Capitali del mondo\",\"description\":\"Quale è la capitale del Brasile?\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[{\"taskId\":\"62bde874925841535833b6c3\",\"label\":\"cannotAnswer\",\"attributes\":{\"reason\":\"Non capisco\"},\"actioneerId\":\"928\",\"messages\":[],\"id\":\"0\",\"_creationTs\":1656674978,\"_lastUpdateTs\":1656674978},{\"taskId\":\"62bde874925841535833b6c3\",\"label\":\"goToAttachment\",\"attributes\":{\"attachment\":\"i promessiSposi.pdf\",\"transactionID\":\"0\"},\"actioneerId\":\"671\",\"messages\":[],\"id\":\"1\",\"_creationTs\":1656684725,\"_lastUpdateTs\":1656684725}]},{\"id\":\"62bdc8fc925841535833b6c2\",\"_creationTs\":1656604925,\"_lastUpdateTs\":1656604925,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"Task creato in data 30 giugnp\",\"description\":\"prova\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[]},{\"id\":\"62bc1076925841535833b6bf\",\"_creationTs\":1656492150,\"_lastUpdateTs\":1656684902,\"taskTypeId\":\"62a87b53925841535833b69d\",\"requesterId\":\"671\",\"appId\":\"xUi1mwCJ0X\",\"goal\":{\"name\":\"I promessi Sposi\",\"description\":\"Chi è Don Rodrigo?\",\"keywords\":[\"social interaction\",\"lab\"]},\"norms\":[],\"attributes\":{},\"closeTs\":null,\"communityId\":\"624703620e5af47df0eed5eb\",\"transactions\":[{\"taskId\":\"62bc1076925841535833b6bf\",\"label\":\"needClarification\",\"attributes\":{\"note\":\"cioè?\"},\"actioneerId\":\"928\",\"messages\":[],\"id\":\"0\",\"_creationTs\":1656684487,\"_lastUpdateTs\":1656684487},{\"taskId\":\"62bc1076925841535833b6bf\",\"label\":\"goToAttachment\",\"attributes\":{\"attachment\":\"i promessisposi.pdf\",\"transactionID\":\"0\"},\"actioneerId\":\"671\",\"messages\":[],\"id\":\"1\",\"_creationTs\":1656684902,\"_lastUpdateTs\":1656684902}]}]\n\nexport const fakeTasks = fakeTasksAll.slice(9,10)","import React, { useState, useEffect } from 'react'\nimport {\n    Button, Collapse, Form, FormText, Badge,\n    Card, CardHeader, CardTitle, CardSubtitle, CardBody, CardFooter,\n    FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport moment from 'moment';\nimport {ActivityButton} from './UtilsComponents';\n\nimport { transactionFieldMapper, studentsTransactionOptions } from './common';\n\nconst fakeStudentTransactions = [\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"needClarification\",\n        \"attributes\": {\n            \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ],\n        \"id\": \"0\",\n        \"_creationTs\": 1655835879,\n        \"_lastUpdateTs\": 1655835879\n    },\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"notSure\",\n        \"attributes\": {\n            \"note\": \"Non saprei rispondere\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ]\n    }\n]\n\n\n\nconst StudentTransaction = (props) => {\n\n    const { transaction } = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] =\n        useState(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && ev.target.value >= 0 && \n        props.onUpdate(studentsTransactionOptions[ev.target.value],\n            currentSelectedStudentText)\n    }\n\n    const onChangeStudentText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentStudentText(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && \n        props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    const getAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        const _done = props.readonly ? \"_done\" : \"\"\n        const choice = `${studentsTransactionOptions[currentSelectedChoice]}${_done}`\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`comment_on_${choice}`)}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => onChangeStudentText(ev)}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackContent = () => {\n        const { teacherFeedback, transaction } = props;\n        if (teacherFeedback == null) return null;\n        console.log(\"TF FeedbackTransaction ID:\", teacherFeedback);\n        const teacherText = t(`student_comment_on_${teacherFeedback[\"label\"]}`) + \" \" +\n            teacherFeedback[\"attributes\"][transactionFieldMapper[teacherFeedback[\"label\"]]]\n        return teacherText;\n    }\n\n    const renderTeacherAnswerText = () => {\n        const teacherFeedbackContent = getTeacherFeedbackContent()\n\n        return teacherFeedbackContent && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={teacherFeedbackContent}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    const _done = props.readonly ? \"_done\" : \"\"\n    const answerLabel = `selectAnswer${_done}`\n\n    return (\n        <>\n            {props.transaction &&\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <Label>\n                        <b>{moment(props.transaction._creationTs*1000).format(\"DD/MM/YYYY - HH:mm\")}</b>\n                    </Label>\n                </div>\n            }\n            <Form style={props.readonly ? \n            { border: \"1px solid #00FF11\", padding: \"10px\", margin: \"10px\" } :\n            { border: \"1px solid #FF0000\", padding: \"10px\", margin: \"10px\" }\n            }>\n\n\n                <Label>\n                    <b>{t(answerLabel)}</b>\n                </Label>\n                {renderAnswerOptions()}\n                {renderStudentAnswerText()}\n                {renderTeacherAnswerText()}\n            </Form>\n        </>)\n}\n\nexport const StudentTask = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const [transactionData, setTransactionData] = useState(null);\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [feedbackTeacherTransactions, setFeedbackTeacherTransactions] = useState({})\n    const [newTransactionFormVisibile, setNewTransactionFormVisible] = useState(false);\n    const [filteredTransactions, setFilteredTransactions] = useState([]);\n    const [isDone, setIsDone] = useState(false);\n\n    useEffect(() => {\n        const { task } = props;\n        console.log(\"Student task:\", task);\n        let ftd = {}\n        let isDone = false;\n        for (let i = 0; i < task.transactions.length; i++) {\n            const transactionID = task.transactions[i][\"attributes\"][\"transactionID\"];\n            // mappo solamente le feedback transaction riferite alle transaction che hanno\n            // come actioneerId lo studente correntemente loggato\n            if (transactionID != null &&\n                userProfile != null && userProfile[\"id\"] == task.transactions[transactionID][\"actioneerId\"]\n            ) {\n                ftd[transactionID] = task.transactions[i]\n                // setto come concluso il task se almeno un feedback del docente indica che la risposta è esatta\n                if (ftd[transactionID][\"label\"]==\"rightAnswer\")\n                {isDone= true;}\n            }\n        }\n\n        const filteredT = getFilteredTransactions()\n\n        // lo studente puo' rispondere solo dopo che è arrivata una nuova richiesta\n        // da parte del docente oppure un feedback\n        let newTVisible = true;\n        const transactionsIDwithFeedback = Object.keys(ftd);\n        console.log(`SC: FilteredTransactionLen: task:${task[\"id\"]}`, filteredT.length);\n\n        for (let i = 0; i < filteredT.length; i++) {\n            // se manca anche solo un feedback allo studente \n            // non gli è consentito inoltrare nuove richieste\n            if (!transactionsIDwithFeedback.includes(filteredT[i][\"id\"])) {\n                newTVisible = false;\n                break;\n            }\n        }\n\n        setNewTransactionFormVisible(newTVisible);\n        setFilteredTransactions(filteredT);\n        setFeedbackTeacherTransactions(ftd);\n        setIsDone(isDone);\n\n        console.log(\"SC: setFeedbackTeacherTransactions to->: \", ftd)\n        console.log(\"SC: NewTransactionFormVisible\", newTVisible);\n\n    }, [props.task])\n\n    const createNewTransaction = () => {\n        if (!isValidTransactionData()) return;\n\n        const taskId = props.task[\"id\"];\n        const payload = {\n            \"taskId\": taskId, \"content\": {\n                \"label\": transactionData[\"label\"],\n                \"message\": transactionData[\"message\"]\n            }\n        }\n        console.log(\"SAGA2 request da StudentComponents di willCreateTransaction\");\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n    }\n\n    const isValidTransactionData = () =>\n    {\n        return (transactionData != null && transactionData[\"label\"]!=null)\n    }\n\n    const getFilteredTransactions = () => {\n        console.log(`SC Transaction: (Task ${props.task[\"id\"]}):`, props.task.transactions);\n        if (props.task.transactions == null) return [];\n\n        const ft = props.task.transactions.filter((transaction) => {\n            //console.log(\"Transaction: (Filter):\", transaction);\n            // mostro solo le transactions create dallo studente compatilmente con le\n            // label definite dalla app logic\n            return studentsTransactionOptions.includes(transaction[\"label\"])\n                && userProfile != null && userProfile[\"id\"] == transaction[\"actioneerId\"]\n\n        })\n        // ordinate cronologicamente dalla più recente alla meno recente\n        ft.sort((t1, t2) => (t1[\"_creationTs\"] - t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const renderTransactions = () => {\n        //const filteredTransactions =  getFilteredTransactions()\n        console.log(\"Transaction: (filtered):\", filteredTransactions);\n        return filteredTransactions.map((transaction) => {\n            return <StudentTransaction readonly transaction={transaction}\n                teacherFeedback={feedbackTeacherTransactions[transaction[\"id\"]]} />\n        })\n    }\n\n    const renderNewTransaction = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const numFeedbacks = Object.keys(feedbackTeacherTransactions).length;\n        return (  <> \n        {(numFeedbacks>0) && \n            <div style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n              {t(\"question_reproposal\")}: {taskDescription}\n            </div>\n        }  \n        \n        <StudentTransaction onUpdate={(label, message) => setTransactionData({ label, message })} />\n        </> \n        \n        )\n        \n    }\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs*1000).format(\"DD/MM/YYYY - HH:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                           { newTransactionFormVisibile && !isDone &&\n                            <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: (filteredTransactions.length>0 ?\"#FF0000\" : \"orange\") }}>\n                                {t(filteredTransactions.length>0 ? \"teacherFeedback\" : \"new_question\")}\n                            </Badge>\n                            }\n                             { isDone &&\n                            <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: \"#00AA00\" }}>\n                                {t(\"rightAnswer\")}\n                            </Badge>\n                            }\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                            {newTransactionFormVisibile && !isDone && renderNewTransaction()}\n                        </Form>\n                    </CardBody>\n                    <CardFooter>\n                        {\n                            newTransactionFormVisibile && isValidTransactionData() &&\n                            <div style={{ display: \"flex\", marginTop: \"10px\", justifyContent: \"flex-end\" }}>\n                                <ActivityButton color=\"primary\" onClick={(ev) => { createNewTransaction() }}>{t(\"send\")}</ActivityButton>\n                            </div>\n                        }\n\n                    </CardFooter>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","// import Autosuggest from 'react-autosuggest';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { selectors as UserTasksSelectors } from \"../store/slices/userTasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport MiniSearch from \"minisearch\";\nimport { filter } from \"lodash\";\n// import Select from 'react-select'\n// import CreatableSelect from 'react-select/creatable';\nimport { InputGroup, InputGroupAddon, Button, Input } from \"reactstrap\";\nimport { actions as userTasksActions } from \"../store/slices/userTasks\";\nimport { useTranslation } from 'react-i18next';\n\nexport const SearchBar = (props:any) => {\n  //Get all experiments for index\n  const tasks = props.tasks //useSelector(UserTasksSelectors.getTasks);\n\n  // const [suggestions, setSuggestions] = React.useState(experiments);\n  const [value, setValue] = React.useState(\"\");\n  const [searchEngine, setSearchEngine] = React.useState(null as any);\n  const dispatch = useDispatch();\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n  React.useEffect(() => {\n    console.log(\"in constructor\");\n    const tokenize = (x: any) => x.split(/\\W+/);\n\n    setSearchEngine(\n      new MiniSearch({\n        fields: [\"goal.name\",\"goal.description\"], // fields to index for full-text search\n        searchOptions: {combineWith:'AND'},\n        // Custom extractField function that can deal with arrays\n        extractField: (document, fieldName) => {\n          \n          if (Array.isArray(document[fieldName])) {\n            //console.log(\"Trovato_array:\",fieldName, document[fieldName]);\n            //const result = document[fieldName].join(\" \");\n\n            const result = document[fieldName].map((obj:any,index:number) => {\n              if (typeof(obj)=='object') return Object.values(obj).join(' ')\n              else return obj\n            }) \n           // console.log(\"Trovato_array_res:\", result);\n            return result\n          } \n          else {\n            \n            //return document[fieldName];\n            const result = fieldName.split('.').reduce((doc, key) => doc && doc[key], document)\n            console.log(\"SB:Trovato campo per field name:>>\",fieldName, result);\n            return result;\n          }\n        },\n        storeFields: [\"id\",\"goal.name\",  \"goal.description\"], // fields to return with search results\n      })\n    );\n    return () => {};\n  }, []);\n\n  \n  React.useEffect(() => {\n    console.log(\"with tasks: \", Object.values(tasks));\n    if (searchEngine != null) {\n      // Index all documents\n      searchEngine.addAll(Object.values(tasks));\n\n      let results = searchEngine.search(\"onde\");\n      console.log(\"with results: \", results);\n    }\n\n    return () => {};\n  }, [tasks, searchEngine]);\n \n\n  const onChange = (e: any) => {\n    console.log(\"in on change with \", e.target.value);\n    const value = e.target.value;\n    setValue(value);\n    if (value !== \"\") {\n      console.log(\"in onSUggestionFethRequest\", value);\n      const results = searchEngine.search(value, { prefix: true });\n      console.log(\"with search result: \", value, results);\n      const scoredResult = filter(results, (result: any) => {\n        console.log(\"check score: \", result, result.score > 0);\n        return result.score > 0 ? true : false;\n      });\n      // setSuggestions(result);\n      console.log(\"MINISEARCH result: \", results);\n      console.log(\"scored result: \", scoredResult);\n      dispatch(userTasksActions.setFilteredIds(results));\n    } else {\n      // dispatch(CatalogActions.setFilteredIds(null));\n      dispatch(userTasksActions.clearFilter(null));\n    }\n  };\n\n  \n  return (\n    <div\n      style={{\n        width: \"100%\",\n        border: \"0px solid #000\",\n        height: 50,\n        marginBottom: 20,\n      }}\n    >\n\n      <InputGroup>\n        <Input\n          value={value}\n          onChange={onChange}\n          placeholder={t(\"search_tasks\")}\n        />\n        <InputGroupAddon addonType=\"append\">\n          {value == \"\" ? (\n            <Button style={{ width: 50 }} color=\"primary\">\n              <FontAwesomeIcon\n                icon={faSearch}\n                style={{ fontSize: 20 }}\n                color=\"white\"\n              />\n            </Button>\n          ) : (\n            <Button\n              style={{ width: 50 }}\n              onClick={() => {\n                dispatch(userTasksActions.clearFilter(null));\n                setValue(\"\");\n              }}\n              color=\"primary\"\n            >\n              <FontAwesomeIcon\n                icon={faTimes}\n                style={{ fontSize: 20 }}\n                color=\"white\"\n              />\n            </Button>\n          )}\n        </InputGroupAddon>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react'\nimport { Nav, NavbarBrand, Navbar } from 'reactstrap';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { StudentTask } from '../components/StudentComponents';\nimport { IconContext } from \"react-icons\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { HiOutlineRefresh } from \"react-icons/hi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { fakeTask } from '../components/common';\nimport ReactTooltip from \"react-tooltip\";\nimport { SearchBar } from '../components/SearchBar';\nimport { AiOutlineCaretLeft, AiOutlineCaretRight} from \"react-icons/ai\";\n\n//@audit LocalFrontend\n//const tasks = [fakeTask];\n\nexport const StudentDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const tasks = useSelector(UserTasksSelectors.getTasks);\n    const offset = useSelector(UserTasksSelectors.getTasksOffset);\n    const limit = useSelector(UserTasksSelectors.getTasksLimit);\n    const total = useSelector(UserTasksSelectors.getTasksTotal);\n    const [filteredTasks, setFilteredTasks] = useState(tasks);\n    const filteredIds = useSelector(UserTasksSelectors.getFilteredIds);\n    const dispatch = useDispatch();\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    \n    useEffect(() => {\n\n        dispatch(UserTasksActions.willLoadTasks(null));\n\n        const seconds = 10;\n        const interval = setInterval(() => {\n            console.log(`WillLoad task for student every ${seconds} seconds`);\n            dispatch(UserTasksActions.willLoadTasks(null));\n        }, seconds * 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        if (filteredIds == null) setFilteredTasks(tasks)\n        else {\n            setFilteredTasks(tasks.filter((task) => filteredIds.includes(task[\"id\"])));\n        }\n\n    }, [tasks, filteredIds])\n\n\n    const renderTasks = () => {\n        return tasks && filteredTasks && filteredTasks.map((task, index) => <StudentTask task={task} key={index} />)\n    }\n\n    const loadNextTasks = () => \n    { \n        if (tasks==null) return;\n        // 1-10 di 15 -> newOffset = 0 -> 10\n        const newOffset = offset+limit;\n        if (newOffset>=total) return;\n        dispatch(UserTasksActions.willLoadTasks(newOffset));\n    }\n\n    const loadPrevTasks = () => \n    { \n        if (tasks==null) return;\n        const newOffset = offset-limit;\n        if (newOffset<0) return;\n        dispatch(UserTasksActions.willLoadTasks(newOffset));\n    }\n\n    const renderOffsetAndTotalTasksBar = () =>{\n        if (total<0) return `(${t(\"loading\")})`\n        else\n       return <span style={{display:\"flex\", \"justifyContent\" : \"flex-start\"}}>\n       <AiOutlineCaretLeft size={\"1.6em\"} cursor=\"pointer\" color='white' \n       onClick={() => {loadPrevTasks()}}>\n           </AiOutlineCaretLeft> \n      \n       {`${offset+1}-${offset+tasks.length} ${t(\"of\")} ${total}`}\n       <AiOutlineCaretRight size={\"1.6em\"} cursor=\"pointer\" color='white' \n       onClick={() => {loadNextTasks()}}></AiOutlineCaretRight> \n      \n       </span>\n    }\n\n    const renderContentHeader = () => {\n        return <Navbar style={{ marginTop: \"10px\", marginBottom: \"10px\" }} className=\"mb-0 text-white\" color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\">{t(\"answers_and_questions\")}{` `}{renderOffsetAndTotalTasksBar()}</NavbarBrand>\n            <Nav className=\"mr-auto\" navbar>\n            </Nav>\n            <Nav navbar>\n                <IconButton\n                    onClick={() => { dispatch(UserTasksActions.willLoadTasks(0)); }}\n                    style={{ height: 34, marginRight: 12, marginTop: 6, marginBottom: 6, borderWidth: 1, borderColor: 'white', borderStyle: 'solid', borderRadius: 4 }}\n                >\n                    <IconContext.Provider value={{ color: \"white\", className: \"global-class-name\" }}>\n                        <HiOutlineRefresh color=\"white\" data-place=\"top\"\n                            data-for=\"studentdashboard\"\n                            data-tip={t(\"refresh\")}\n                        />\n                    </IconContext.Provider>\n                </IconButton>\n            </Nav>\n            <ReactTooltip id=\"studentdashboard\" />\n        </Navbar>\n    }\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"student_area\" showMenu={true} />\n            <SideBar active=\"student_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                {renderContentHeader()}\n                <div style={{ margin: \"10px\" }} >\n                    <SearchBar tasks={tasks} />\n                </div>\n                {renderTasks()}\n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\nimport { Badge } from 'reactstrap'\n\n\n\nconst fakeProfiles = [\n  {\n    \"passcode\": \"VPFYBRSX\", \"name\": \"Pantera\",\n    \"surname\": \"Assonnata\", \"wenet_id\": 928, \"id\": \"B+\",\n    \"description\": \"Profilo B+\", \"teacher_wenet_id\": 671\n  },\n  {\n    \"passcode\": \"APFYBRSX\", \"name\": \"Scoiattolo\",\n    \"surname\": \"Ardito\", \"wenet_id\": 1020, \"id\": \"C+\",\n    \"description\": \"Profilo C+\", \"teacher_wenet_id\": 671\n  }\n\n] as any;\n\n\nexport const TaskTransactionsSummary = (props: any) => {\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  const dispatch = useDispatch();\n  //const studentsProfile = useSelector(StudentsProfileSelector.getStudentsProfile);\n  const studentsProfile = fakeProfiles;\n\n  const [summaryData, setSummaryData] = useState([] as any)\n\n  useEffect(() => {\n    let data = []\n    const { summary } = props;\n\n    for (let i = 0; i < studentsProfile.length; i++) {\n      let record = { ...studentsProfile[i] }\n      console.log(\"summary (TT)\", props.summary);\n      const studentSummary = summary[record[\"wenet_id\"]]\n      if (studentSummary == null) {\n        record[\"interactions\"] = 0;\n        record[\"feedbacks\"] = 0;\n        record[\"completed\"] = false\n      }\n      else {\n        record[\"interactions\"] = studentSummary[\"interactions\"];\n        record[\"feedbacks\"] = studentSummary[\"feedbacks\"];\n        record[\"completed\"] = studentSummary[\"completed\"];\n      }\n\n      data.push(record);\n    }\n\n    setSummaryData(data);\n\n  }, [props.summary])\n\n\n  const completedFormatter = (cell: any, value: any) => {\n    console.log(\"Passo value:\", value);\n    return (\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}>\n        {value[\"completed\"]  ?\n          <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: \"#00EE00\" }}>\n            {` ${t(\"yes\")} `}\n          </Badge>\n          :\n          <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: \"orange\" }}>\n            {` ${t(\"no\")} `}\n          </Badge>}\n      </div>)\n  }\n\n    const columns = [\n\n      {\n        dataField: 'name',\n        text: t('name'),\n        sort: true\n      },\n\n      {\n        dataField: 'surname',\n        text: t('surname'),\n        sort: true\n      },\n\n\n      {\n        dataField: 'passcode',\n        text: t('passcode'),\n        sort: true,\n        hidden: false\n      },\n      {\n        dataField: 'id',\n        text: t('profile'),\n        sort: true\n      },\n      {\n        dataField: 'interactions',\n        text: t('interactions'),\n        sort: true\n      },\n      {\n        dataField: 'feedbacks',\n        text: t('feedbacks'),\n        sort: true\n      },\n      {\n        dataField: 'completed',\n        text: t('completed'),\n        formatter: completedFormatter,\n        sort: true\n      }\n    ]\n\n    React.useEffect(() => {\n      //dispatch(StudentsProfileAction.willLoadStudentsProfile(null))        \n      return () => { }\n    }, []);\n\n    return <>\n      <BootstrapTable bootstrap4 keyField='passcode' data={\n        summaryData\n      }\n        columns={columns} />\n    </>\n  }\n","import React, { useState, useEffect, useRef } from 'react'\nimport {\n    Button, Collapse, Form, Nav, Navbar, NavbarBrand, Badge,\n    FormText, Modal, ModalHeader, ModalBody, TabContent, TabPane, NavItem, NavLink,\n    Card, CardSubtitle, CardHeader, CardTitle, CardBody, CardFooter, FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp, AiOutlineCaretLeft, AiOutlineCaretRight } from \"react-icons/ai\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { IconContext } from \"react-icons\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { HiOutlineRefresh } from \"react-icons/hi\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { transactionFieldMapper, studentsTransactionOptions, teachersTransactionOptions } from './common';\nimport { fakeTask } from '../components/common';\nimport moment from 'moment';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction } from '../store/slices/userTasks'\nimport ReactTooltip from \"react-tooltip\";\nimport { ActivityButton } from './UtilsComponents';\nimport { SearchBar } from './SearchBar';\nimport { TaskTransactionsSummary } from './TaskTransactionsSummary';\n\n// link timeline drosophila\n\n//https://beta.riale.ideab3.it/public/a6563273-863b-4e60-8b05-c6b41b332b42\n\nconst TeacherFeedback = (props) => {\n    const { transaction } = props;\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : teachersTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedTeacherText, setCurrentTeacherText] =\n        useState(\"\") //(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n    const dispatch = useDispatch();\n\n\n    const createFeedbackTransaction = () => {\n        if (currentSelectedChoice < 0) return;\n        const taskId = props.transaction[\"taskId\"];\n        const payload = {\n            \"taskId\": taskId, \"content\": {\n                \"label\": teachersTransactionOptions[currentSelectedChoice],\n                \"message\": currentSelectedTeacherText,\n                \"transactionID\": props.transaction[\"id\"]\n            }\n        }\n        console.log(\"Feedback payload:\", payload);\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n    }\n\n    const renderTeacherFeedbackOptions = () => {\n        return teachersTransactionOptions.map((message, index) => {\n            return getTeacherFeedbackOption(\"teacherChoice\", t(message), index);\n        })\n    }\n\n    const renderTeacherAnswerText = () => {\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(`teacher_comment_on_${teachersTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={false}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => { onChangeTeacherText(ev) }}\n                    value={currentSelectedTeacherText}\n                />\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"10px\", justifyContent: \"flex-end\" }}>\n                <ActivityButton onClick={() => createFeedbackTransaction()} color=\"primary\">{t(\"send\")}</ActivityButton>\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected feedback choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(teachersTransactionOptions[ev.target.value],\n            currentSelectedTeacherText)\n    }\n\n    const onChangeTeacherText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentTeacherText(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(teachersTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    return <>\n        <div style={{ marginTop: \"20px\" }}>\n            <Label><b>{t(\"send_feedback_to_student\")}</b></Label>\n        </div>\n        {renderTeacherFeedbackOptions()}\n        {renderTeacherAnswerText()}\n    </>\n\n}\n\nconst TeacherTransaction = (props) => {\n\n    const { transaction } = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const transactionActioneer = useSelector(StudentsProfileSelector.getStudentDetailsByWenetID(transaction && transaction[\"actioneerId\"]));\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] =\n        useState(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            currentSelectedStudentText)\n    }\n\n    const getStudentAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`teacher_comment_on_${studentsTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={true}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => { }}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackContent = () => {\n        const { teacherFeedback, transaction } = props;\n        if (teacherFeedback == null) return null;\n        console.log(\"TF FeedbackTransaction ID:\", teacherFeedback);\n\n        const teacherText = t(`${teacherFeedback[\"label\"]}`) + \" \" +\n            teacherFeedback[\"attributes\"][transactionFieldMapper[teacherFeedback[\"label\"]]]\n        return teacherText;\n    }\n\n    const renderTeacherAnswerText = () => {\n        return <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={getTeacherFeedbackContent()}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getStudentAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    return (\n        <>\n            {props.transaction &&\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    {transactionActioneer ?\n                        <Label style={props.teacherFeedback == null ? { \"color\": \"#FF0000\" } : { \"color\": \"#000000\" }}>\n                            <b>{transactionActioneer[\"name\"]} {` `} {transactionActioneer[\"surname\"]}\n                            {` (${transactionActioneer[\"id\"]}) `}\n                                {' - '} {moment(props.transaction._creationTs * 1000).format(\"DD/MM/YYYY - HH:mm\")}</b>\n                        </Label>\n                        :\n                        <Label>\n                            <b>{moment(props.transaction._creationTs * 1000).format(\"DD/MM/YYYY - HH:mm\")}</b>\n                        </Label>}\n\n                </div>\n            }\n            <Form style={{ border: \"1px solid #007bff\", padding: \"10px\", margin: \"10px\" }}>\n\n\n                <Label>\n                    <b>{t(\"teacher_selectAnswer\")}</b>\n                </Label>\n                {renderStudentAnswerOptions()}\n                {renderStudentAnswerText()}\n                {props.teacherFeedback != null ? renderTeacherAnswerText() :\n                    <TeacherFeedback transaction={props.transaction} />\n                }\n\n            </Form>\n        </>)\n}\n\nexport const TaskCreator = (props) => {\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [currentTaskTitle, setCurrentTaskTitle] = useState(\"\");\n    const [currentTaskDescription, setCurrentTaskDescription] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const createNewTask = (ev) => {\n        dispatch(UserTasksActions.willCreateTask({\n            \"name\": currentTaskTitle,\n            \"description\": currentTaskDescription\n        }))\n    }\n\n    const onChangeTaskTitle = (ev) => {\n        setCurrentTaskTitle(ev.target.value)\n    }\n\n    const onChangeTaskDescription = (ev) => {\n        setCurrentTaskDescription(ev.target.value)\n    }\n\n    return (\n\n        <Form>\n            <FormGroup>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Label for=\"teacherTaskTitle\">\n                        <b>{t(\"question_topic\")}</b>\n                    </Label>\n                    <Input\n                        required\n                        id=\"teacherTaskTitle\"\n                        name=\"text\"\n                        type=\"text\"\n                        onChange={(ev) => onChangeTaskTitle(ev)}\n                        value={currentTaskTitle}\n                    />\n                </div>\n            </FormGroup>\n            <FormGroup>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Label for=\"teacherTaskDescription\">\n                        <b>{t(\"question_content\")}</b>\n                    </Label>\n                    <Input\n                        required\n                        id=\"teacherTaskDescription\"\n                        name=\"text\"\n                        type=\"textarea\"\n                        onChange={(ev) => onChangeTaskDescription(ev)}\n                        value={currentTaskDescription}\n                    />\n                </div>\n            </FormGroup>\n            <FormGroup>\n                <div style={{ display: \"flex\", \"justifyContent\": \"space-between\" }}>\n                    <Button onClick={(ev) => { props.onClose() }}>Annulla</Button>\n                    <Button disabled={currentTaskTitle.trim() == \"\" || currentTaskDescription.trim() == \"\"} color=\"primary\" onClick={(ev) => { createNewTask(ev); props.onClose() }}>{t(\"send\")}</Button>\n                </div>\n            </FormGroup>\n        </Form>\n    )\n}\n\n\nexport const TeacherTasksViewer = (props) => {\n\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const tasks = useSelector(UserTasksSelectors.getTasks);\n    const offset = useSelector(UserTasksSelectors.getTasksOffset);\n    const limit = useSelector(UserTasksSelectors.getTasksLimit);\n    const total = useSelector(UserTasksSelectors.getTasksTotal);\n    const filteredIds = useSelector(UserTasksSelectors.getFilteredIds);\n    const [filteredTasks, setFilteredTasks] = useState(tasks);\n\n    //@audit decommentare in produzione!\n    useEffect(() => {\n\n        dispatch(UserTasksActions.willLoadTasks(null));\n        \n        const seconds = 10;\n        const interval = setInterval(() => {\n          console.log(`WillLoad task for teacher every ${seconds} seconds`);\n          dispatch(UserTasksActions.willLoadTasks(null));\n        }, seconds*1000);\n        return () => clearInterval(interval);\n      }, []);\n    \n\n    useEffect(() => {\n        if (filteredIds == null) setFilteredTasks(tasks)\n        else {\n            setFilteredTasks(tasks.filter((task) => filteredIds.includes(task[\"id\"])));\n        }\n\n    }, [tasks, filteredIds])\n\n\n    const renderTaskCreator = () => {\n        return <Modal isOpen={isOpen}>\n            <ModalHeader>{t(\"new_question\")}</ModalHeader>\n            <ModalBody>\n                <TaskCreator onClose={() => setIsOpen(false)} />\n            </ModalBody>\n        </Modal>\n    }\n\n    const renderTasks = () => {\n        return filteredTasks && filteredTasks.map((task, index) => <TeacherTaskViewer task={task} key={index} />)\n    }\n\n    const loadNextTasks = () => {\n        if (tasks == null) return;\n        // 1-10 di 15 -> newOffset = 0 -> 10\n        const newOffset = offset + limit;\n        if (newOffset >= total) return;\n        dispatch(UserTasksActions.willLoadTasks(newOffset));\n    }\n\n    const loadPrevTasks = () => {\n        if (tasks == null) return;\n        const newOffset = offset - limit;\n        if (newOffset < 0) return;\n        dispatch(UserTasksActions.willLoadTasks(newOffset));\n    }\n\n    const renderOffsetAndTotalTasksBar = () => {\n        if (total < 0) return `(${t(\"loading\")})`\n        else\n            return <span style={{ display: \"flex\", \"justifyContent\": \"flex-start\" }}>\n                <AiOutlineCaretLeft size={\"1.6em\"} cursor=\"pointer\" color='white'\n                    onClick={() => { loadPrevTasks() }}>\n                </AiOutlineCaretLeft>\n\n                {`${offset + 1}-${offset + tasks.length} ${t(\"of\")} ${total}`}\n                <AiOutlineCaretRight size={\"1.6em\"} cursor=\"pointer\" color='white'\n                    onClick={() => { loadNextTasks() }}></AiOutlineCaretRight>\n\n            </span>\n    }\n\n    const renderHeader = () => {\n        return <Navbar style={{ marginTop: \"10px\", marginBottom: \"10px\" }} className=\"mb-0 text-white\" color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\">{t(\"answers_and_questions\")}{` `}{renderOffsetAndTotalTasksBar()}</NavbarBrand>\n            <Nav className=\"mr-auto\" navbar>\n            </Nav>\n            <Nav navbar>\n                <Button onClick={(ev) => { console.log(\"Click new Question\"); setIsOpen(true) }}\n                    style={{ height: 34, marginRight: 12, marginTop: 6, marginBottom: 6, borderWidth: 1, borderColor: 'white', borderStyle: 'solid', borderRadius: 4 }} color=\"primary\">\n                    <FontAwesomeIcon icon={faPlus} />{t(\"new_question\")}</Button>\n                <IconButton\n                    onClick={() => { dispatch(UserTasksActions.willLoadTasks(0)); }}\n                    style={{ height: 34, marginRight: 12, marginTop: 6, marginBottom: 6, borderWidth: 1, borderColor: 'white', borderStyle: 'solid', borderRadius: 4 }}\n                >\n                    <IconContext.Provider value={{ color: \"white\", className: \"global-class-name\" }}>\n                        <HiOutlineRefresh color=\"white\" data-place=\"top\"\n                            data-for=\"teacherdashboard\"\n                            data-tip={t(\"refresh\")}\n                        />\n                    </IconContext.Provider>\n                </IconButton>\n            </Nav>\n            <ReactTooltip id=\"teacherdashboard\" />\n        </Navbar>\n    }\n\n    return (\n        <>\n            {renderHeader()}\n            <div style={{ margin: \"10px\" }} >\n                <SearchBar tasks={tasks} />\n            </div>\n\n            {isOpen && renderTaskCreator()}\n            {renderTasks()}\n        </>\n    )\n}\n\nexport const TeacherTaskViewer = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    // dizionario delle transazioni feedback associate a quelle degli studenti\n    const [feedbackTeacherTransactions, setFeedbackTeacherTransactions] = useState({})\n    const [filteredTransactions, setFilteredTransactions] = useState([]);\n    const [amountOfFeedbackToSend, setAmountOfFeedbackToSend] = useState(0);\n    const [studentsInteractionsSummary, setStudentsInteractionsSummary] = useState({})\n    const [activeTab, setActiveTab] = useState(\"0\");\n\n    useEffect(() => {\n        const { task } = props;\n        console.log(\"Student task:\", task);\n        let ftd = {}\n        for (let i = 0; i < task.transactions.length; i++) {\n            const transactionID = task.transactions[i][\"attributes\"][\"transactionID\"];\n            // se la transazione ha l'attributo transactionID allora si tratta del \n            // feedback ad uno studente\n            if (transactionID != null) {\n                ftd[transactionID] = task.transactions[i]\n            }\n\n        }\n        const filteredT = getFilteredTransactions()\n        setFilteredTransactions(filteredT);\n\n        console.log(\"setFeedbackTeacherTransactions to->: \", ftd)\n        setFeedbackTeacherTransactions(ftd);\n\n        setAmountOfFeedbackToSend(getAmountOfFeedbackToSend(filteredT, ftd));\n        const summaryR = getStudentsInteractionsSummary()\n        console.log(\"summary (FR)\", summaryR)\n        if (summaryR!=null) setStudentsInteractionsSummary(summaryR);\n    \n    }, [props.task])\n\n    // restituisce il numero di transazioni degli studenti per le quali il \n    // docente non ha ancora creato un feedback\n    const getAmountOfFeedbackToSend = (transactions, feedbackTransactions) => {\n        if (transactions == null || transactions.length < 1) return 0;\n        const totTransactions = transactions.length;\n        const totFeedbackTransactions = Object.keys(feedbackTransactions).length;\n        return (totTransactions - totFeedbackTransactions);\n    }\n\n    // restituisce le transazioni degli studenti (le rimanenti sono quelle dei feedback del docente)\n    const getFilteredTransactions = () => {\n        console.log(\"Transaction: (Task):\", props.task.transactions);\n        if (props.task.transactions == null) return [];\n\n        const ft = props.task.transactions.filter((transaction) => {\n            console.log(\"Transaction: (Filter):\", transaction);\n            // mostro tutte le transactions create dagli studenti compatibilmente con le\n            // label definite dalla app logic\n            // le transazioni rimanenti sono quelle relative ai feedback dei docenti\n            return studentsTransactionOptions.includes(transaction[\"label\"])\n        })\n        // ordinate cronologicamente dalla meno recente alla più recente\n        ft.sort((t1, t2) => (t1[\"_creationTs\"] - t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const getStudentsInteractionsSummary = () =>\n    {\n        let summary = {}\n        // ciclo su tutte le transazioni degli studenti\n        // e le conto come interazioni associate all'actioneer \n        // della transaction\n        console.log(\"DS: numero delle transazioni:\", filteredTransactions.length);\n        for (let i=0; i<filteredTransactions.length;i++)\n        {\n            const studentWenetId = filteredTransactions[i][\"actioneerId\"]\n            console.log(\"DS: transaction StudentWenet ID:\", studentWenetId);\n            if (summary[studentWenetId]==null) summary[studentWenetId] = {\"interactions\" : 1 , \"feedbacks\" : 0, \"completed\" : false};\n            else summary[studentWenetId][\"interactions\"] +=1\n\n            // verifico se esiste un feedback associato alla transazione corrente\n            const teacherFeedback = feedbackTeacherTransactions[filteredTransactions[i][\"id\"]]\n            console.log(`DS: teacherFeedback for user ${studentWenetId}:`, JSON.stringify(teacherFeedback))\n            if (teacherFeedback!=null)\n            {\n               const completed = (teacherFeedback[\"label\"]==\"rightAnswer\");\n               summary[studentWenetId][\"feedbacks\"] +=1;\n               summary[studentWenetId][\"completed\"] = summary[studentWenetId][\"completed\"] || completed;\n            }\n        }\n        console.log(\"DS: Summary (F)\", JSON.stringify(summary));\n        return summary;\n    }\n\n    const renderTransactions = () => {\n        console.log(\"Transaction: (filter):\", filteredTransactions);\n        return filteredTransactions.map((transaction, index) => {\n            return <TeacherTransaction readonly transaction={transaction}\n                teacherFeedback={feedbackTeacherTransactions[transaction[\"id\"]]} key={index} />\n        })\n    }\n\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs * 1000).format(\"DD/MM/YYYY - HH:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                            {(amountOfFeedbackToSend > 0) &&\n                                <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: \"#FF0000\" }}>\n                                    {`${amountOfFeedbackToSend} `}{t(\"new_messages_from_students\")}\n                                </Badge>\n                            }\n\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n\n                        <Nav tabs>\n                            <NavItem>\n                                <NavLink style={activeTab === '0' ?\n                                    { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                                    onClick={() => { setActiveTab('0'); }}\n                                >\n                                    {t(\"interactions_with_students\")}\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink style={activeTab === '1' ?\n                                    { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                                    onClick={() => { setActiveTab('1'); }}\n                                >\n                                    {t(\"summary\")}\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <TabContent activeTab={activeTab}>\n                            <TabPane tabId=\"0\">\n                                <Form>\n                                    {renderTransactions()}\n                                </Form>\n                            </TabPane>\n                            <TabPane tabId=\"1\">\n                                <TaskTransactionsSummary summary={studentsInteractionsSummary}/>\n                            </TabPane>\n                        </TabContent>\n\n                    </CardBody>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction} from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\nconst fakeProfiles = [\n  {\"passcode\":\"VPFYBRSX\",\"name\":\"Pantera\",\n\"surname\":\"Assonnata\",\"wenet_id\":928,\"id\":\"B+\",\n\"description\":\"Profilo B+\",\"teacher_wenet_id\":671},\n{\"passcode\":\"APFYBRSX\",\"name\":\"Leone\",\n\"surname\":\"Indaffarato\",\"wenet_id\":928,\"id\":\"C+\",\n\"description\":\"Profilo C+\",\"teacher_wenet_id\":671}\n\n] as any;\n\n\nexport const StudentsProfileViewer = (props:any) =>\n{   \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const studentsProfile = useSelector(StudentsProfileSelector.getStudentsProfile);\n    //const studentsProfile = fakeProfiles;\n\n    const columns = [\n\n      {\n        dataField: 'name',\n        text: t('name'),\n        sort: true\n      },\n\n        {\n          dataField: 'surname',\n          text: t('surname'),\n          sort: true\n        },\n        \n\n        {\n          dataField: 'passcode',\n          text: t('passcode'),\n          sort: true,\n          hidden:false\n        },\n          {\n            dataField: 'id',\n            text: t('profile'),\n            sort: true\n          },\n          {\n            dataField: 'description',\n            text: t('description'),\n            sort: false\n          }\n      ]\n\n    React.useEffect(() => {\n        dispatch(StudentsProfileAction.willLoadStudentsProfile(null))        \n        return () => { }\n      }, []);\n\n    return <>\n     <BootstrapTable bootstrap4 keyField='passcode' data={ \n                      studentsProfile\n                    } \n                    columns={ columns } />\n    </>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TeacherTasksViewer } from '../components/TeacherComponents';\nimport { StudentsProfileViewer } from '../components/StudentsProfileViewer';\n\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { fakeTask } from '../components/common';\n\n\nexport const TeacherDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [activeTab, setActiveTab] = useState(\"0\");\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(UserTasksActions.willGetUserProfile());\n      }, [])\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"teacher_area\" showMenu={true} />\n            <SideBar active=\"teacher_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink style={activeTab === '0' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('0'); }}\n                        >\n                            {t(\"students_answers\")}\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={activeTab === '1' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('1'); }}\n                        >\n                            {t(\"students_profile\")}\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId=\"0\">\n                        <TeacherTasksViewer/>\n                    </TabPane>\n                    <TabPane tabId=\"1\">\n                        <StudentsProfileViewer/>\n                    </TabPane>\n                </TabContent>\n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button, Form, FormGroup, Label, Input, FormText, Card, CardHeader, CardBody,\n    CardText, CardTitle, CardFooter\n} from 'reactstrap';\n\n\n//https://www.npmjs.com/package/compress-json\nconst WenetConnector = () => {\n    \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [passcode, setPasscode] = useState(null);\n\n    useEffect(()=>{\n         localStorage.setItem(\"passcode\", passcode);\n      }, [passcode])\n\n    const checkPassCode = (passCodeOrig) => {\n\n        //WQBLLIZQ\n        const charset = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n        const passCodeLen = 8\n        try {\n            const passCode = passCodeOrig.trim().toUpperCase();\n            if (passCode.length != passCodeLen) throw (\"Invalid\");\n            let passCodeSum = 0;\n            for (let i = 0; i < passCode.length - 1; i++) {\n                //console.log(\"Indice carattere:\",charset.indexOf(passCode.charAt(i)))\n                passCodeSum += charset.indexOf(passCode.charAt(i))\n            }\n\n            passCodeSum -= charset.indexOf(passCode.charAt(passCodeLen - 1))\n            //console.log(`PasscodeSum check:${passCodeSum}`)\n            const isValid = (passCodeSum % charset.length) == 0\n            setPasscode( isValid ? passCode : null);\n        } catch (error) {\n            setPasscode(null);\n        }\n\n    }\n\n    const onEnterPasscode = (ev) => {\n        console.log(\"entered:\", ev.target.value)\n        checkPassCode(ev.target.value);\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100vh'\n        }}>\n            <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n                <CardHeader style={{\n                    backgroundColor: \"#007bff\",\n                    borderColor: \"#007bff\",\n                    paddingBottom: 0,\n                    color: 'white'\n\n                }}>\n                    <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n                </CardHeader>\n                <CardBody>\n\n\n                    <Input onChange={(ev) => onEnterPasscode(ev)} type=\"text\" name=\"passcode\" \n                    id=\"passcode\" placeholder={t(\"passcode_enter\")} />\n\n                </CardBody>\n                    <CardFooter style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}>\n                    {\n                        passcode && (\n                            <a href={`/connect?passcode=${passcode}`}>{t(\"connect_to_wenet\")}</a>\n                        )\n                    }\n                        \n                    </CardFooter>\n\n            </Card>\n\n\n        </div>\n    );\n}\n\nexport default WenetConnector","import React, {useEffect} from \"react\";\n\nimport { ConnectedRouter, push } from 'connected-react-router'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory\n  } from \"react-router-dom\";\n  import { useSelector, useDispatch } from \"react-redux\";\n  import { history } from './store'\n  import {AppLoader} from \"./components/UtilsComponents\";\n  import { StudentDashboard } from \"./pages/StudentDashboard\";\n  import { TeacherDashboard } from \"./pages/TeacherDashboard\";\n  import { TeacherTasksViewer } from \"./components/TeacherComponents\";\n  import  {fakeTasks} from './components/common';\n  import WenetConnector from \"./pages/WenetConnector\";\n  import { selectors as UserTasksSelectors, actions as UserTasksActions } from './store/slices/userTasks'\n  import { Role } from \"./constants\";\n\nexport const AppRouter = () => { \n      \n      const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n      const dispatch = useDispatch();\n\n      useEffect(() => {\n\n            //@audit UNCOMMENT FOR PRODUCTION!\n            dispatch(UserTasksActions.willGetUserProfile(null));\n          }, [])\n\n          useEffect(() => {\n            console.log(\"UserProfile in router:\", userProfile);\n            if (userProfile!=null && userProfile[\"message\"]!=null)\n            {\n              alert(userProfile[\"message\"])\n              dispatch(push(\"/\"))\n            }\n          }, [userProfile])\n\n  return (<ConnectedRouter history={history}>\n  <Switch>\n        {/* \n      <Route path=\"/forum\">\n          <RialeDiscussionBoard />\n    </Route>\n    */}\n\n<Route path=\"/devTasks\">\n          <TeacherTasksViewer tasks={fakeTasks} />\n    </Route>\n\n    <Route path=\"/student_dashboard\">\n          { (userProfile==null) ? <AppLoader/> : (\n            (userProfile.role_id==Role.student || userProfile.role_id==Role.admin) ?\n            <StudentDashboard /> :\n            <Redirect to=\"/\" />\n          )\n          }\n          \n    </Route>\n\n    <Route path=\"/teacher_dashboard\">\n    { (userProfile==null) ? <AppLoader/>  : (\n            (userProfile.role_id==Role.teacher || userProfile.role_id==Role.admin) ?\n            <TeacherDashboard /> :\n            <Redirect to=\"/\" />\n          )\n          }\n    </Route>\n\n    <Route path=\"/\">\n          <WenetConnector />\n    </Route>\n  </Switch>\n\n</ConnectedRouter>)\n}","import React from \"react\";\nimport { Provider } from 'react-redux'\nimport { configureStore } from './store'\nimport { AppRouter } from './router';\n\nconst Test = () => { return(<></>)}\nexport default function App() {\n  return (\n    <Provider store={configureStore({})}>\n       <AppRouter/>\n    \n    </Provider >\n  );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: ['tl', 'frontend'],\n    defaultNS: 'tl',\n    fallbackLng: 'it',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport RialeDiscussionBoard from './pages/DiscussionDashBoard';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-comments-section/dist/index.css'\nimport App from './App';\n\n// seutp i18n ---------------\nimport i18n from './i18n';\n\nvar lng = window.navigator['userLanguage']|| window.navigator.language;\nif(lng !== 'it-IT'){\n    i18n.changeLanguage('en-US');\n}else{\n    i18n.changeLanguage('it-IT');\n}\n   \nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n/*\n//https://create-react-app.dev/docs/deployment/\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
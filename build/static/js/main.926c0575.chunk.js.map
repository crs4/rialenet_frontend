{"version":3,"sources":["store/slices/userTasks.ts","components/Header.tsx","constants.js","components/SideBar.tsx","components/Content.tsx","pages/DiscussionDashBoard.jsx","reportWebVitals.js","store/sagas/userTasks.js","store/sagas/index.ts","store/index.ts","store/reducers.ts","components/StudentComponents.jsx","pages/StudentDashboard.jsx","components/TeacherComponents.jsx","pages/TeacherDashboard.jsx","pages/WenetConnector.jsx","router.tsx","App.tsx","i18n.js","index.js"],"names":["userTasksSlice","createSlice","name","initialState","user","tasks","reducers","willLogin","state","action","willLogout","willGetUserProfile","willLoadTasks","willCreateTask","willCreateTransaction","didGetUserProfile","payload","didLogout","localStorage","removeItem","didLoadTasks","actions","reducer","selectors","userTasks","Header","className","section","showMenu","useTranslation","useSuspense","t","_section","i18n","undefined","React","useState","isOpen","setIsOpen","dispatch","useDispatch","userProfile","useSelector","UserTasksSelectors","console","log","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first","last","DropdownMenu","right","DropdownItem","UserTasksActions","Role","admin","teacher","student","SideBar","active","role","style","border","width","position","backgroundColor","bottom","top","vertical","NavItem","NavLink","textDecoration","fontWeight","tag","Link","to","icon","faBriefcase","Content","children","fluid","left","md5","require","RialeDiscussionBoard","props","comment","setComment","count","query","URLSearchParams","window","location","search","passcode","getItem","passcodeMD5","get","map","i","replies","useEffect","task","role_id","Card","padding","borderColor","CardHeader","paddingBottom","CardTitle","CardBody","currentUser","userId","avatarUrl","commentsArray","signinUrl","signupUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagas","takeLatest","type","put","push","call","fetch","response","json","myJson","content","headers","method","body","JSON","stringify","error","runAllSagas","all","userTasksSagas","history","createBrowserHistory","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","router","connectRouter","userTasksReducer","store","createStore","run","StudentTransaction","transactionOptions","transaction","selectedChoiceIndex","currentSelectedChoice","setCurrentSelectedChoice","currentSelectedStudentText","setCurrentStudentText","getAnswerOption","group","message","index","FormGroup","check","disabled","readonly","Input","value","onChange","ev","target","onUpdate","onChangeSelectedChoice","checked","Label","Form","margin","marginTop","for","id","onChangeStudentText","StudentTask","toggle","transactionData","setTransactionData","taskTitle","goal","taskDescription","description","cursor","display","justifyContent","alignContent","size","CardSubtitle","transactions","label","CardFooter","Button","createNewTransaction","renderTopicContents","StudentDashboard","TaskCreator","currentTaskTitle","setCurrentTaskTitle","currentTaskDescription","setCurrentTaskDescription","onChangeTaskTitle","onChangeTaskDescription","UserTaskAction","TeacherDashboard","WenetConnector","setPasscode","setItem","onEnterPasscode","passCodeOrig","charset","toUpperCase","passCode","trim","length","passCodeSum","indexOf","charAt","isValid","passCodeLen","checkPassCode","alignItems","height","textAlign","placeholder","AppRouter","path","App","use","Backend","initReactI18next","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue","navigator","language","changeLanguage","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.926c0575.chunk.js","sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nexport const userTasksSlice = createSlice({\n    name: 'userTasks',\n    initialState: {\n      user:null,\n      tasks: []\n    }\n  ,\n    reducers: {\n     willLogin: (state, action:PayloadAction<any>) => state,\n     willLogout: (state, action:PayloadAction<any>) => state,\n     willGetUserProfile: (state, action:PayloadAction<any>) => state,\n     willLoadTasks: (state, action:PayloadAction<any>) => state,\n     willCreateTask: (state, action:PayloadAction<any>) => state,\n     willCreateTransaction: (state, action:PayloadAction<any>) => state,\n      \n     didGetUserProfile: (state, action:PayloadAction<any>) => { \n        state.user = action.payload;\n      },\n\n      didLogout:(state) => { \n        state.user = null;\n        state.tasks = [];\n        localStorage.removeItem(\"passcode\");\n      },\n      didLoadTasks: (state, action:PayloadAction<any>) =>{\n        state.tasks = action.payload;\n      },\n \n    \n    }\n});\n\nexport const { actions, reducer } = userTasksSlice;\n\nexport const selectors = {\n  isLogged: (state:any) => {\n    return state.userTasks.user!=null && localStorage.getItem(\"passcode\")==state.userTasks.user[\"passcode\"];\n  },\n  getTasks: (state:any) => {\n    return state.userTasks.tasks;\n  },\n  getUserProfile: (state:any) => {\n    //return {\"role_id\" : 1, \"name\" : {\"first\" : \"test\", \"last\" : \"test\"}}\n    return state.userTasks.user;\n  }\n}\n","import React from \"react\";\nimport {\n    Container, Button, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav,\n    NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions as UserTasksActions, selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\nexport const Header = ({ className, section, showMenu = false }: any) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const _section = t(section) != undefined ? t(section) : \"Forum\"\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const dispatch = useDispatch();\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    console.log(\"UserProfile:\", userProfile);\n    return (\n        <Navbar className={className} color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\" href=\"/\">RIALENET - {_section}</NavbarBrand>\n            {showMenu && (<>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    {(\n                        <Nav className=\"mr-auto\" navbar>\n                        </Nav>\n                    )}\n                    <Nav navbar>\n                        { userProfile!=null && userProfile.name!=null &&\n                        <>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle className=\"text-white\" nav caret>{userProfile.name.first}{` `}{userProfile.name.last}</DropdownToggle>\n                                <DropdownMenu right>\n                                <DropdownItem onClick={() => {\n                                            dispatch(UserTasksActions.willLogout(\"\"));\n                                        }}>Logout</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </>\n                        }\n                    </Nav>\n                </Collapse>\n            </>)}\n        </Navbar>\n\n    )\n}\n","export class Role {\n    static admin = 1;\n    static teacher = 2;\n    static student = 3;\n}","import { NavItem, NavLink, Nav } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faHome,\n    faChartPie,\n    faBriefcase,\n    faTimes,\n    faQuestion,\n    faImage,\n    faBook,\n    faCalendarAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { Role } from \"../constants\";\n\nexport const SideBar = ({ active, role }: any) => {\n  \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    console.log(\"Role in sidebar ->\", role, Role.teacher, (role==Role.teacher || role==Role.admin));\n    return (\n        <div style={{\n            border: '0px solid #000',\n            width: '240px',\n            position: 'absolute',\n            backgroundColor: '#f1f1f1',\n            bottom: 0,\n            top: 56\n        }}>\n\n            <Nav vertical className=\"list-unstyled pb-3\">\n                <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                    <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                        style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                        to={\"/forum\"}>\n                        <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"public_area\")}\n                    </NavLink>\n                </NavItem>\n                {\n                    (role==Role.student || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"student_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"student_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/student_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"student_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n                {\n                    (role==Role.teacher || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"teacher_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"teacher_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/teacher_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"teacher_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n\n            </Nav>\n        </div>)\n\n}","export const Content = ({ children, className, fluid = false }: any) => {\n  return (\n    <div className={className} style={{\n      border: '0px solid #000',\n      // width: '240px',\n      position: 'absolute',\n      backgroundColor: 'white',\n      bottom: 0,\n      top: 56,\n      left: fluid ? 0 : 240,\n      right: 0\n    }}>\n      {children}\n    </div>\n  )\n}","import React, { PureComponent, useState, useEffect } from 'react'\nimport { CommentSection } from 'react-comments-section'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation, useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport {\n  Card, CardImg, CardText, CardBody, CardHeader,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst data = [\n  {\n    \"userId\": \"01a\",\n    \"comId\": \"012\",\n    \"fullName\": \"Riya Negi\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n    \"text\": \"Hey, Loved your blog! \",\n    \"replies\": [\n      {\n        \"userId\": \"02a\",\n        \"comId\": \"013\",\n\n        \"fullName\": \"Adam Scott\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Adam&background=random\",\n        \"text\": \"Thanks! It took me 1 month to finish this project but I am glad it helped out someone!🥰\"\n      },\n      {\n        \"userId\": \"01a\",\n        \"comId\": \"014\",\n\n        \"fullName\": \"Riya Negi\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n        \"text\": \"thanks!😊\"\n      }\n    ]\n  },\n  {\n    \"userId\": \"02b\",\n    \"comId\": \"017\",\n    \"fullName\": \"Lily\",\n    \"text\": \"I have a doubt about the 4th point🤔\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Lily&background=random\"\n  },\n  {\n    \"userId\": \"01c\",\n    \"comId\": \"018\",\n    \"fullName\": \"Derek\",\n    \"text\": \"Great explanation!!!\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Derek&background=random\"\n  }\n]\n\nconst md5 = require('md5');\n\n\nconst RialeDiscussionBoard = (props) => {\n  const [comment, setComment] = useState([])\n  const dispatch = useDispatch();\n  \n  const tasks =  useSelector(UserTasksSelectors.getTasks);  //(result == null) ? [] : result[\"tasks\"]\n  const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  \n  const userId = \"01a\"\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n  const name = \"xyz\"\n  const signinUrl = \"/signin\"\n  const signupUrl = \"/signup\"\n  let count = 0\n\n  const query = new URLSearchParams(window.location.search);\n  const passcode = localStorage.getItem(\"passcode\");\n  const passcodeMD5 = query.get(\"passcode\");\n  console.log(\"params:\", passcode);\n  const isAuthenticated = passcodeMD5!=null && md5(passcode)==passcodeMD5;\n\n  \n\n  comment.map(i => { count += 1; i.replies && i.replies.map(i => count += 1) })\n \n  const loadAllTasks = async () => {\n    console.log(\"WENET loading tasks\")\n    try {\n      const url = `/tasks?passcode=${passcode}`\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\"\n        }\n      )\n      console.log(\"WENET authentication response:\", response)\n\n      const result = await response.json();\n      console.log(\"WENET authentication result:\", result)\n\n     \n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          });\n        /*\n        setPosts(\n          tasks.map((task)=> {return(\n           {\"profileImage\" : 'https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg',\n           \"name\" : task[\"goal\"][\"name\"],\n           \"content\" : task[\"goal\"][\"description\"],\n           \"date\" : moment(parseInt(task[\"_creationTs\"])).toDate()\n           } )\n          }\n        )) */\n      }));\n\n    } catch (e) { console.log(\"WENET response error:\", e) }\n  }\n  \n  useEffect(() => {\n    dispatch(UserTasksActions.willGetUserProfile());\n    dispatch(UserTasksActions.willLoadTasks());\n  }, [])\n\n\n  useEffect(() => {\n    if (tasks!=null)\n    {\n\n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          })}));\n    }\n    else setComment([]);\n   \n  }, [tasks])\n\n\n  return (\n    <>\n    <Header className=\"mb-0 text-white\" section=\"public_area\" showMenu={true} />\n      <SideBar active=\"public_area\" role={userProfile!=null? userProfile.role_id : null} />\n      <Content>\n        <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n          <CardHeader style={{ backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n            <CardTitle>{t(\"public_area\")} (n.{count} {t(\"comments\")}) \n              {/*passcode && <div className=\"pull-right\">{passcode}</div>*/}\n            </CardTitle>\n\n          </CardHeader>\n          <CardBody>\n            <CommentSection currentUser={userId && { userId: userId, avatarUrl: avatarUrl, name: name }}\n              commentsArray={comment || []}\n              setComment={setComment} signinUrl={signinUrl} signupUrl={signupUrl} />\n          </CardBody>\n\n        </Card>\n      </Content>\n    </>\n  )\n\n}\n\nexport default RialeDiscussionBoard\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { all, call, takeLatest, put, select, take } from \"redux-saga/effects\";\nimport {\n    actions as UserTasksActions,\n    selectors as UserTasksSelector,\n  } from \"../slices/userTasks\";\nimport { push } from 'connected-react-router'\n\nexport function* sagas() {\n  yield takeLatest(UserTasksActions.willGetUserProfile.type, willGetUserProfile)\n  yield takeLatest(UserTasksActions.willLogout.type, willLogout)\n  yield takeLatest(UserTasksActions.willLoadTasks.type, willLoadTasks) \n  yield takeLatest(UserTasksActions.willCreateTask.type, willCreateTask) \n  yield takeLatest(UserTasksActions.willCreateTransaction.type, willCreateTransaction) \n}\n\n\nfunction* willLogout(action) {\n    yield put(UserTasksActions.didLogout());\n    yield put(push(\"/logout\"));\n  }\n\n\n  function* willGetUserProfile(action) {\n  \n    const url = `/userprofile`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const userProfile = (response == null) ? [] : response\n    yield put(UserTasksActions.didGetUserProfile(userProfile));\n    } catch (error) {\n      yield put(UserTasksActions.didGetUserProfile(null));\n    }\n}\n\n\n\nfunction* willCreateTask(action) {\n\n  const url = `/newtask`;\n  const content = action.payload; // {\"name\" : \"domanda 1\" , \"description\" ; \"Cosa sono i ...?\"}\n   \n    try{\n    const response = yield call(() => fetch(url,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify({ \"content\": content })  // {\"name\" : \"nome\" , \"description\" : \"...\"}\n      })\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n      console.log(\"SAGA NEW TASK response:\", response);\n  } catch (error) {\n      console.log(\"SAGA NEW TASK error:\".error);\n     // yield put(UserTasksActions.didLoadTasks([]));\n    }\n}\n\nfunction* willCreateTransaction(action) {\n\n  const url = `/newtransaction`;\n  const content = action.payload; // {\"taskId\" : \"xxxx\" , \"content\" : {} }\n   \n    try{\n    const response = yield call(() => fetch(url,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify({ \"content\": content })  // {\"taskId\" : \"xxxx\" , \n        //\"content\" : {\"label\" :\"label\", \"message\" :\"myMessage\"}}\n      })\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n      console.log(\"SAGA NEW TRANSACTION response:\", response);\n  } catch (error) {\n      console.log(\"SAGA NEW TRANSACTION error:\".error);\n     // yield put(UserTasksActions.didLoadTasks([]));\n    }\n      \n}\n\nfunction* willLoadTasks(action) {\n    //const data = action.payload;\n    //const passcode = localStorage.getItem(\"passcode\")\n    const url = `/tasks`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const tasks = (response == null) ? [] : response[\"tasks\"]\n    yield put(UserTasksActions.didLoadTasks(tasks));\n    } catch (error) {\n      yield put(UserTasksActions.didLoadTasks([]));\n    }\n}\n\n\n/*\nconst newTransaction = {\n        \"taskId\": \"62a0b984925841535833b690\",\n        \"label\": \"cannotAnswer\",\n        \"attributes\": {\n            \"reason\": \"....\"\n        },\n        \"actioneerId\": \"studente\",\n        \"messages\": []\n     }\n     */","import { all } from 'redux-saga/effects'\nimport { sagas as userTasksSagas } from './userTasks'\n\nfunction* runAllSagas() {\n    console.log('in root saga')\n    yield all([\n       userTasksSagas()\n    ])\n  }\n\nexport default runAllSagas;","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport runAllSagas from './sagas'\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport { createRootReducer } from './reducers'\nexport const history = createBrowserHistory()\n\nexport const configureStore = (preloadedState: any) => {\n  // const middlewares = [loggerMiddleware, thunkMiddleware]\n\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares: any = [routerMiddleware(history), sagaMiddleware]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  // const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  \n  const rootReducer = createRootReducer(history)\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n \n  if (process.env.NODE_ENV !== 'production' && (module as any).hot) {\n    (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n \n\n  // then run the saga\n  sagaMiddleware.run(runAllSagas)\n\n  return store\n}","import { combineReducers } from 'redux'\n\nimport { reducer as userTasksReducer } from './slices/userTasks'\nimport { connectRouter } from 'connected-react-router'\n\nexport const createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  userTasks: userTasksReducer\n})","import React, { useState, useEffect } from 'react'\nimport {\n    Button, Collapse, Form, FormText,\n    Card, CardHeader, CardTitle, CardSubtitle, CardBody, CardFooter,\n    FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { createNewTransaction } from '../api/wenet_api';\n\n\nconst StudentTransaction = (props) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const transactionOptions = [\"cannotAnswer\", \"needClarification\", \"notSure\", \"myAnswer\"];\n\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(props.transaction.selectedChoiceIndex || -1)\n    const [currentSelectedStudentText, setCurrentStudentText] = useState(\"\")\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice>=0 &&  props.onUpdate(transactionOptions[currentSelectedChoice],\n            currentSelectedStudentText)\n    }\n\n    const onChangeStudentText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentStudentText(ev.target.value);\n        props.onUpdate && currentSelectedChoice>=0 &&  props.onUpdate(transactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    const getAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        return currentSelectedChoice>=0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`comment_on_${transactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => onChangeStudentText(ev)}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderTeacherAnswerText = () => {\n        return <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={\"RISPOSTA\"}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderAnswerOptions = () => {\n        return transactionOptions.map((message, index) => {\n            return getAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    return (\n        <Form style={{ border: \"1px solid #007bff\", padding: \"10px\", margin: \"10px\" }}>\n            <Label>\n                <b>{t(\"selectAnswer\")}</b>\n            </Label>\n            {renderAnswerOptions()}\n            {renderStudentAnswerText()}\n            {renderTeacherAnswerText()}\n        </Form>)\n}\n\nexport const StudentTask = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const [transactionData, setTransactionData] = useState(null);\n\n    const createNewTransaction = () =>\n    {\n        if (transactionData==null) return;\n        const taskId = props.task[\"id\"];\n        const payload = { \"taskId\" : taskId, \"content\" : {\"label\" :transactionData[\"label\"], \n        \"message\" : transactionData[\"message\"]}}\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n       }\n    \n    const renderTransactions = () => {\n\n        return props.task.transactions && props.task.transactions.map((transaction) => {\n            return <StudentTransaction readonly transaction={transaction} />\n        })\n    }\n\n    const renderNewTransaction = () => {\n\n        const newTransaction = {\n            \"readOnly\" : false,\n            \"selectedChoiceIndex\" : -1\n         }\n\n         return <StudentTransaction onUpdate = { (label,message) => setTransactionData({label,message})} \n         \n         transaction={newTransaction} />\n    }\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                            {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                            {renderNewTransaction()}\n                        </Form>\n                    </CardBody>\n                    <CardFooter>\n                        <Button color=\"primary\" onClick={(ev) => {createNewTransaction() }}>{t(\"send\")}</Button>\n                    </CardFooter>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { StudentTask } from '../components/StudentComponents';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\n\nconst fakeTransaction1 = {\n    \"taskId\": 2131,\n    \"answers\": [\"Non lo so\", \"Ho capito\", \"Ho bisogno di aiuto\"],\n    \"selectedChoiceIndex\" : 1,\n    \"studentAnswer\": { \"choice\": 1, \"comments\": \"non ci capisco niente\" },\n    \"teacherFeedback\": { \"comments\": \"bravo! ma cerca qui...\" },\n    \"readonly\" : true\n};\n\nconst fakeTransaction2 = {\n    \"taskId\": 2131,\n    \"answers\": [\"Non lo so\", \"Ho capito\", \"Ho bisogno di aiuto\"],\n    \"selectedChoiceIndex\" : 0,\n    \"studentAnswer\": { \"choice\": 1, \"comments\": \"non ci capisco niente\" },\n    \"teacherFeedback\": { \"comments\": \"bravo! ma cerca qui...\" },\n    \"readonly\": false\n};\n\nconst fakeTask = {\n    \"id\": 2131, \"goal\": {\n        \"name\": \"Quesito iniziale sulla timeline\",\n        \"description\": \"Descrizione del questito iniziale della timeline\",\n        \"keywords\": [\"social interaction\", \"lab\"],\n    }, \"transactions\": [fakeTransaction1, fakeTransaction2]\n}\n\n\n//const tasks = [fakeTask];\n\nexport const StudentDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const tasks =  useSelector(UserTasksSelectors.getTasks);\n\n   \n     \n\n    const renderTasks = () =>\n    {\n        return tasks && tasks.map((task,index) => <StudentTask task={task} />)\n    }\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"student_area\" showMenu={true} />\n            <SideBar active=\"student_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                {renderTasks()}\n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Button, Collapse, Form, FormText, Card, CardHeader, CardTitle, CardBody, CardFooter, FormGroup, Input, Label } from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {actions as UserTaskAction} from '../store/slices/userTasks';\n// link timeline drosophila\n//https://beta.riale.ideab3.it/public/a6563273-863b-4e60-8b05-c6b41b332b42\n\n\n\nexport const TaskCreator = (props) => \n{\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [currentTaskTitle,setCurrentTaskTitle] = useState(\"\");\n    const [currentTaskDescription,setCurrentTaskDescription] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const createNewTask = (ev) => \n    {\n        dispatch(UserTaskAction.willCreateTask({\"name\" : currentTaskTitle,    \n                                          \"description\" : currentTaskDescription}))\n    }\n\n    const onChangeTaskTitle = (ev) =>\n    {\n        setCurrentTaskTitle(ev.target.value)\n    }\n\n    const onChangeTaskDescription = (ev) =>\n    {\n        setCurrentTaskDescription(ev.target.value)\n    }\n\n    return (\n    <Card className=\"mb-4\" style={{ padding: \"10px\",  borderColor: \"#007bff\"}}>\n        <CardTitle>\n            {t(\"teacherCreateNewTask\")}\n        </CardTitle>\n        <CardBody>\n        <Form>\n        <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherTaskTitle\">\n                    <b>{t(\"teacherTaskTitle\")}</b>\n                </Label>\n                <Input\n                    id=\"teacherTaskTitle\"\n                    name=\"text\"\n                    type=\"text\"\n                    onChange = {(ev) => onChangeTaskTitle(ev)}\n                    value={currentTaskTitle}\n                />\n            </div>\n        </FormGroup>\n        <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherTaskDescription\">\n                    <b>{t(\"teacherTaskDescription\")}</b>\n                </Label>\n                <Input\n                    id=\"teacherTaskDescription\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange = {(ev) => onChangeTaskDescription(ev)}\n                    value={currentTaskDescription}\n                />\n            </div>\n        </FormGroup>\n    </Form>\n        </CardBody>\n        <CardFooter>\n        <Button color=\"primary\" onClick={(ev) => { createNewTask(ev) }}>{t(\"send\")}</Button>\n        </CardFooter>\n    </Card>)\n}\n\nexport const TaskViewer = (props) => {\n    return <></>\n}","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TaskCreator } from '../components/TeacherComponents';\n\nexport const TeacherDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"teacher_area\" showMenu={true} />\n            <SideBar active=\"teacher_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                <TaskCreator/>\n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button, Form, FormGroup, Label, Input, FormText, Card, CardHeader, CardBody,\n    CardText, CardTitle, CardFooter\n} from 'reactstrap';\n\n\n//https://www.npmjs.com/package/compress-json\nconst WenetConnector = () => {\n    \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [passcode, setPasscode] = useState(null);\n\n    useEffect(()=>{\n         localStorage.setItem(\"passcode\", passcode);\n      }, [passcode])\n\n    const checkPassCode = (passCodeOrig) => {\n\n        //WQBLLIZQ\n        const charset = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n        const passCodeLen = 8\n        try {\n            const passCode = passCodeOrig.trim().toUpperCase();\n            if (passCode.length != passCodeLen) throw (\"Invalid\");\n            let passCodeSum = 0;\n            for (let i = 0; i < passCode.length - 1; i++) {\n                //console.log(\"Indice carattere:\",charset.indexOf(passCode.charAt(i)))\n                passCodeSum += charset.indexOf(passCode.charAt(i))\n            }\n\n            passCodeSum -= charset.indexOf(passCode.charAt(passCodeLen - 1))\n            //console.log(`PasscodeSum check:${passCodeSum}`)\n            const isValid = (passCodeSum % charset.length) == 0\n            setPasscode( isValid ? passCode : null);\n        } catch (error) {\n            setPasscode(null);\n        }\n\n    }\n\n    const onEnterPasscode = (ev) => {\n        console.log(\"entered:\", ev.target.value)\n        checkPassCode(ev.target.value);\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100vh'\n        }}>\n            <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n                <CardHeader style={{\n                    backgroundColor: \"#007bff\",\n                    borderColor: \"#007bff\",\n                    paddingBottom: 0,\n                    color: 'white'\n\n                }}>\n                    <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n                </CardHeader>\n                <CardBody>\n\n\n                    <Input onChange={(ev) => onEnterPasscode(ev)} type=\"text\" name=\"passcode\" \n                    id=\"passcode\" placeholder={t(\"passcode_enter\")} />\n\n                </CardBody>\n                    <CardFooter style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}>\n                    {\n                        passcode && (\n                            <a href={`/connect?passcode=${passcode}`}>{t(\"connect_to_wenet\")}</a>\n                        )\n                    }\n                        \n                    </CardFooter>\n\n            </Card>\n\n\n        </div>\n    );\n}\n\nexport default WenetConnector","import React from \"react\";\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory\n  } from \"react-router-dom\";\n  import { useSelector } from \"react-redux\";\n  import { history } from './store'\n  \n  import RialeDiscussionBoard from './pages/DiscussionDashBoard'\n  import { StudentDashboard } from \"./pages/StudentDashboard\";\n  import { TeacherDashboard } from \"./pages/TeacherDashboard\";\n  import WenetConnector from \"./pages/WenetConnector\";\nexport const AppRouter = () => { \n  return (<ConnectedRouter history={history}>\n  <Switch>\n  <Route path=\"/forum\">\n          <RialeDiscussionBoard />\n    </Route>\n\n    <Route path=\"/student_dashboard\">\n          <StudentDashboard />\n    </Route>\n\n    <Route path=\"/teacher_dashboard\">\n          <TeacherDashboard />\n    </Route>\n\n    <Route path=\"/\">\n          <WenetConnector />\n    </Route>\n  </Switch>\n\n</ConnectedRouter>)\n}","import React from \"react\";\nimport { Provider } from 'react-redux'\nimport { configureStore } from './store'\nimport { AppRouter } from './router';\n\nconst Test = () => { return(<></>)}\nexport default function App() {\n  return (\n    <Provider store={configureStore({})}>\n       <AppRouter/>\n    \n    </Provider >\n  );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: ['tl', 'frontend'],\n    defaultNS: 'tl',\n    fallbackLng: 'it',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RialeDiscussionBoard from './pages/DiscussionDashBoard';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-comments-section/dist/index.css'\nimport App from './App';\n\n// seutp i18n ---------------\nimport i18n from './i18n';\n\nvar lng = window.navigator['userLanguage']|| window.navigator.language;\nif(lng !== 'it-IT'){\n    i18n.changeLanguage('en-US');\n}else{\n    i18n.changeLanguage('it-IT');\n}\n   \nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n/*\n//https://create-react-app.dev/docs/deployment/\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["store/slices/userTasks.ts","components/Header.tsx","constants.js","components/SideBar.tsx","components/Content.tsx","pages/DiscussionDashBoard.jsx","reportWebVitals.js","store/sagas/userTasks.js","store/sagas/index.ts","store/index.ts","store/reducers.ts","pages/WenetConnector.jsx","router.tsx","App.tsx","i18n.js","index.js"],"names":["userTasksSlice","createSlice","name","initialState","user","tasks","reducers","willLogin","state","action","willLogout","willGetUserProfile","willLoadTasks","didGetUserProfile","payload","didLogout","localStorage","removeItem","didLoadTasks","actions","reducer","selectors","userTasks","Header","className","section","showMenu","useTranslation","useSuspense","t","_section","i18n","undefined","React","useState","isOpen","setIsOpen","dispatch","useDispatch","userProfile","useSelector","UserTasksSelectors","console","log","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first","last","DropdownMenu","right","DropdownItem","UserTasksActions","Role","admin","teacher","student","SideBar","active","role","style","border","width","position","backgroundColor","bottom","top","vertical","NavItem","NavLink","textDecoration","fontWeight","tag","Link","to","icon","faBriefcase","Content","children","fluid","left","md5","require","RialeDiscussionBoard","props","comment","setComment","count","query","URLSearchParams","window","location","search","passcode","getItem","passcodeMD5","get","map","i","replies","useEffect","task","role_id","Card","padding","borderColor","CardHeader","paddingBottom","CardTitle","CardBody","currentUser","userId","avatarUrl","commentsArray","signinUrl","signupUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagas","takeLatest","type","put","push","call","fetch","response","json","myJson","url","runAllSagas","all","userTasksSagas","history","createBrowserHistory","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","router","connectRouter","userTasksReducer","store","createStore","run","WenetConnector","setPasscode","setItem","onEnterPasscode","ev","target","value","passCodeOrig","charset","toUpperCase","passCode","trim","length","passCodeSum","indexOf","charAt","isValid","passCodeLen","error","checkPassCode","display","alignItems","justifyContent","height","textAlign","Input","onChange","id","placeholder","CardFooter","AppRouter","path","App","use","Backend","initReactI18next","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue","navigator","language","changeLanguage","ReactDOM","render","Fragment","document","getElementById"],"mappings":"wPAEaA,EAAiBC,YAAY,CACtCC,KAAM,YACNC,aAAc,CACZC,KAAK,KACLC,MAAO,IAGTC,SAAU,CACTC,UAAW,SAACC,EAAOC,GAAR,OAAsCD,GACjDE,WAAY,SAACF,EAAOC,GAAR,OAAsCD,GAClDG,mBAAoB,SAACH,EAAOC,GAAR,OAAsCD,GAC1DI,cAAe,SAACJ,EAAOC,GAAR,OAAsCD,GAEpDK,kBAAmB,SAACL,EAAOC,GACzBD,EAAMJ,KAAOK,EAAOK,SAGtBC,UAAU,SAACP,GACTA,EAAMJ,KAAO,KACbI,EAAMH,MAAQ,GACdW,aAAaC,WAAW,aAE1BC,aAAc,SAACV,EAAOC,GACpBD,EAAMH,MAAQI,EAAOK,YAOdK,EAAqBnB,EAArBmB,QAASC,EAAYpB,EAAZoB,QAEXC,EAID,SAACb,GACT,OAAOA,EAAMc,UAAUjB,OALdgB,EAOK,SAACb,GACf,OAAOA,EAAMc,UAAUlB,M,0FCjCdmB,EAAS,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,QAAqC,IAA5BC,gBAA4B,WAEjDC,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAF6D,EAE7DA,EACFC,GAH+D,EAE1DC,UACoBC,GAAdH,EAAEJ,GAAwBI,EAAEJ,GAAW,SAHa,EAIzCQ,IAAMC,UAAS,GAJ0B,mBAI9DC,EAJ8D,KAItDC,EAJsD,KAM/DC,EAAWC,cACXC,EAAcC,YAAYC,GAEhC,OADAC,QAAQC,IAAI,eAAgBJ,GAExB,eAACK,EAAA,EAAD,CAAQpB,UAAWA,EAAWqB,MAAM,UAAUC,OAAK,EAACC,OAAO,KAA3D,UACI,eAACC,EAAA,EAAD,CAAaxB,UAAU,8BAA8ByB,KAAK,IAA1D,wBAA0EnB,KACzEJ,GAAa,qCACV,cAACwB,EAAA,EAAD,CAAeC,QARZ,kBAAMf,GAAWD,MASpB,eAACiB,EAAA,EAAD,CAAUjB,OAAQA,EAAQkB,QAAM,EAAhC,UAEQ,cAACC,EAAA,EAAD,CAAK9B,UAAU,UAAU6B,QAAM,IAGnC,cAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,SACmB,MAAbd,GACF,mCACI,eAACgB,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,EAAlC,UACI,eAACC,EAAA,EAAD,CAAgBlC,UAAU,aAAagC,KAAG,EAACG,OAAK,EAAhD,UAAkDpB,EAAYrC,KAAK0D,MAAnE,IAA+ErB,EAAYrC,KAAK2D,QAChG,cAACC,EAAA,EAAD,CAAcC,OAAK,EAAnB,SACA,cAACC,EAAA,EAAD,CAAcb,QAAS,WACXd,EAAS4B,EAAiBvD,WAAW,MADjD,uC,kDClCnBwD,EAAb,kCAAaA,EACFC,MAAQ,EADND,EAEFE,QAAU,EAFRF,EAGFG,QAAU,ECcd,IAAMC,EAAU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,KAAgB,EAE1B7C,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAFsC,EAEtCA,EAFsC,EAEnCE,KAEX,OACI,qBAAK0C,MAAO,CACRC,OAAQ,iBACRC,MAAO,QACPC,SAAU,WACVC,gBAAiB,UACjBC,OAAQ,EACRC,IAAK,IANT,SASI,eAACzB,EAAA,EAAD,CAAK0B,UAAQ,EAACxD,UAAU,qBAAxB,UACI,cAACyD,EAAA,EAAD,CAASV,OAAmB,gBAAXA,EAAyC/C,UAAU,OAApE,SACI,eAAC0D,EAAA,EAAD,CAAS1D,UAAsB,gBAAX+C,EAA2B,eAAiB,iBAC5DE,MAAO,CAAEU,eAAgB,OAAQC,WAAY,UAAYC,IAAKC,IAC9DC,GAAI,eAFR,UAGI,cAAC,IAAD,CAAiBC,KAAMC,IAAajE,UAAU,SAHlD,IAG6DK,EAAE,oBAI/D2C,GAAQN,EAAKG,SAET,cAACY,EAAA,EAAD,CAASV,OAAmB,gBAAXA,EAAyC/C,UAAU,OAApE,SACI,eAAC0D,EAAA,EAAD,CAAS1D,UAAsB,gBAAX+C,EAA2B,eAAiB,iBAC5DE,MAAO,CAAEU,eAAgB,OAAQC,WAAY,UAAYC,IAAKC,IAC9DC,GAAI,eAFR,UAGI,cAAC,IAAD,CAAiBC,KAAMC,IAAajE,UAAU,SAHlD,IAG6DK,EAAE,qBAOvE2C,GAAQN,EAAKE,SAET,cAACa,EAAA,EAAD,CAASV,OAAmB,gBAAXA,EAAyC/C,UAAU,OAApE,SACI,eAAC0D,EAAA,EAAD,CAAS1D,UAAsB,gBAAX+C,EAA2B,eAAiB,iBAC5DE,MAAO,CAAEU,eAAgB,OAAQC,WAAY,UAAYC,IAAKC,IAC9DC,GAAI,eAFR,UAGI,cAAC,IAAD,CAAiBC,KAAMC,IAAajE,UAAU,SAHlD,IAG6DK,EAAE,2BC3D9E6D,EAAU,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,SAAUnE,EAAoC,EAApCA,UAAoC,IAAzBoE,aAAyB,SACtE,OACE,qBAAKpE,UAAWA,EAAWiD,MAAO,CAChCC,OAAQ,iBAERE,SAAU,WACVC,gBAAiB,QACjBC,OAAQ,EACRC,IAAK,GACLc,KAAMD,EAAQ,EAAI,IAClB7B,MAAO,GART,SAUG4B,K,oCC6CDG,EAAMC,EAAQ,KAwHLC,EArHc,SAACC,GAAW,IAAD,EACR/D,mBAAS,IADD,mBAC/BgE,EAD+B,KACtBC,EADsB,KAEhC9D,EAAWC,cAEXjC,EAASmC,YAAYC,GACrBF,EAAcC,YAAYC,GALM,EAMlBd,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAN8B,EAM9BA,EAOJuE,GAbkC,EAM3BrE,KAOC,GAENsE,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAC5CC,EAAW1F,aAAa2F,QAAQ,YAChCC,EAAcP,EAAMQ,IAAI,YAC9BnE,QAAQC,IAAI,UAAW+D,GACc,MAAbE,GAAqBd,EAAIY,GAIjDR,EAAQY,KAAI,SAAAC,GAAOX,GAAS,EAAGW,EAAEC,SAAWD,EAAEC,QAAQF,KAAI,SAAAC,GAAC,OAAIX,GAAS,QAqExE,OA1BAa,qBAAU,WACR5E,EAAS4B,EAAiBtD,sBAC1B0B,EAAS4B,EAAiBrD,mBACzB,IAGHqG,qBAAU,WAINd,EAHS,MAAP9F,EAGSA,EAAMyG,KAAI,SAACI,GACpB,MACE,CACE,OAAU,MACV,MAAS,MACT,SAAY,YACZ,UAAa,yDACb,KAAQA,EAAI,KAAJ,KACR,QAAW,OAGH,MAEf,CAAC7G,IAIF,qCACA,cAAC,EAAD,CAAQmB,UAAU,kBAAkBC,QAAQ,cAAcC,UAAU,IAClE,cAAC,EAAD,CAAS6C,OAAO,cAAcC,KAAmB,MAAbjC,EAAmBA,EAAY4E,QAAU,OAC7E,cAAC,EAAD,UACE,eAACC,EAAA,EAAD,CAAM5F,UAAU,OAAOiD,MAAO,CAAE4C,QAAS,OAAQC,YAAa,WAA9D,UACE,cAACC,EAAA,EAAD,CAAY9C,MAAO,CAAEI,gBAAiB,UAAWyC,YAAa,UAAWE,cAAe,EAAG3E,MAAO,SAAlG,SACE,eAAC4E,EAAA,EAAD,WAAY5F,EAAE,eAAd,OAAkCuE,EAAlC,IAA0CvE,EAAE,YAA5C,SAKF,cAAC6F,EAAA,EAAD,UACE,cAAC,IAAD,CAAgBC,YAAuB,CAAEC,OAjGpC,MAiGoDC,UAhGjD,yDAgGuE3H,KA/F5E,OAgGD4H,cAAe5B,GAAW,GAC1BC,WAAYA,EAAY4B,UAhGlB,UAgGwCC,UA/FxC,uBC5DLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4ECAGQ,I,YAOPhI,I,YAMEC,I,YAiBFC,IA9BH,SAAU8H,KAAV,iEACL,OADK,SACCC,YAAW1E,EAAiBtD,mBAAmBiI,KAAMjI,IADtD,OAEL,OAFK,SAECgI,YAAW1E,EAAiBvD,WAAWkI,KAAMlI,IAF9C,OAGL,OAHK,SAGCiI,YAAW1E,EAAiBrD,cAAcgI,KAAMhI,IAHjD,uCAOP,SAAUF,GAAWD,GAArB,iEACI,OADJ,SACUoI,YAAI5E,EAAiBlD,aAD/B,OAEI,OAFJ,SAEU8H,YAAIC,YAAK,YAFnB,wCAME,SAAUnI,GAAmBF,GAA7B,yEAKmB,MALnB,iCAKyBsI,aAAK,kBAAMC,MALpC,gBAMGZ,MAAK,SAAAa,GAAQ,OAAIA,EAASC,UAC1Bd,MAAK,SAAAe,GAAM,OAAIA,QAPlB,OAWE,OANMF,EALR,OAUQ1G,EAA2B,MAAZ0G,EAAoB,GAAKA,EAVhD,SAWQJ,YAAI5E,EAAiBpD,kBAAkB0B,IAX/C,+BAaI,OAbJ,oCAaUsG,YAAI5E,EAAiBpD,kBAAkB,OAbjD,uDAiBF,SAAUD,GAAcH,GAAxB,6EAMqB,OALJA,EAAOK,QACd4F,EAAW1F,aAAa2F,QAAQ,YAChCyC,EAHV,0BAGmC1C,GAHnC,kBAM2BqC,aAAK,kBAAMC,MAAMI,GACvChB,MAAK,SAAAa,GAAQ,OAAIA,EAASC,UAC1Bd,MAAK,SAAAe,GAAM,OAAIA,QARpB,OAYI,OANMF,EANV,OAWU5I,EAAqB,MAAZ4I,EAAoB,GAAKA,EAAQ,MAXpD,UAYUJ,YAAI5E,EAAiB/C,aAAab,IAZ5C,gCAcM,OAdN,oCAcYwI,YAAI5E,EAAiB/C,aAAa,KAd9C,uD,gBClCUmI,IAAV,SAAUA,KAAV,iEAEI,OADA3G,QAAQC,IAAI,gBADhB,SAEU2G,YAAI,CACPC,OAHP,wCAOeF,U,SCAFG,GAAUC,cAEVC,GAAiB,SAACC,GAG7B,ICVgCH,EDU1BI,EAAiBC,cACjBC,EAAmB,CAACC,YAAiBP,IAAUI,GAK/CI,EAAY,CAHSC,kBAAe,WAAf,EAAmBH,IAIxCI,EAAoBC,sBAAmB,WAAnB,EAAuBH,GAE3CI,GCnB0BZ,EDmBMA,GCnBWa,0BAAgB,CACjEC,OAAQC,aAAcf,GACtBlI,UAAWkJ,KDkBLC,EAAQC,sBAAYN,EAAaT,EAAgBO,GAUvD,OAFAN,EAAee,IAAItB,IAEZoB,G,6BE0DMG,GAnFQ,WAAO,IAAD,EAELjJ,YAAe,WAAY,CAAEC,aAAa,IAAtDC,EAFiB,EAEjBA,EAFiB,KAEdE,KAEqBG,mBAAS,OAJhB,mBAIlBwE,EAJkB,KAIRmE,EAJQ,KAMzB5D,qBAAU,WACLjG,aAAa8J,QAAQ,WAAYpE,KACjC,CAACA,IAEN,IAwBMqE,EAAkB,SAACC,GACrBtI,QAAQC,IAAI,WAAYqI,EAAGC,OAAOC,OAzBhB,SAACC,GAGnB,IAAMC,EAAU,6BAA6BC,cAE7C,IACI,IAAMC,EAAWH,EAAaI,OAAOF,cACrC,GAHgB,GAGZC,EAASE,OAAuB,KAAO,UAE3C,IADA,IAAIC,EAAc,EACT1E,EAAI,EAAGA,EAAIuE,EAASE,OAAS,EAAGzE,IAErC0E,GAAeL,EAAQM,QAAQJ,EAASK,OAAO5E,IAKnD,IAAM6E,GAFNH,GAAeL,EAAQM,QAAQJ,EAASK,OAAOE,KAEhBT,EAAQI,QAAW,EAClDX,EAAae,EAAUN,EAAW,MACpC,MAAOQ,GACLjB,EAAY,OAOhBkB,CAAcf,EAAGC,OAAOC,QAG5B,OACI,qBAAKzG,MAAO,CACRuH,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,SAJZ,SAMI,eAAC/E,EAAA,EAAD,CAAM5F,UAAU,OAAOiD,MAAO,CAAE6C,YAAa,WAA7C,UACI,cAACC,EAAA,EAAD,CAAY9C,MAAO,CACfI,gBAAiB,UACjByC,YAAa,UACbE,cAAe,EACf3E,MAAO,SAJX,SAOI,cAAC4E,EAAA,EAAD,CAAWhD,MAAO,CAAE2H,UAAW,UAA/B,SAA4CvK,EAAE,sBAElD,cAAC6F,EAAA,EAAD,UAGI,cAAC2E,GAAA,EAAD,CAAOC,SAAU,SAACtB,GAAD,OAAQD,EAAgBC,IAAKpC,KAAK,OAAO1I,KAAK,WAC/DqM,GAAG,WAAWC,YAAa3K,EAAE,sBAG7B,cAAC4K,GAAA,EAAD,CAAYhI,MAAO,CACCuH,QAAS,OACTC,WAAY,SACZC,eAAgB,UAHpC,SAMIxF,GACI,mBAAGzD,KAAI,4BAAuByD,GAA9B,SAA2C7E,EAAE,8BChE5D6K,GAAY,WACvB,OAAQ,cAAC,KAAD,CAAiBlD,QAASA,GAA1B,SACR,eAAC,KAAD,WACA,cAAC,KAAD,CAAOmD,KAAK,SAAZ,SACQ,cAAC,EAAD,MAGN,cAAC,KAAD,CAAOA,KAAK,IAAZ,SACM,cAAC,GAAD,YClBK,SAASC,KACtB,OACE,cAAC,IAAD,CAAUnC,MAAOf,GAAe,IAAhC,SACG,cAAC,GAAD,M,sCCAP3H,KAGG8K,IAAIC,MAKJD,IAAIE,MAGJC,KAAK,CACJC,GAAI,CAAC,KAAM,YACXC,UAAW,KACXC,YAAa,KACbC,OAAO,EACPC,cAAe,CACbC,aAAa,KAKJvL,UAAf,EClBW,WADDwE,OAAOgH,UAAP,cAAmChH,OAAOgH,UAAUC,UAE1DzL,GAAK0L,eAAe,SAEpB1L,GAAK0L,eAAe,SAGxBC,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAChB,GAAD,MAEFiB,SAASC,eAAe,SAgB1B7F,K","file":"static/js/main.8aecd9a1.chunk.js","sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nexport const userTasksSlice = createSlice({\n    name: 'userTasks',\n    initialState: {\n      user:null,\n      tasks: []\n    }\n  ,\n    reducers: {\n     willLogin: (state, action:PayloadAction<any>) => state,\n     willLogout: (state, action:PayloadAction<any>) => state,\n     willGetUserProfile: (state, action:PayloadAction<any>) => state,\n     willLoadTasks: (state, action:PayloadAction<any>) => state,\n\n      didGetUserProfile: (state, action:PayloadAction<any>) => { \n        state.user = action.payload;\n      },\n\n      didLogout:(state) => { \n        state.user = null;\n        state.tasks = [];\n        localStorage.removeItem(\"passcode\");\n      },\n      didLoadTasks: (state, action:PayloadAction<any>) =>{\n        state.tasks = action.payload;\n      },\n \n    \n    }\n});\n\nexport const { actions, reducer } = userTasksSlice;\n\nexport const selectors = {\n  isLogged: (state:any) => {\n    return state.userTasks.user!=null && localStorage.getItem(\"passcode\")==state.userTasks.user[\"passcode\"];\n  },\n  getTasks: (state:any) => {\n    return state.userTasks.tasks;\n  },\n  getUserProfile: (state:any) => {\n    return state.userTasks.user;\n  }\n}\n","import React from \"react\";\nimport {\n    Container, Button, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav,\n    NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions as UserTasksActions, selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\nexport const Header = ({ className, section, showMenu = false }: any) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const _section = t(section) != undefined ? t(section) : \"Forum\"\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const dispatch = useDispatch();\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    console.log(\"UserProfile:\", userProfile);\n    return (\n        <Navbar className={className} color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\" href=\"/\">RIALENET - {_section}</NavbarBrand>\n            {showMenu && (<>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    {(\n                        <Nav className=\"mr-auto\" navbar>\n                        </Nav>\n                    )}\n                    <Nav navbar>\n                        { userProfile!=null && \n                        <>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle className=\"text-white\" nav caret>{userProfile.name.first}{` `}{userProfile.name.last}</DropdownToggle>\n                                <DropdownMenu right>\n                                <DropdownItem onClick={() => {\n                                            dispatch(UserTasksActions.willLogout(\"\"));\n                                        }}>Logout</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </>\n                        }\n                    </Nav>\n                </Collapse>\n            </>)}\n        </Navbar>\n\n    )\n}\n","export class Role {\n    static admin = 1;\n    static teacher = 2;\n    static student = 3;\n}","import { NavItem, NavLink, Nav } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faHome,\n    faChartPie,\n    faBriefcase,\n    faTimes,\n    faQuestion,\n    faImage,\n    faBook,\n    faCalendarAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { Role } from \"../constants\";\n\nexport const SideBar = ({ active, role }: any) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    return (\n        <div style={{\n            border: '0px solid #000',\n            width: '240px',\n            position: 'absolute',\n            backgroundColor: '#f1f1f1',\n            bottom: 0,\n            top: 56\n        }}>\n\n            <Nav vertical className=\"list-unstyled pb-3\">\n                <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                    <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                        style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                        to={\"/public_area\"}>\n                        <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"public_area\")}\n                    </NavLink>\n                </NavItem>\n                {\n                    role == Role.student &&\n                    (\n                        <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/public_area\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"student_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n                {\n                    role == Role.teacher &&\n                    (\n                        <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/public_area\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"teacher_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n\n            </Nav>\n        </div>)\n\n}","export const Content = ({ children, className, fluid = false }: any) => {\n  return (\n    <div className={className} style={{\n      border: '0px solid #000',\n      // width: '240px',\n      position: 'absolute',\n      backgroundColor: 'white',\n      bottom: 0,\n      top: 56,\n      left: fluid ? 0 : 240,\n      right: 0\n    }}>\n      {children}\n    </div>\n  )\n}","import React, { PureComponent, useState, useEffect } from 'react'\nimport { CommentSection } from 'react-comments-section'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation, useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport {\n  Card, CardImg, CardText, CardBody, CardHeader,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst data = [\n  {\n    \"userId\": \"01a\",\n    \"comId\": \"012\",\n    \"fullName\": \"Riya Negi\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n    \"text\": \"Hey, Loved your blog! \",\n    \"replies\": [\n      {\n        \"userId\": \"02a\",\n        \"comId\": \"013\",\n\n        \"fullName\": \"Adam Scott\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Adam&background=random\",\n        \"text\": \"Thanks! It took me 1 month to finish this project but I am glad it helped out someone!🥰\"\n      },\n      {\n        \"userId\": \"01a\",\n        \"comId\": \"014\",\n\n        \"fullName\": \"Riya Negi\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n        \"text\": \"thanks!😊\"\n      }\n    ]\n  },\n  {\n    \"userId\": \"02b\",\n    \"comId\": \"017\",\n    \"fullName\": \"Lily\",\n    \"text\": \"I have a doubt about the 4th point🤔\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Lily&background=random\"\n  },\n  {\n    \"userId\": \"01c\",\n    \"comId\": \"018\",\n    \"fullName\": \"Derek\",\n    \"text\": \"Great explanation!!!\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Derek&background=random\"\n  }\n]\n\nconst md5 = require('md5');\n\n\nconst RialeDiscussionBoard = (props) => {\n  const [comment, setComment] = useState([])\n  const dispatch = useDispatch();\n  \n  const tasks =  useSelector(UserTasksSelectors.getTasks);  //(result == null) ? [] : result[\"tasks\"]\n  const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  \n  const userId = \"01a\"\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n  const name = \"xyz\"\n  const signinUrl = \"/signin\"\n  const signupUrl = \"/signup\"\n  let count = 0\n\n  const query = new URLSearchParams(window.location.search);\n  const passcode = localStorage.getItem(\"passcode\");\n  const passcodeMD5 = query.get(\"passcode\");\n  console.log(\"params:\", passcode);\n  const isAuthenticated = passcodeMD5!=null && md5(passcode)==passcodeMD5;\n\n  \n\n  comment.map(i => { count += 1; i.replies && i.replies.map(i => count += 1) })\n \n  const loadAllTasks = async () => {\n    console.log(\"WENET loading tasks\")\n    try {\n      const url = `/tasks?passcode=${passcode}`\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\"\n        }\n      )\n      console.log(\"WENET authentication response:\", response)\n\n      const result = await response.json();\n      console.log(\"WENET authentication result:\", result)\n\n     \n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          });\n        /*\n        setPosts(\n          tasks.map((task)=> {return(\n           {\"profileImage\" : 'https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg',\n           \"name\" : task[\"goal\"][\"name\"],\n           \"content\" : task[\"goal\"][\"description\"],\n           \"date\" : moment(parseInt(task[\"_creationTs\"])).toDate()\n           } )\n          }\n        )) */\n      }));\n\n    } catch (e) { console.log(\"WENET response error:\", e) }\n  }\n  \n  useEffect(() => {\n    dispatch(UserTasksActions.willGetUserProfile());\n    dispatch(UserTasksActions.willLoadTasks());\n  }, [])\n\n\n  useEffect(() => {\n    if (tasks!=null)\n    {\n\n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          })}));\n    }\n    else setComment([]);\n   \n  }, [tasks])\n\n\n  return (\n    <>\n    <Header className=\"mb-0 text-white\" section=\"public_area\" showMenu={true} />\n      <SideBar active=\"public_area\" role={userProfile!=null? userProfile.role_id : null} />\n      <Content>\n        <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n          <CardHeader style={{ backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n            <CardTitle>{t(\"public_area\")} (n.{count} {t(\"comments\")}) \n              {/*passcode && <div className=\"pull-right\">{passcode}</div>*/}\n            </CardTitle>\n\n          </CardHeader>\n          <CardBody>\n            <CommentSection currentUser={userId && { userId: userId, avatarUrl: avatarUrl, name: name }}\n              commentsArray={comment || []}\n              setComment={setComment} signinUrl={signinUrl} signupUrl={signupUrl} />\n          </CardBody>\n\n        </Card>\n      </Content>\n    </>\n  )\n\n}\n\nexport default RialeDiscussionBoard\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { all, call, takeLatest, put, select, take } from \"redux-saga/effects\";\nimport {\n    actions as UserTasksActions,\n    selectors as UserTasksSelector,\n  } from \"../slices/userTasks\";\nimport { push } from 'connected-react-router'\n\nexport function* sagas() {\n  yield takeLatest(UserTasksActions.willGetUserProfile.type, willGetUserProfile)\n  yield takeLatest(UserTasksActions.willLogout.type, willLogout)\n  yield takeLatest(UserTasksActions.willLoadTasks.type, willLoadTasks) \n}\n\n\nfunction* willLogout(action) {\n    yield put(UserTasksActions.didLogout());\n    yield put(push(\"/logout\"));\n  }\n\n\n  function* willGetUserProfile(action) {\n  \n    const url = `/userprofile`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const userProfile = (response == null) ? [] : response\n    yield put(UserTasksActions.didGetUserProfile(userProfile));\n    } catch (error) {\n      yield put(UserTasksActions.didGetUserProfile(null));\n    }\n}\n\nfunction* willLoadTasks(action) {\n    const data = action.payload;\n    const passcode = localStorage.getItem(\"passcode\")\n    const url = `/tasks?passcode=${passcode}`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const tasks = (response == null) ? [] : response[\"tasks\"]\n    yield put(UserTasksActions.didLoadTasks(tasks));\n    } catch (error) {\n      yield put(UserTasksActions.didLoadTasks([]));\n    }\n}","import { all } from 'redux-saga/effects'\nimport { sagas as userTasksSagas } from './userTasks'\n\nfunction* runAllSagas() {\n    console.log('in root saga')\n    yield all([\n       userTasksSagas()\n    ])\n  }\n\nexport default runAllSagas;","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport runAllSagas from './sagas'\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport { createRootReducer } from './reducers'\nexport const history = createBrowserHistory()\n\nexport const configureStore = (preloadedState: any) => {\n  // const middlewares = [loggerMiddleware, thunkMiddleware]\n\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares: any = [routerMiddleware(history), sagaMiddleware]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  // const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  \n  const rootReducer = createRootReducer(history)\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n \n  if (process.env.NODE_ENV !== 'production' && (module as any).hot) {\n    (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n \n\n  // then run the saga\n  sagaMiddleware.run(runAllSagas)\n\n  return store\n}","import { combineReducers } from 'redux'\n\nimport { reducer as userTasksReducer } from './slices/userTasks'\nimport { connectRouter } from 'connected-react-router'\n\nexport const createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  userTasks: userTasksReducer\n})","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button, Form, FormGroup, Label, Input, FormText, Card, CardHeader, CardBody,\n    CardText, CardTitle, CardFooter\n} from 'reactstrap';\n\n\n//https://www.npmjs.com/package/compress-json\nconst WenetConnector = () => {\n    \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [passcode, setPasscode] = useState(null);\n\n    useEffect(()=>{\n         localStorage.setItem(\"passcode\", passcode);\n      }, [passcode])\n\n    const checkPassCode = (passCodeOrig) => {\n\n        //WQBLLIZQ\n        const charset = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n        const passCodeLen = 8\n        try {\n            const passCode = passCodeOrig.trim().toUpperCase();\n            if (passCode.length != passCodeLen) throw (\"Invalid\");\n            let passCodeSum = 0;\n            for (let i = 0; i < passCode.length - 1; i++) {\n                //console.log(\"Indice carattere:\",charset.indexOf(passCode.charAt(i)))\n                passCodeSum += charset.indexOf(passCode.charAt(i))\n            }\n\n            passCodeSum -= charset.indexOf(passCode.charAt(passCodeLen - 1))\n            //console.log(`PasscodeSum check:${passCodeSum}`)\n            const isValid = (passCodeSum % charset.length) == 0\n            setPasscode( isValid ? passCode : null);\n        } catch (error) {\n            setPasscode(null);\n        }\n\n    }\n\n    const onEnterPasscode = (ev) => {\n        console.log(\"entered:\", ev.target.value)\n        checkPassCode(ev.target.value);\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100vh'\n        }}>\n            <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n                <CardHeader style={{\n                    backgroundColor: \"#007bff\",\n                    borderColor: \"#007bff\",\n                    paddingBottom: 0,\n                    color: 'white'\n\n                }}>\n                    <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n                </CardHeader>\n                <CardBody>\n\n\n                    <Input onChange={(ev) => onEnterPasscode(ev)} type=\"text\" name=\"passcode\" \n                    id=\"passcode\" placeholder={t(\"passcode_enter\")} />\n\n                </CardBody>\n                    <CardFooter style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}>\n                    {\n                        passcode && (\n                            <a href={`/connect?passcode=${passcode}`}>{t(\"connect_to_wenet\")}</a>\n                        )\n                    }\n                        \n                    </CardFooter>\n\n            </Card>\n\n\n        </div>\n    );\n}\n\nexport default WenetConnector","import React from \"react\";\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory\n  } from \"react-router-dom\";\n  import { useSelector } from \"react-redux\";\n  import { history } from './store'\n  \n  import RialeDiscussionBoard from './pages/DiscussionDashBoard'\n  import WenetConnector from \"./pages/WenetConnector\";\nexport const AppRouter = () => { \n  return (<ConnectedRouter history={history}>\n  <Switch>\n  <Route path=\"/forum\">\n          <RialeDiscussionBoard />\n    </Route>\n\n    <Route path=\"/\">\n          <WenetConnector />\n    </Route>\n  </Switch>\n\n</ConnectedRouter>)\n}","import React from \"react\";\nimport { Provider } from 'react-redux'\nimport { configureStore } from './store'\nimport { AppRouter } from './router';\n\nconst Test = () => { return(<></>)}\nexport default function App() {\n  return (\n    <Provider store={configureStore({})}>\n       <AppRouter/>\n    \n    </Provider >\n  );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: ['tl', 'frontend'],\n    defaultNS: 'tl',\n    fallbackLng: 'it',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RialeDiscussionBoard from './pages/DiscussionDashBoard';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-comments-section/dist/index.css'\nimport App from './App';\n\n// seutp i18n ---------------\nimport i18n from './i18n';\n\nvar lng = window.navigator['userLanguage']|| window.navigator.language;\nif(lng !== 'it-IT'){\n    i18n.changeLanguage('en-US');\n}else{\n    i18n.changeLanguage('it-IT');\n}\n   \nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n/*\n//https://create-react-app.dev/docs/deployment/\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
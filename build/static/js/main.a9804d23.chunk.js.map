{"version":3,"sources":["store/slices/userTasks.ts","components/Header.tsx","constants.js","components/SideBar.tsx","components/Content.tsx","reportWebVitals.js","pages/DiscussionDashBoard.jsx","api/wenet_api.js","store/sagas/userTasks.js","store/sagas/index.ts","store/index.ts","store/reducers.ts","components/UtilsComponents.tsx","components/common.tsx","components/StudentComponents.jsx","components/SearchBar.tsx","pages/StudentDashboard.jsx","components/TeacherComponents.jsx","components/StudentsProfileViewer.tsx","pages/TeacherDashboard.jsx","pages/WenetConnector.jsx","router.tsx","App.tsx","i18n.js","index.js"],"names":["userTasksSlice","createSlice","name","initialState","user","tasks","offset","total","filteredIds","studentsProfile","isSendingMessage","reducers","willLogin","state","action","willLogout","willGetUserProfile","willLoadTasks","willCreateTask","willCreateTransaction","willLoadStudentsProfile","setFilteredIds","map","payload","clearFilter","console","log","didGetUserProfile","setIsSendingMessage","setTotal","setOffset","didLogout","localStorage","removeItem","didLoadTasks","didLoadStudentsProfile","actions","reducer","selectors","userTasks","wenet_id","profiles","i","length","Header","className","section","showMenu","useTranslation","useSuspense","t","_section","i18n","undefined","React","useState","isOpen","setIsOpen","dispatch","useDispatch","userProfile","useSelector","UserTasksSelectors","Navbar","style","marginBottom","color","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first","last","DropdownMenu","right","DropdownItem","UserTasksActions","Role","admin","teacher","student","SideBar","active","role","border","width","position","backgroundColor","bottom","top","vertical","NavItem","NavLink","textDecoration","fontWeight","tag","Link","to","icon","faBriefcase","Content","children","fluid","left","reportWebVitals","require","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createNewTask","content","a","fetch","headers","method","body","JSON","stringify","response","text","result","createNewTransaction","logout","sagas","takeLatest","type","put","call","push","json","myJson","sort","t1","t2","runAllSagas","all","userTasksSagas","history","createBrowserHistory","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","router","connectRouter","userTasksReducer","store","createStore","run","ActivityButton","disabled","rest","isActivityRunning","Button","Spinner","size","AppLoader","props","display","alignItems","justifyContent","height","Card","borderColor","CardHeader","paddingBottom","CardTitle","textAlign","CardBody","margin","transactionFieldMapper","studentsTransactionOptions","teachersTransactionOptions","fakeTasks","StudentTransaction","transaction","indexOf","currentSelectedChoice","setCurrentSelectedChoice","currentSelectedStudentText","setCurrentStudentText","getAnswerOption","group","message","index","FormGroup","check","readonly","Input","value","onChange","ev","target","onUpdate","onChangeSelectedChoice","checked","Label","_done","answerLabel","moment","_creationTs","format","Form","padding","choice","marginTop","for","id","onChangeStudentText","renderStudentAnswerText","teacherFeedbackContent","teacherFeedback","getTeacherFeedbackContent","renderTeacherAnswerText","StudentTask","toggle","transactionData","setTransactionData","feedbackTeacherTransactions","setFeedbackTeacherTransactions","newTransactionFormVisibile","setNewTransactionFormVisible","filteredTransactions","setFilteredTransactions","isDone","setIsDone","useEffect","task","ftd","transactions","transactionID","filteredT","getFilteredTransactions","newTVisible","transactionsIDwithFeedback","Object","keys","includes","isValidTransactionData","ft","filter","renderNewTransaction","goal","taskDescription","description","numFeedbacks","label","taskTitle","taskCreationDate","cursor","alignContent","Badge","CardSubtitle","CardFooter","renderTopicContents","SearchBar","setValue","searchEngine","setSearchEngine","MiniSearch","fields","searchOptions","combineWith","extractField","document","fieldName","Array","isArray","obj","values","join","split","reduce","doc","key","storeFields","addAll","results","search","InputGroup","e","prefix","scoredResult","score","userTasksActions","placeholder","InputGroupAddon","addonType","faSearch","fontSize","faTimes","StudentDashboard","filteredTasks","setFilteredTasks","interval","setInterval","seconds","clearInterval","role_id","IconButton","marginRight","borderWidth","borderStyle","borderRadius","Provider","data-place","data-for","data-tip","TeacherFeedback","currentSelectedTeacherText","setCurrentTeacherText","getTeacherFeedbackOption","onChangeTeacherText","createFeedbackTransaction","TeacherTransaction","transactionActioneer","StudentsProfileSelector","getStudentAnswerOption","TaskCreator","currentTaskTitle","setCurrentTaskTitle","currentTaskDescription","setCurrentTaskDescription","required","onChangeTaskTitle","onChangeTaskDescription","onClose","trim","TeacherTasksViewer","faPlus","Modal","ModalHeader","ModalBody","TeacherTaskViewer","amountOfFeedbackToSend","setAmountOfFeedbackToSend","getAmountOfFeedbackToSend","feedbackTransactions","StudentsProfileViewer","columns","dataField","hidden","StudentsProfileAction","bootstrap4","keyField","data","TeacherDashboard","activeTab","setActiveTab","tabs","background","TabContent","TabPane","tabId","WenetConnector","passcode","setPasscode","setItem","onEnterPasscode","passCodeOrig","charset","toUpperCase","passCode","passCodeSum","charAt","isValid","passCodeLen","error","checkPassCode","href","AppRouter","alert","path","App","use","Backend","initReactI18next","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue","window","navigator","language","changeLanguage","ReactDOM","render","Fragment","getElementById"],"mappings":"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","file":"static/js/main.a9804d23.chunk.js","sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport { map, includes } from 'lodash'\nimport { fakeTasks } from '../../components/common';\nexport const userTasksSlice = createSlice({\n    name: 'userTasks',\n    initialState: {\n      user:null,\n\n      //@audit INFO in production replace with []\n      tasks: [],\n      offset: 0,\n      total : 0,\n      filteredIds: null,\n      studentsProfile: [],\n      isSendingMessage: false\n    }\n  ,\n    reducers: {\n     willLogin: (state, action:PayloadAction<any>) => state,\n     willLogout: (state, action:PayloadAction<any>) => state,\n     willGetUserProfile: (state, action:PayloadAction<any>) => state,\n     willLoadTasks: (state, action:PayloadAction<any>) => state,\n     willCreateTask: (state, action:PayloadAction<any>) => state,\n     willCreateTransaction: (state, action:PayloadAction<any>) => state,\n     willLoadStudentsProfile: (state, action:PayloadAction<any>) => state,\n\n     setFilteredIds: (state, action) => {\n      state.filteredIds = map(action.payload, 'id') as any;\n    },\n\n    clearFilter: (state, action: PayloadAction<any>) => {\n      console.log('in clear filter')\n      state.filteredIds = null;\n    },\n      \n     didGetUserProfile: (state, action:PayloadAction<any>) => { \n        state.user = action.payload;\n      },\n\n      setIsSendingMessage:(state, action) =>\n      {\n        state.isSendingMessage = action.payload;\n      },\n\n      setTotal:(state, action) =>\n      {\n        state.total = action.payload;\n      },\n\n      setOffset:(state, action) =>\n      {\n        state.offset = action.payload;\n      },\n\n\n      didLogout:(state) => { \n        state.user = null;\n        state.tasks = [];\n        state.isSendingMessage = false;\n        localStorage.removeItem(\"passcode\");\n      },\n\n      didLoadTasks: (state, action:PayloadAction<any>) =>{\n        state.tasks = action.payload[\"tasks\"];\n        state.offset =  action.payload[\"offset\"];\n        state.total =  action.payload[\"total\"];\n      },\n      didLoadStudentsProfile: (state, action:PayloadAction<any>) =>{\n        state.studentsProfile = action.payload;\n      }\n    }\n});\n\nexport const { actions, reducer } = userTasksSlice;\n\nexport const selectors = {\n\n  getFilteredIds: (state: any) => state.userTasks.filteredIds,\n\n  isLogged: (state:any) => {\n    return state.userTasks.user!=null && localStorage.getItem(\"passcode\")==state.userTasks.user[\"passcode\"];\n  },\n  getTasks: (state:any) => {\n    return state.userTasks.tasks;\n  },\n  getUserProfile: (state:any) => {\n    //return {\"role_id\" : 1, \"name\" : {\"first\" : \"test\", \"last\" : \"test\"}}\n    return state.userTasks.user;\n  },\n  getStudentsProfile: (state:any) => {\n    return state.userTasks.studentsProfile;\n  },\n\n  isSendingMessage: (state:any) => {\n    return state.userTasks.isSendingMessage;\n  },\n\n  getTasksTotal: (state:any) => {\n    return state.userTasks.total;\n  },\n\n  getTasksOffset: (state:any) => {\n    return state.userTasks.offset;\n  },\n\n\n  getStudentDetailsByWenetID: (wenet_id:any) => (state:any) => {\n     const profiles = state.userTasks.studentsProfile;\n     for (let i=0;i<profiles.length;i++)\n     {\n       if (profiles[i][\"wenet_id\"]==wenet_id)\n       return profiles[i];\n     }\n     return null;\n  }\n}\n","\nimport React, { useState, useEffect } from 'react'\nimport {\n    Container, Button, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav,\n    NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions as UserTasksActions, selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\nexport const Header = ({ className, section, showMenu = false }: any) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const _section = t(section) != undefined ? t(section) : \"Forum\"\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const dispatch = useDispatch();\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    \n/*\n    useEffect(() => {\n        dispatch(push(\"/\"));\n       // dispatch(UserTasksActions.willLoadTasks());\n    }, [userProfile])\n*/\n\n    console.log(\"UserProfile:\", userProfile);\n    return (\n        <Navbar style={{marginBottom:\"10px\"}} className={className} color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\">RIALENET - {_section}</NavbarBrand>\n            {showMenu && (<>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    {(\n                        <Nav className=\"mr-auto\" navbar>\n                        </Nav>\n                    )}\n                    <Nav navbar>\n                        { userProfile!=null && userProfile.name!=null &&\n                        <>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle className=\"text-white\" nav caret>{userProfile.name.first}{` `}{userProfile.name.last}</DropdownToggle>\n                                <DropdownMenu right>\n                                <DropdownItem onClick={() => {\n                                            dispatch(UserTasksActions.willLogout(\"\"));\n                                        }}>Logout</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </>\n                        }\n                    </Nav>\n                </Collapse>\n            </>)}\n        </Navbar>\n\n    )\n}\n","export class Role {\n    static admin = 1;\n    static teacher = 2;\n    static student = 3;\n}","import { NavItem, NavLink, Nav } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faHome,\n    faChartPie,\n    faBriefcase,\n    faTimes,\n    faQuestion,\n    faImage,\n    faBook,\n    faCalendarAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { Role } from \"../constants\";\n\nexport const SideBar = ({ active, role }: any) => {\n  \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    console.log(\"Role in sidebar ->\", role, Role.teacher, (role==Role.teacher || role==Role.admin));\n    return (\n        <div style={{\n            border: '0px solid #000',\n            width: '240px',\n            position: 'absolute',\n            backgroundColor: '#f1f1f1',\n            bottom: 0,\n            top: 56\n        }}>\n\n            <Nav vertical className=\"list-unstyled pb-3\">\n                {/* \n                <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                    <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                        style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                        to={\"/forum\"}>\n                        <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"public_area\")}\n                    </NavLink>\n                </NavItem>\n                */}\n                {\n                    (role==Role.student || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"student_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"student_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/student_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"student_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n                {\n                    (role==Role.teacher || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"teacher_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"teacher_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/teacher_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"teacher_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n\n            </Nav>\n        </div>)\n\n}","export const Content = ({ children, className, fluid = false }: any) => {\n  return (\n    <div className={className} style={{\n      border: '0px solid #000',\n      // width: '240px',\n      position: 'absolute',\n      backgroundColor: 'white',\n      bottom: 0,\n      top: 56,\n      left: fluid ? 0 : 240,\n      right: 0\n    }}>\n      {children}\n    </div>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { PureComponent, useState, useEffect } from 'react'\nimport { CommentSection } from 'react-comments-section'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation, useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport {\n  Card, CardImg, CardText, CardBody, CardHeader,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst data = [\n  {\n    \"userId\": \"01a\",\n    \"comId\": \"012\",\n    \"fullName\": \"Riya Negi\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n    \"text\": \"Hey, Loved your blog! \",\n    \"replies\": [\n      {\n        \"userId\": \"02a\",\n        \"comId\": \"013\",\n\n        \"fullName\": \"Adam Scott\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Adam&background=random\",\n        \"text\": \"Thanks! It took me 1 month to finish this project but I am glad it helped out someone!🥰\"\n      },\n      {\n        \"userId\": \"01a\",\n        \"comId\": \"014\",\n\n        \"fullName\": \"Riya Negi\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n        \"text\": \"thanks!😊\"\n      }\n    ]\n  },\n  {\n    \"userId\": \"02b\",\n    \"comId\": \"017\",\n    \"fullName\": \"Lily\",\n    \"text\": \"I have a doubt about the 4th point🤔\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Lily&background=random\"\n  },\n  {\n    \"userId\": \"01c\",\n    \"comId\": \"018\",\n    \"fullName\": \"Derek\",\n    \"text\": \"Great explanation!!!\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Derek&background=random\"\n  }\n]\n\nconst md5 = require('md5');\n\n\nconst RialeDiscussionBoard = (props) => {\n  const [comment, setComment] = useState([])\n  const dispatch = useDispatch();\n  \n  const tasks =  useSelector(UserTasksSelectors.getTasks);  //(result == null) ? [] : result[\"tasks\"]\n  const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  \n  const userId = \"01a\"\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n  const name = \"xyz\"\n  const signinUrl = \"/signin\"\n  const signupUrl = \"/signup\"\n  let count = 0\n\n  const query = new URLSearchParams(window.location.search);\n  const passcode = localStorage.getItem(\"passcode\");\n  const passcodeMD5 = query.get(\"passcode\");\n  console.log(\"params:\", passcode);\n  const isAuthenticated = passcodeMD5!=null && md5(passcode)==passcodeMD5;\n\n  \n\n  comment.map(i => { count += 1; i.replies && i.replies.map(i => count += 1) })\n \n  const loadAllTasks = async () => {\n    console.log(\"WENET loading tasks\")\n    try {\n      const url = `/tasks?passcode=${passcode}`\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\"\n        }\n      )\n      console.log(\"WENET authentication response:\", response)\n\n      const result = await response.json();\n      console.log(\"WENET authentication result:\", result)\n\n     \n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          });\n        /*\n        setPosts(\n          tasks.map((task)=> {return(\n           {\"profileImage\" : 'https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg',\n           \"name\" : task[\"goal\"][\"name\"],\n           \"content\" : task[\"goal\"][\"description\"],\n           \"date\" : moment(parseInt(task[\"_creationTs\"])).toDate()\n           } )\n          }\n        )) */\n      }));\n\n    } catch (e) { console.log(\"WENET response error:\", e) }\n  }\n  \n  useEffect(() => {\n    dispatch(UserTasksActions.willGetUserProfile());\n    dispatch(UserTasksActions.willLoadTasks());\n  }, [])\n\n\n  useEffect(() => {\n    if (tasks!=null)\n    {\n\n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          })}));\n    }\n    else setComment([]);\n   \n  }, [tasks])\n\n\n  return (\n    <>\n    <Header className=\"mb-0 text-white\" section=\"public_area\" showMenu={true} />\n      <SideBar active=\"public_area\" role={userProfile!=null? userProfile.role_id : null} />\n      <Content>\n        <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n          <CardHeader style={{ backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n            <CardTitle>{t(\"public_area\")} (n.{count} {t(\"comments\")}) \n              {/*passcode && <div className=\"pull-right\">{passcode}</div>*/}\n            </CardTitle>\n\n          </CardHeader>\n          <CardBody>\n            <CommentSection currentUser={userId && { userId: userId, avatarUrl: avatarUrl, name: name }}\n              commentsArray={comment || []}\n              setComment={setComment} signinUrl={signinUrl} signupUrl={signupUrl} />\n          </CardBody>\n\n        </Card>\n      </Content>\n    </>\n  )\n\n}\n\nexport default RialeDiscussionBoard\n\n\n\n","export const createNewTask = async (content) => {\n    const url = \"/newtask\"\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify({ \"content\": content })  // JSON.stringify(\"PROVA 2 CONTENUTO\")\n        }\n      )\n      console.log(\"SAGA2 API WENET newtask response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 API WENET newtask result:\", result);\n      return result;\n    } catch (e) { console.log(\"WENET API newtask response error:\", e); return null;}\n  }\n\n\n  export const createNewTransaction = async (content) => {\n    const url = `/newtransaction`;\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify({ \"content\": content }) \n        }\n      )\n      console.log(\"SAGA2 (API) WENET newtransaction response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 (API) WENET newtransaction result:\", result)\n      // ricarico tutti i task dopo che ne ho aggiunto\n      //await loadAllTasks();\n      return result;\n    } catch (e) { console.log(\"WENET newtransaction response error:\", e) \n      return null;\n  }\n  }\n\n  export const logout = async () => {\n    const url = `/logout`;\n    try {\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\",\n        }\n      )\n      console.log(\"SAGA2 (API) logout response:\", response)\n      const result = await response.text();\n      console.log(\"SAGA2 (API) logout result:\", result)\n      return result;\n    } catch (e) { console.log(\"WENET logout response error:\", e) \n      return null;\n  }\n  }","import { all, call, takeLatest, put, select, take } from \"redux-saga/effects\";\nimport {\n    actions as UserTasksActions,\n    selectors as UserTasksSelector,\n  } from \"../slices/userTasks\";\nimport { push } from 'connected-react-router'\nimport { createNewTask, createNewTransaction, logout } from \"../../api/wenet_api\";\n\nexport function* sagas() {\n  yield takeLatest(UserTasksActions.willGetUserProfile.type, willGetUserProfile)\n  yield takeLatest(UserTasksActions.willLogout.type, willLogout)\n  yield takeLatest(UserTasksActions.willLoadTasks.type, willLoadTasks) \n  yield takeLatest(UserTasksActions.willLoadStudentsProfile.type, willLoadStudentsProfile) \n  \n  yield takeLatest(UserTasksActions.willCreateTask.type, willCreateTask) \n  yield takeLatest(UserTasksActions.willCreateTransaction.type, willCreateTransaction) \n}\n\n\nfunction* willLogout(action) {\n    yield put(UserTasksActions.didLogout());\n   \n    const result = yield call(logout)\n    console.log(\"Logout result:\", result);\n    yield put(push(\"/\"));\n  }\n\n\n  function* willGetUserProfile(action) {\n  \n    const url = `/userprofile`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const userProfile = (response == null) ? null : response\n    yield put(UserTasksActions.didGetUserProfile(userProfile));\n    if (userProfile==null)\n    {yield put(push(\"/logout\"));}\n\n    } catch (error) {\n      yield put(UserTasksActions.didGetUserProfile(null));\n      yield put(push(\"/\"));\n    }\n}\n\n\nfunction* willCreateTask(action) {\n  const content = action.payload; \n  yield put(UserTasksActions.setIsSendingMessage(true));\n  const result = yield call(createNewTask,content)\n  if (result!=null)\n  {\n    console.log(\"SAGA2 willCreateTask result OK. Loading tasks...|\",result);\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n    yield put(UserTasksActions.willLoadTasks()); \n  }\n  else{\n    console.log(\"SAGA2 willCreateNewTask error\");\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n  }\n}\n\nfunction* willCreateTransaction(action) {\n  const content = action.payload; \n  yield put(UserTasksActions.setIsSendingMessage(true));\n  const result = yield call(createNewTransaction,content)\n  if (result!=null)\n  {\n    console.log(\"SAGA2 willCreateTransaction result OK. Loading tasks...|\",result);\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n    yield put(UserTasksActions.willLoadTasks()); \n  }\n  else{\n    console.log(\"SAGA2 willCreateTransaction error\");\n    yield put(UserTasksActions.setIsSendingMessage(false)); \n  }\n}\n\n\n\nfunction* willLoadTasks(action) {\n  console.log(\"SAGA2 called willLoadTasks NEW!\");\n    //const data = action.payload;\n    //const passcode = localStorage.getItem(\"passcode\")\n    const url = `/tasks`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const tasks = (response == null) ? [] : response[\"tasks\"]\n    const offset =  (response == null) ? 0 : response[\"offset\"]\n    const total =  (response == null) ? 0 : response[\"total\"]\n    // Ordino i task dal più recente al piu' vecchio\n    tasks.sort((t1,t2)=> t2[\"_creationTs\"]- t1[\"_creationTs\"]);\n\n    yield put(UserTasksActions.didLoadTasks({tasks, offset, total}));\n  \n    } catch (error) {\n      yield put(UserTasksActions.didLoadTasks({tasks:[], offset:0, total:0}));\n    }\n}\n\nfunction* willLoadStudentsProfile(action) {\n  const url = `/students`;\n  try{\n  const response = yield call(() => fetch(url)\n  .then(response => response.json())\n  .then(myJson => myJson)\n  );\n  const studentsProfile = (response == null) ? [] : response;\n  yield put(UserTasksActions.didLoadStudentsProfile(studentsProfile));\n  } catch (error) {\n    yield put(UserTasksActions.didLoadStudentsProfile([]));\n  }\n}\n\n\n\n\n/*\nconst newTransaction = {\n        \"taskId\": \"62a0b984925841535833b690\",\n        \"label\": \"cannotAnswer\",\n        \"attributes\": {\n            \"reason\": \"....\"\n        },\n        \"actioneerId\": \"studente\",\n        \"messages\": []\n     }\n     */","import { all } from 'redux-saga/effects'\nimport { sagas as userTasksSagas } from './userTasks'\n\nfunction* runAllSagas() {\n    console.log('in root saga')\n    yield all([\n       userTasksSagas()\n    ])\n  }\n\nexport default runAllSagas;","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport runAllSagas from './sagas'\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport { createRootReducer } from './reducers'\nexport const history = createBrowserHistory()\n\nexport const configureStore = (preloadedState: any) => {\n  // const middlewares = [loggerMiddleware, thunkMiddleware]\n\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares: any = [routerMiddleware(history), sagaMiddleware]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  // const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  \n  const rootReducer = createRootReducer(history)\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n \n  if (process.env.NODE_ENV !== 'production' && (module as any).hot) {\n    (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n \n\n  // then run the saga\n  sagaMiddleware.run(runAllSagas)\n\n  return store\n}","import { combineReducers } from 'redux'\n\nimport { reducer as userTasksReducer } from './slices/userTasks'\nimport { connectRouter } from 'connected-react-router'\n\nexport const createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  userTasks: userTasksReducer\n})","import { useSelector } from 'react-redux';\nimport { Button, Spinner, Card, CardHeader, CardBody, CardTitle } from 'reactstrap';\n\nimport { selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\n//https://reactstrap.github.io/?path=/story/home-installation--page\n\nexport const ActivityButton = ({ name, disabled, children, ...rest }: any) => {\n\n  //const isActivityRunning = useSelector(state => UISelectors.activityRunningSelector(state, name));\n  const isActivityRunning = useSelector(UserTasksSelectors.isSendingMessage);\n  return (\n    <>\n      {\n        isActivityRunning ? (\n          < Button disabled {...rest}>{children}  <Spinner size=\"sm\" color=\"light\" /></Button >\n        ) : (\n          < Button disabled={disabled} {...rest}>{children}</Button >\n        )\n      }\n    </>\n  )\n}\n\n\nexport const AppLoader = (props: any) => {\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  return (\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh'\n    }}>\n      <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n        <CardHeader style={{\n          backgroundColor: \"#007bff\",\n          borderColor: \"#007bff\",\n          paddingBottom: 0,\n          color: 'white'\n\n        }}>\n          <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n            <Spinner style={{ margin: \"20px\" }} color=\"primary\" />\n          </div>\n        </CardBody>\n      </Card>\n\n\n    </div>\n  );\n\n}","export const transactionFieldMapper = {\n    \"cannotAnswer\": \"reason\",\n    \"needClarification\": \"note\",\n    \"notSure\": \"note\",\n    \"myAnswer\": \"answer\",\n    \"goToAttachment\": \"attachment\",\n    \"goToTimelinePosition\": \"timelineLink\",\n    \"goToTag\": \"tag\",\n    \"rightAnswer\": \"message\",\n    \"freeAnnotation\" : \"message\"\n}\n\n//export const studentsTransactionOptions = [\"cannotAnswer\", \"needClarification\", \"notSure\", \"myAnswer\"];\nexport const studentsTransactionOptions = [\"myAnswer\", \"needClarification\", \"cannotAnswer\" ];\n\nexport const teachersTransactionOptions = [\"freeAnnotation\", \"goToAttachment\", \"goToTimelinePosition\", \n                                            \"goToTag\", \"rightAnswer\"];\n\n\nconst fakeStudentTransactions = [\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"needClarification\",\n        \"attributes\": {\n            \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ],\n        \"id\": \"0\",\n        \"_creationTs\": 1655835879,\n        \"_lastUpdateTs\": 1655835879\n    },\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"notSure\",\n        \"attributes\": {\n            \"note\": \"Non saprei rispondere\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ]\n    }\n]\n\nexport const fakeTask = {\n    \"id\": \"62a9ff27925841535833b6a1\",\n    \"_creationTs\": 1655308072,\n    \"_lastUpdateTs\": 1656328149,\n    \"taskTypeId\": \"62a87b53925841535833b69d\",\n    \"requesterId\": \"671\",\n    \"appId\": \"xUi1mwCJ0X\",\n    \"goal\": {\n        \"name\": \"Primo Task rivolto allo studente Pantera assonnata\",\n        \"description\": \"Descrizione del primo Task rivolto allo studente Pantera assonnata\",\n        \"keywords\": [\n            \"social interaction\",\n            \"lab\"\n        ]\n    },\n    \"norms\": [],\n    \"attributes\": {},\n    \"closeTs\": null,\n    \"communityId\": \"624703620e5af47df0eed5eb\",\n    \"transactions\": [\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"needClarification\",\n            \"attributes\": {\n                \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"0\",\n            \"_creationTs\": 1655835879,\n            \"_lastUpdateTs\": 1655835879\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"notSure\",\n            \"attributes\": {\n                \"note\": \"Non saprei rispondere\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"1\",\n            \"_creationTs\": 1655884187,\n            \"_lastUpdateTs\": 1655884187\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"myAnswer\",\n            \"attributes\": {\n                \"answer\": \"Proprio non lo so\"\n            },\n            \"actioneerId\": \"928\",\n            \"messages\": [],\n            \"id\": \"2\",\n            \"_creationTs\": 1655993192,\n            \"_lastUpdateTs\": 1655993192\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"goToTag\",\n            \"attributes\": {\n                \"tag\": \"TAG_HELP\"\n            },\n            \"actioneerId\": \"671\",\n            \"messages\": [],\n            \"id\": \"3\",\n            \"_creationTs\": 1656326636,\n            \"_lastUpdateTs\": 1656326636\n        },\n        {\n            \"taskId\": \"62a9ff27925841535833b6a1\",\n            \"label\": \"goToTag\",\n            \"attributes\": {\n                \"tag\": \"TAG_ESOMA\",\n                \"transactionID\": \"0\"\n            },\n            \"actioneerId\": \"671\",\n            \"messages\": [],\n            \"id\": \"4\",\n            \"_creationTs\": 1656328149,\n            \"_lastUpdateTs\": 1656328149\n        }\n    ]\n}\n\n\nexport const fakeTasks = [{\n    \"id\": \"62a9ff27925841535833b6a1\", \"_creationTs\": 1655308072,\n    \"_lastUpdateTs\": 1656426153, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\",\n    \"appId\": \"xUi1mwCJ0X\", \"goal\": {\n        \"name\": \"Primo Task rivolto allo studente Pantera assonnata\",\n        \"description\": \"Descrizione del primo Task rivolto allo studente Pantera assonnata\",\n        \"keywords\": [\"social interaction\", \"lab\"]\n    }, \"norms\": [], \"attributes\": {}, \"closeTs\": null,\n    \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"needClarification\", \"attributes\": { \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1655835879, \"_lastUpdateTs\": 1655835879\n    }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non saprei rispondere\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"1\", \"_creationTs\": 1655884187, \"_lastUpdateTs\": 1655884187 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"myAnswer\", \"attributes\": { \"answer\": \"Proprio non lo so\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"2\", \"_creationTs\": 1655993192, \"_lastUpdateTs\": 1655993192 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToTag\", \"attributes\": { \"tag\": \"TAG_HELP\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"3\", \"_creationTs\": 1656326636, \"_lastUpdateTs\": 1656326636 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToTag\", \"attributes\": { \"tag\": \"TAG_ESOMA\", \"transactionID\": \"0\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"4\", \"_creationTs\": 1656328149, \"_lastUpdateTs\": 1656328149 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non so cosa rispondere\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"5\", \"_creationTs\": 1656407889, \"_lastUpdateTs\": 1656407889 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non so cosa rispondere\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"6\", \"_creationTs\": 1656407905, \"_lastUpdateTs\": 1656407905 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToAttachment\", \"attributes\": { \"attachment\": \"il_dna.pdf\", \"transactionID\": \"5\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"7\", \"_creationTs\": 1656408841, \"_lastUpdateTs\": 1656408841 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Ho bisogno di ulteriori chiarimenti!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"8\", \"_creationTs\": 1656413631, \"_lastUpdateTs\": 1656413631 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non ho ancora ricevuto alcun feedback!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"9\", \"_creationTs\": 1656414157, \"_lastUpdateTs\": 1656414157 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Ribasisco che ho bisogno di chiarimenti!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"10\", \"_creationTs\": 1656414274, \"_lastUpdateTs\": 1656414274 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non mi sento sicuro della risposta\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"11\", \"_creationTs\": 1656414477, \"_lastUpdateTs\": 1656414477 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"cannotAnswer\", \"attributes\": { \"reason\": \"NON SONO in grado di rispondere!\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"12\", \"_creationTs\": 1656415030, \"_lastUpdateTs\": 1656415030 }, { \"taskId\": \"62a9ff27925841535833b6a1\", \"label\": \"goToTimelinePosition\", \"attributes\": { \"timelineLink\": \"https://beta.riale.ideab3.it/public/accbe99d-97a8-4f3b-8cf9-8b1f35ef5b87?start_time=1636327040000&active_tab=0\", \"transactionID\": \"8\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"13\", \"_creationTs\": 1656426153, \"_lastUpdateTs\": 1656426153 }]\n}, { \"id\": \"62aa04a3925841535833b6a2\", \"_creationTs\": 1655309475, \"_lastUpdateTs\": 1656409400, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Secondo Task da Lupo Solitario a Pantera assonnata\", \"description\": \"Descrizione del Secondo Task da Lupo Solitario a Pantera assonnata\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{ \"taskId\": \"62aa04a3925841535833b6a2\", \"label\": \"CREATE_TASK\", \"attributes\": {}, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1655835291, \"_lastUpdateTs\": 1655835291 }, { \"taskId\": \"62aa04a3925841535833b6a2\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non sono sicuro...\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"1\", \"_creationTs\": 1656409400, \"_lastUpdateTs\": 1656409400 }] }, {\n    \"id\": \"62b9cc67925841535833b6b8\", \"_creationTs\": 1656343656, \"_lastUpdateTs\": 1656407942, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Terzo Task per Pantera assonnata\", \"description\": \"Che cosa è la tagmantazione?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null,\n    \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{ \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Non capisco il termine \\\"tagmantazione\\\"\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1656344477, \"_lastUpdateTs\": 1656344477 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"goToAttachment\", \"attributes\": { \"attachment\": \"Scusa per il refuso, intendevo dire \\\"Tagmentazione\\\"\", \"transactionID\": \"0\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"1\", \"_creationTs\": 1656344583, \"_lastUpdateTs\": 1656344583 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"myAnswer\", \"attributes\": { \"answer\": \"E' una tecnica impiegata nel processo di sequenziamento del DNA\" }, \"actioneerId\": \"928\", \"messages\": [], \"id\": \"2\", \"_creationTs\": 1656344745, \"_lastUpdateTs\": 1656344745 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"needClarification\", \"attributes\": { \"note\": \"Ciao, sono scoiattolo ardito e non penso di avere la risposta...posso avere dell'aiuto?\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"3\", \"_creationTs\": 1656401711, \"_lastUpdateTs\": 1656401711 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"goToTag\", \"attributes\": { \"tag\": \"TAGMENTAZIONE\", \"transactionID\": \"3\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"4\", \"_creationTs\": 1656402034, \"_lastUpdateTs\": 1656402034 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"rightAnswer\", \"attributes\": { \"message\": \"Bravo, la risposta è corretta!\", \"transactionID\": \"2\" }, \"actioneerId\": \"671\", \"messages\": [], \"id\": \"5\", \"_creationTs\": 1656403752, \"_lastUpdateTs\": 1656403752 }, { \"taskId\": \"62b9cc67925841535833b6b8\", \"label\": \"myAnswer\", \"attributes\": { \"answer\": \"adesso penso di saperlo\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"6\", \"_creationTs\": 1656407942, \"_lastUpdateTs\": 1656407942 }]\n}, { \"id\": \"62b9cee4925841535833b6b9\", \"_creationTs\": 1656344293, \"_lastUpdateTs\": 1656344293, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Quarto task per i miei studenti\", \"description\": \"Che cosa si intende per sequenziamento del DNA?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62b9cf34925841535833b6ba\", \"_creationTs\": 1656344373, \"_lastUpdateTs\": 1656344373, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Quinto task\", \"description\": \"Che cosa è la drosophila?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62bac539925841535833b6bb\", \"_creationTs\": 1656407353, \"_lastUpdateTs\": 1656407353, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Nuovo task rivolto ai miei 2 studenti\", \"description\": \"Che cosa è il DNA?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62bae5bc925841535833b6bc\", \"_creationTs\": 1656415677, \"_lastUpdateTs\": 1656415677, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Domanda per Scoliattolo Ardito e Pantera Assonnata\", \"description\": \"Come si risolvono le equazioni di secondo grado?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [] }, { \"id\": \"62bae7a9925841535833b6bd\", \"_creationTs\": 1656416169, \"_lastUpdateTs\": 1656416303, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Nuova domanda per SA e PA\", \"description\": \"Che cosa sono le molecole?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\", \"transactions\": [{ \"taskId\": \"62bae7a9925841535833b6bd\", \"label\": \"notSure\", \"attributes\": { \"note\": \"Non saprei\" }, \"actioneerId\": \"1020\", \"messages\": [], \"id\": \"0\", \"_creationTs\": 1656416303, \"_lastUpdateTs\": 1656416303 }] }, {\n    \"id\": \"62bb106e925841535833b6be\", \"_creationTs\": 1656426606, \"_lastUpdateTs\": 1656426606, \"taskTypeId\": \"62a87b53925841535833b69d\", \"requesterId\": \"671\", \"appId\": \"xUi1mwCJ0X\", \"goal\": { \"name\": \"Nuovo task di test\", \"description\": \"Il numero 1 è primo?\", \"keywords\": [\"social interaction\", \"lab\"] }, \"norms\": [], \"attributes\": {}, \"closeTs\": null, \"communityId\": \"624703620e5af47df0eed5eb\",\n    \"transactions\": []\n}]","import React, { useState, useEffect } from 'react'\nimport {\n    Button, Collapse, Form, FormText, Badge,\n    Card, CardHeader, CardTitle, CardSubtitle, CardBody, CardFooter,\n    FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport moment from 'moment';\nimport {ActivityButton} from './UtilsComponents';\n\nimport { transactionFieldMapper, studentsTransactionOptions } from './common';\n\nconst fakeStudentTransactions = [\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"needClarification\",\n        \"attributes\": {\n            \"note\": \"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ],\n        \"id\": \"0\",\n        \"_creationTs\": 1655835879,\n        \"_lastUpdateTs\": 1655835879\n    },\n    {\n        \"taskId\": \"62a9ff27925841535833b6a1\",\n        \"label\": \"notSure\",\n        \"attributes\": {\n            \"note\": \"Non saprei rispondere\"\n        },\n        \"actioneerId\": \"928\",\n        \"messages\": [\n\n        ]\n    }\n]\n\n\n\nconst StudentTransaction = (props) => {\n\n    const { transaction } = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] =\n        useState(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && ev.target.value >= 0 && \n        props.onUpdate(studentsTransactionOptions[ev.target.value],\n            currentSelectedStudentText)\n    }\n\n    const onChangeStudentText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentStudentText(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && \n        props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    const getAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        const _done = props.readonly ? \"_done\" : \"\"\n        const choice = `${studentsTransactionOptions[currentSelectedChoice]}${_done}`\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`comment_on_${choice}`)}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => onChangeStudentText(ev)}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackContent = () => {\n        const { teacherFeedback, transaction } = props;\n        if (teacherFeedback == null) return null;\n        console.log(\"TF FeedbackTransaction ID:\", teacherFeedback);\n        const teacherText = t(`student_comment_on_${teacherFeedback[\"label\"]}`) + \" \" +\n            teacherFeedback[\"attributes\"][transactionFieldMapper[teacherFeedback[\"label\"]]]\n        return teacherText;\n    }\n\n    const renderTeacherAnswerText = () => {\n        const teacherFeedbackContent = getTeacherFeedbackContent()\n\n        return teacherFeedbackContent && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={teacherFeedbackContent}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    const _done = props.readonly ? \"_done\" : \"\"\n    const answerLabel = `selectAnswer${_done}`\n\n    return (\n        <>\n            {props.transaction &&\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <Label>\n                        <b>{moment(props.transaction._creationTs*1000).format(\"DD/MM/YYYY - HH:mm\")}</b>\n                    </Label>\n                </div>\n            }\n            <Form style={props.readonly ? \n            { border: \"1px solid #00FF11\", padding: \"10px\", margin: \"10px\" } :\n            { border: \"1px solid #FF0000\", padding: \"10px\", margin: \"10px\" }\n            }>\n\n\n                <Label>\n                    <b>{t(answerLabel)}</b>\n                </Label>\n                {renderAnswerOptions()}\n                {renderStudentAnswerText()}\n                {renderTeacherAnswerText()}\n            </Form>\n        </>)\n}\n\nexport const StudentTask = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const [transactionData, setTransactionData] = useState(null);\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [feedbackTeacherTransactions, setFeedbackTeacherTransactions] = useState({})\n    const [newTransactionFormVisibile, setNewTransactionFormVisible] = useState(false);\n    const [filteredTransactions, setFilteredTransactions] = useState([]);\n    const [isDone, setIsDone] = useState(false);\n\n    useEffect(() => {\n        const { task } = props;\n        console.log(\"Student task:\", task);\n        let ftd = {}\n        let isDone = false;\n        for (let i = 0; i < task.transactions.length; i++) {\n            const transactionID = task.transactions[i][\"attributes\"][\"transactionID\"];\n            // mappo solamente le feedback transaction riferite alle transaction che hanno\n            // come actioneerId lo studente correntemente loggato\n            if (transactionID != null &&\n                userProfile != null && userProfile[\"id\"] == task.transactions[transactionID][\"actioneerId\"]\n            ) {\n                ftd[transactionID] = task.transactions[i]\n                // setto come concluso il task se almeno un feedback del docente indica che la risposta è esatta\n                if (ftd[transactionID][\"label\"]==\"rightAnswer\")\n                {isDone= true;}\n            }\n        }\n\n        const filteredT = getFilteredTransactions()\n\n        // lo studente puo' rispondere solo dopo che è arrivata una nuova richiesta\n        // da parte del docente oppure un feedback\n        let newTVisible = true;\n        const transactionsIDwithFeedback = Object.keys(ftd);\n        console.log(`SC: FilteredTransactionLen: task:${task[\"id\"]}`, filteredT.length);\n\n        for (let i = 0; i < filteredT.length; i++) {\n            // se manca anche solo un feedback allo studente \n            // non gli è consentito inoltrare nuove richieste\n            if (!transactionsIDwithFeedback.includes(filteredT[i][\"id\"])) {\n                newTVisible = false;\n                break;\n            }\n        }\n\n        setNewTransactionFormVisible(newTVisible);\n        setFilteredTransactions(filteredT);\n        setFeedbackTeacherTransactions(ftd);\n        setIsDone(isDone);\n\n        console.log(\"SC: setFeedbackTeacherTransactions to->: \", ftd)\n        console.log(\"SC: NewTransactionFormVisible\", newTVisible);\n\n    }, [props.task])\n\n    const createNewTransaction = () => {\n        if (!isValidTransactionData()) return;\n\n        const taskId = props.task[\"id\"];\n        const payload = {\n            \"taskId\": taskId, \"content\": {\n                \"label\": transactionData[\"label\"],\n                \"message\": transactionData[\"message\"]\n            }\n        }\n        console.log(\"SAGA2 request da StudentComponents di willCreateTransaction\");\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n    }\n\n    const isValidTransactionData = () =>\n    {\n        return (transactionData != null && transactionData[\"label\"]!=null)\n    }\n\n    const getFilteredTransactions = () => {\n        console.log(`SC Transaction: (Task ${props.task[\"id\"]}):`, props.task.transactions);\n        if (props.task.transactions == null) return [];\n\n        const ft = props.task.transactions.filter((transaction) => {\n            //console.log(\"Transaction: (Filter):\", transaction);\n            // mostro solo le transactions create dallo studente compatilmente con le\n            // label definite dalla app logic\n            return studentsTransactionOptions.includes(transaction[\"label\"])\n                && userProfile != null && userProfile[\"id\"] == transaction[\"actioneerId\"]\n\n        })\n        // ordinate cronologicamente dalla più recente alla meno recente\n        ft.sort((t1, t2) => (t1[\"_creationTs\"] - t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const renderTransactions = () => {\n        //const filteredTransactions =  getFilteredTransactions()\n        console.log(\"Transaction: (filtered):\", filteredTransactions);\n        return filteredTransactions.map((transaction) => {\n            return <StudentTransaction readonly transaction={transaction}\n                teacherFeedback={feedbackTeacherTransactions[transaction[\"id\"]]} />\n        })\n    }\n\n    const renderNewTransaction = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const numFeedbacks = Object.keys(feedbackTeacherTransactions).length;\n        return (  <> \n        {(numFeedbacks>0) && \n            <div style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n              {t(\"question_reproposal\")}: {taskDescription}\n            </div>\n        }  \n        \n        <StudentTransaction onUpdate={(label, message) => setTransactionData({ label, message })} />\n        </> \n        \n        )\n        \n    }\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs*1000).format(\"DD/MM/YYYY - HH:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                           { newTransactionFormVisibile && !isDone &&\n                            <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: (filteredTransactions.length>0 ?\"#FF0000\" : \"orange\") }}>\n                                {t(filteredTransactions.length>0 ? \"teacherFeedback\" : \"new_question\")}\n                            </Badge>\n                            }\n                             { isDone &&\n                            <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: \"#00AA00\" }}>\n                                {t(\"rightAnswer\")}\n                            </Badge>\n                            }\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                            {newTransactionFormVisibile && !isDone && renderNewTransaction()}\n                        </Form>\n                    </CardBody>\n                    <CardFooter>\n                        {\n                            newTransactionFormVisibile && isValidTransactionData() &&\n                            <div style={{ display: \"flex\", marginTop: \"10px\", justifyContent: \"flex-end\" }}>\n                                <ActivityButton color=\"primary\" onClick={(ev) => { createNewTransaction() }}>{t(\"send\")}</ActivityButton>\n                            </div>\n                        }\n\n                    </CardFooter>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","// import Autosuggest from 'react-autosuggest';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { selectors as UserTasksSelectors } from \"../store/slices/userTasks\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport MiniSearch from \"minisearch\";\nimport { filter } from \"lodash\";\n// import Select from 'react-select'\n// import CreatableSelect from 'react-select/creatable';\nimport { InputGroup, InputGroupAddon, Button, Input } from \"reactstrap\";\nimport { actions as userTasksActions } from \"../store/slices/userTasks\";\nimport { useTranslation } from 'react-i18next';\n\nexport const SearchBar = (props:any) => {\n  //Get all experiments for index\n  const tasks = props.tasks //useSelector(UserTasksSelectors.getTasks);\n\n  // const [suggestions, setSuggestions] = React.useState(experiments);\n  const [value, setValue] = React.useState(\"\");\n  const [searchEngine, setSearchEngine] = React.useState(null as any);\n  const dispatch = useDispatch();\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n  React.useEffect(() => {\n    console.log(\"in constructor\");\n    const tokenize = (x: any) => x.split(/\\W+/);\n\n    setSearchEngine(\n      new MiniSearch({\n        fields: [\"goal.name\",\"goal.description\"], // fields to index for full-text search\n        searchOptions: {combineWith:'AND'},\n        // Custom extractField function that can deal with arrays\n        extractField: (document, fieldName) => {\n          \n          if (Array.isArray(document[fieldName])) {\n            //console.log(\"Trovato_array:\",fieldName, document[fieldName]);\n            //const result = document[fieldName].join(\" \");\n\n            const result = document[fieldName].map((obj:any,index:number) => {\n              if (typeof(obj)=='object') return Object.values(obj).join(' ')\n              else return obj\n            }) \n           // console.log(\"Trovato_array_res:\", result);\n            return result\n          } \n          else {\n            \n            //return document[fieldName];\n            const result = fieldName.split('.').reduce((doc, key) => doc && doc[key], document)\n            console.log(\"SB:Trovato campo per field name:>>\",fieldName, result);\n            return result;\n          }\n        },\n        storeFields: [\"id\",\"goal.name\",  \"goal.description\"], // fields to return with search results\n      })\n    );\n    return () => {};\n  }, []);\n\n  \n  React.useEffect(() => {\n    console.log(\"with tasks: \", Object.values(tasks));\n    if (searchEngine != null) {\n      // Index all documents\n      searchEngine.addAll(Object.values(tasks));\n\n      let results = searchEngine.search(\"onde\");\n      console.log(\"with results: \", results);\n    }\n\n    return () => {};\n  }, [tasks, searchEngine]);\n \n\n  const onChange = (e: any) => {\n    console.log(\"in on change with \", e.target.value);\n    const value = e.target.value;\n    setValue(value);\n    if (value !== \"\") {\n      console.log(\"in onSUggestionFethRequest\", value);\n      const results = searchEngine.search(value, { prefix: true });\n      console.log(\"with search result: \", value, results);\n      const scoredResult = filter(results, (result: any) => {\n        console.log(\"check score: \", result, result.score > 0);\n        return result.score > 0 ? true : false;\n      });\n      // setSuggestions(result);\n      console.log(\"MINISEARCH result: \", results);\n      console.log(\"scored result: \", scoredResult);\n      dispatch(userTasksActions.setFilteredIds(results));\n    } else {\n      // dispatch(CatalogActions.setFilteredIds(null));\n      dispatch(userTasksActions.clearFilter(null));\n    }\n  };\n\n  \n  return (\n    <div\n      style={{\n        width: \"100%\",\n        border: \"0px solid #000\",\n        height: 50,\n        marginBottom: 20,\n      }}\n    >\n\n      <InputGroup>\n        <Input\n          value={value}\n          onChange={onChange}\n          placeholder={t(\"search_tasks\")}\n        />\n        <InputGroupAddon addonType=\"append\">\n          {value == \"\" ? (\n            <Button style={{ width: 50 }} color=\"primary\">\n              <FontAwesomeIcon\n                icon={faSearch}\n                style={{ fontSize: 20 }}\n                color=\"white\"\n              />\n            </Button>\n          ) : (\n            <Button\n              style={{ width: 50 }}\n              onClick={() => {\n                dispatch(userTasksActions.clearFilter(null));\n                setValue(\"\");\n              }}\n              color=\"primary\"\n            >\n              <FontAwesomeIcon\n                icon={faTimes}\n                style={{ fontSize: 20 }}\n                color=\"white\"\n              />\n            </Button>\n          )}\n        </InputGroupAddon>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react'\nimport { Nav, NavbarBrand, Navbar } from 'reactstrap';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { StudentTask } from '../components/StudentComponents';\nimport { IconContext } from \"react-icons\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { HiOutlineRefresh } from \"react-icons/hi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { fakeTask } from '../components/common';\nimport ReactTooltip from \"react-tooltip\";\nimport { SearchBar } from '../components/SearchBar';\n\n//@audit LocalFrontend\n//const tasks = [fakeTask];\n\nexport const StudentDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const tasks = useSelector(UserTasksSelectors.getTasks);\n    const offset = useSelector(UserTasksSelectors.getTasksOffset);\n    const total = useSelector(UserTasksSelectors.getTasksTotal);\n    const [filteredTasks, setFilteredTasks] = useState(tasks);\n    const filteredIds = useSelector(UserTasksSelectors.getFilteredIds);\n    const dispatch = useDispatch();\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    \n    useEffect(() => {\n\n        dispatch(UserTasksActions.willLoadTasks());\n\n        const seconds = 10;\n        const interval = setInterval(() => {\n            console.log(`WillLoad task for student every ${seconds} seconds`);\n            dispatch(UserTasksActions.willLoadTasks());\n        }, seconds * 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        if (filteredIds == null) setFilteredTasks(tasks)\n        else {\n            setFilteredTasks(tasks.filter((task) => filteredIds.includes(task[\"id\"])));\n        }\n\n    }, [tasks, filteredIds])\n\n\n    const renderTasks = () => {\n        return tasks && filteredTasks && filteredTasks.map((task, index) => <StudentTask task={task} key={index} />)\n    }\n\n    const getOffsetAndTotalTasksInfo = () =>{\n        return (`${offset+1}-${offset+tasks.length} ${t(\"of\")} ${total}`)\n     }\n\n    const renderContentHeader = () => {\n        return <Navbar style={{ marginTop: \"10px\", marginBottom: \"10px\" }} className=\"mb-0 text-white\" color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\">{t(\"answers_and_questions\")} ({getOffsetAndTotalTasksInfo()})</NavbarBrand>\n            <Nav className=\"mr-auto\" navbar>\n            </Nav>\n            <Nav navbar>\n                <IconButton\n                    onClick={() => { dispatch(UserTasksActions.willLoadTasks()); }}\n                    style={{ height: 34, marginRight: 12, marginTop: 6, marginBottom: 6, borderWidth: 1, borderColor: 'white', borderStyle: 'solid', borderRadius: 4 }}\n                >\n                    <IconContext.Provider value={{ color: \"white\", className: \"global-class-name\" }}>\n                        <HiOutlineRefresh color=\"white\" data-place=\"top\"\n                            data-for=\"studentdashboard\"\n                            data-tip={t(\"refresh\")}\n                        />\n                    </IconContext.Provider>\n                </IconButton>\n            </Nav>\n            <ReactTooltip id=\"studentdashboard\" />\n        </Navbar>\n    }\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"student_area\" showMenu={true} />\n            <SideBar active=\"student_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                {renderContentHeader()}\n                <div style={{ margin: \"10px\" }} >\n                    <SearchBar tasks={tasks} />\n                </div>\n                {renderTasks()}\n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport {\n    Button, Collapse, Form, Nav, Navbar, NavbarBrand, Badge,\n    FormText, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardSubtitle, CardHeader, CardTitle, CardBody, CardFooter, FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { IconContext } from \"react-icons\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { HiOutlineRefresh } from \"react-icons/hi\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { transactionFieldMapper, studentsTransactionOptions, teachersTransactionOptions } from './common';\nimport { fakeTask } from '../components/common';\nimport moment from 'moment';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction } from '../store/slices/userTasks'\nimport ReactTooltip from \"react-tooltip\";\nimport {ActivityButton} from './UtilsComponents';\nimport { SearchBar } from './SearchBar';\n\n// link timeline drosophila\n\n//https://beta.riale.ideab3.it/public/a6563273-863b-4e60-8b05-c6b41b332b42\n\nconst TeacherFeedback = (props) => {\n    const { transaction } = props;\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : teachersTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedTeacherText, setCurrentTeacherText] =\n        useState(\"\") //(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n    const dispatch = useDispatch();\n    \n\n    const createFeedbackTransaction = () => {\n        if (currentSelectedChoice < 0) return;\n        const taskId = props.transaction[\"taskId\"];\n        const payload = {\n            \"taskId\": taskId, \"content\": {\n                \"label\": teachersTransactionOptions[currentSelectedChoice],\n                \"message\": currentSelectedTeacherText,\n                \"transactionID\": props.transaction[\"id\"]\n            }\n        }\n        console.log(\"Feedback payload:\", payload);\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n    }\n\n    const renderTeacherFeedbackOptions = () => {\n        return teachersTransactionOptions.map((message, index) => {\n            return getTeacherFeedbackOption(\"teacherChoice\", t(message), index);\n        })\n    }\n\n    const renderTeacherAnswerText = () => {\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(`teacher_comment_on_${teachersTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={false}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => { onChangeTeacherText(ev) }}\n                    value={currentSelectedTeacherText}\n                />\n            </div>\n            <div style={{ display: \"flex\", marginTop: \"10px\", justifyContent: \"flex-end\" }}>\n                <ActivityButton onClick={() => createFeedbackTransaction()} color=\"primary\">{t(\"send\")}</ActivityButton>\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected feedback choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(teachersTransactionOptions[ev.target.value],\n            currentSelectedTeacherText)\n    }\n\n    const onChangeTeacherText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentTeacherText(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(teachersTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    return <>\n        <div style={{ marginTop: \"20px\" }}>\n            <Label><b>{t(\"send_feedback_to_student\")}</b></Label>\n        </div>\n        {renderTeacherFeedbackOptions()}\n        {renderTeacherAnswerText()}\n    </>\n\n}\n\nconst TeacherTransaction = (props) => {\n\n    const { transaction } = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const transactionActioneer = useSelector(StudentsProfileSelector.getStudentDetailsByWenetID(transaction && transaction[\"actioneerId\"]));\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] =\n        useState(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            currentSelectedStudentText)\n    }\n\n    const getStudentAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly} key={index}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`teacher_comment_on_${studentsTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={true}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => { }}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const getTeacherFeedbackContent = () => {\n        const { teacherFeedback, transaction } = props;\n        if (teacherFeedback == null) return null;\n        console.log(\"TF FeedbackTransaction ID:\", teacherFeedback);\n\n        const teacherText = t(`${teacherFeedback[\"label\"]}`) + \" \" +\n            teacherFeedback[\"attributes\"][transactionFieldMapper[teacherFeedback[\"label\"]]]\n        return teacherText;\n    }\n\n    const renderTeacherAnswerText = () => {\n        return <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={getTeacherFeedbackContent()}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getStudentAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    return (\n        <>\n            {props.transaction &&\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    {transactionActioneer ?\n                        <Label style={ props.teacherFeedback==null ? {\"color\":\"#FF0000\"} : {\"color\":\"#000000\"}}>\n                            <b>{transactionActioneer[\"name\"]} {` `} {transactionActioneer[\"surname\"]}\n                                {' - '} {moment(props.transaction._creationTs*1000).format(\"DD/MM/YYYY - HH:mm\")}</b>\n                        </Label>\n                        :\n                        <Label>\n                            <b>{moment(props.transaction._creationTs*1000).format(\"DD/MM/YYYY - HH:mm\")}</b>\n                        </Label>}\n\n                </div>\n            }\n            <Form style={{ border: \"1px solid #007bff\", padding: \"10px\", margin: \"10px\" }}>\n\n\n                <Label>\n                    <b>{t(\"teacher_selectAnswer\")}</b>\n                </Label>\n                {renderStudentAnswerOptions()}\n                {renderStudentAnswerText()}\n                {props.teacherFeedback != null ? renderTeacherAnswerText() :\n                    <TeacherFeedback transaction={props.transaction} />\n                }\n\n            </Form>\n        </>)\n}\n\nexport const TaskCreator = (props) => {\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [currentTaskTitle, setCurrentTaskTitle] = useState(\"\");\n    const [currentTaskDescription, setCurrentTaskDescription] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const createNewTask = (ev) => {\n        dispatch(UserTasksActions.willCreateTask({\n            \"name\": currentTaskTitle,\n            \"description\": currentTaskDescription\n        }))\n    }\n\n    const onChangeTaskTitle = (ev) => {\n        setCurrentTaskTitle(ev.target.value)\n    }\n\n    const onChangeTaskDescription = (ev) => {\n        setCurrentTaskDescription(ev.target.value)\n    }\n\n    return (\n\n        <Form>\n            <FormGroup>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Label for=\"teacherTaskTitle\">\n                        <b>{t(\"question_topic\")}</b>\n                    </Label>\n                    <Input\n                        required\n                        id=\"teacherTaskTitle\"\n                        name=\"text\"\n                        type=\"text\"\n                        onChange={(ev) => onChangeTaskTitle(ev)}\n                        value={currentTaskTitle}\n                    />\n                </div>\n            </FormGroup>\n            <FormGroup>\n                <div style={{ marginTop: \"20px\" }}>\n                    <Label for=\"teacherTaskDescription\">\n                        <b>{t(\"question_content\")}</b>\n                    </Label>\n                    <Input\n                        required\n                        id=\"teacherTaskDescription\"\n                        name=\"text\"\n                        type=\"textarea\"\n                        onChange={(ev) => onChangeTaskDescription(ev)}\n                        value={currentTaskDescription}\n                    />\n                </div>\n            </FormGroup>\n            <FormGroup>\n                <div style={{ display: \"flex\", \"justifyContent\": \"space-between\" }}>\n                    <Button onClick={(ev) => { props.onClose() }}>Annulla</Button>\n                    <Button disabled={currentTaskTitle.trim()==\"\" || currentTaskDescription.trim()==\"\"}  color=\"primary\" onClick={(ev) => { createNewTask(ev); props.onClose() }}>{t(\"send\")}</Button>\n                </div>\n            </FormGroup>\n        </Form>\n    )\n}\n\n//@audit Local Frontend DEV\n//const tasks = [fakeTask];\n\nexport const TeacherTasksViewer = (props) => {\n\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const tasks = useSelector(UserTasksSelectors.getTasks);\n    const offset = useSelector(UserTasksSelectors.getTasksOffset);\n    const total = useSelector(UserTasksSelectors.getTasksTotal);\n    const filteredIds = useSelector(UserTasksSelectors.getFilteredIds);\n    const [filteredTasks, setFilteredTasks] = useState(tasks); \n    \n    useEffect(() => {\n\n        dispatch(UserTasksActions.willLoadTasks());\n        \n        const seconds = 10;\n        const interval = setInterval(() => {\n          console.log(`WillLoad task for teacher every ${seconds} seconds`);\n          dispatch(UserTasksActions.willLoadTasks());\n        }, seconds*1000);\n        return () => clearInterval(interval);\n      }, []);\n    \n\n      useEffect(() => {\n        if (filteredIds==null) setFilteredTasks(tasks)\n        else {\n             setFilteredTasks( tasks.filter((task) => filteredIds.includes(task[\"id\"])));\n        }\n        \n      }, [tasks, filteredIds])\n\n    \n    const renderTaskCreator = () => {\n        return <Modal isOpen={isOpen}>\n            <ModalHeader>{t(\"new_question\")}</ModalHeader>\n            <ModalBody>\n                <TaskCreator onClose={() => setIsOpen(false)} />\n            </ModalBody>\n        </Modal>\n    }\n    const renderTasks = () => {\n        return filteredTasks && filteredTasks.map((task, index) => <TeacherTaskViewer task={task} key={index} />)\n    }\n\n    const getOffsetAndTotalTasksInfo = () =>{\n       return (`${offset+1}-${offset+tasks.length} ${t(\"of\")} ${total}`)\n    }\n\n    const renderHeader = () =>\n    {\n        return <Navbar style={{ marginTop: \"10px\" , marginBottom: \"10px\" }} className=\"mb-0 text-white\" color=\"primary\" light expand=\"md\">\n        <NavbarBrand className=\"text-white font-weight-bold\">{t(\"answers_and_questions\")} ({getOffsetAndTotalTasksInfo()})</NavbarBrand>\n        <Nav className=\"mr-auto\" navbar>\n        </Nav>\n        <Nav navbar>\n            <Button onClick={(ev) => { console.log(\"Click new Question\"); setIsOpen(true) }}\n                style={{ height: 34, marginRight: 12, marginTop: 6, marginBottom: 6, borderWidth: 1, borderColor: 'white', borderStyle: 'solid', borderRadius: 4 }} color=\"primary\">\n                <FontAwesomeIcon icon={faPlus} />{t(\"new_question\")}</Button>\n            <IconButton\n                onClick={() => {dispatch(UserTasksActions.willLoadTasks()); }}\n                style={{ height: 34, marginRight: 12, marginTop: 6, marginBottom: 6, borderWidth: 1, borderColor: 'white', borderStyle: 'solid', borderRadius: 4 }} \n            >\n                <IconContext.Provider value={{ color: \"white\", className: \"global-class-name\" }}>\n                    <HiOutlineRefresh color=\"white\" data-place=\"top\"\n                        data-for=\"teacherdashboard\"\n                        data-tip={t(\"refresh\")}\n                    />\n                </IconContext.Provider>\n            </IconButton>\n        </Nav>\n        <ReactTooltip id=\"teacherdashboard\"/>\n    </Navbar>\n    }\n\n    return (\n        <>\n            {renderHeader()}\n            <div  style={{margin:\"10px\"}} >\n            <SearchBar tasks={tasks}/>\n            </div>\n           \n            {isOpen && renderTaskCreator()}\n            {renderTasks()}\n        </>\n    )\n}\n\nexport const TeacherTaskViewer = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [feedbackTeacherTransactions, setFeedbackTeacherTransactions] = useState({})\n    const [filteredTransactions, setFilteredTransactions] = useState([]);\n    const [amountOfFeedbackToSend, setAmountOfFeedbackToSend] = useState(0);\n\n    useEffect(() => {\n        const { task } = props;\n        console.log(\"Student task:\", task);\n        let ftd = {}\n        for (let i = 0; i < task.transactions.length; i++) {\n            const transactionID = task.transactions[i][\"attributes\"][\"transactionID\"];\n            if (transactionID != null) {\n                ftd[transactionID] = task.transactions[i]\n            }\n            \n        }\n            const filteredT = getFilteredTransactions()\n            setFilteredTransactions(filteredT);\n\n            console.log(\"setFeedbackTeacherTransactions to->: \", ftd)\n            setFeedbackTeacherTransactions(ftd);\n\n            setAmountOfFeedbackToSend(getAmountOfFeedbackToSend(filteredT, ftd));\n    \n    }, [props.task])\n\n    const getAmountOfFeedbackToSend = (transactions, feedbackTransactions) =>\n    {  \n        if (transactions==null || transactions.length<1) return 0;\n        const totTransactions = transactions.length;\n        const totFeedbackTransactions = Object.keys(feedbackTransactions).length;\n        return (totTransactions-totFeedbackTransactions);\n    }\n\n    const getFilteredTransactions = () => {\n        console.log(\"Transaction: (Task):\", props.task.transactions);\n        if (props.task.transactions == null) return [];\n\n        const ft = props.task.transactions.filter((transaction) => {\n            console.log(\"Transaction: (Filter):\", transaction);\n            // mostro tutte le transactions create dagli compatilmente con le\n            // label definite dalla app logic\n            return studentsTransactionOptions.includes(transaction[\"label\"])\n        })\n        // ordinate cronologicamente dalla meno recente alla più recente\n        ft.sort((t1, t2) => (t1[\"_creationTs\"] - t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const renderTransactions = () => {\n        //const filteredTransactions = getFilteredTransactions()\n        console.log(\"Transaction: (filter):\", filteredTransactions);\n        return filteredTransactions.map((transaction, index) => {\n            return <TeacherTransaction readonly transaction={transaction}\n                teacherFeedback={feedbackTeacherTransactions[transaction[\"id\"]]} key={index} />\n        })\n    }\n\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs*1000).format(\"DD/MM/YYYY - HH:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                        { (amountOfFeedbackToSend>0) &&\n                            <Badge style={{ margin: '5px', padding: '5px', color: 'white', backgroundColor: \"#FF0000\" }}>\n                                {`${amountOfFeedbackToSend} `}{t(\"new_messages_from_students\")}\n                            </Badge>\n                            }\n\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                        </Form>\n                    </CardBody>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction} from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\nconst fakeProfiles = [\n  {\"passcode\":\"VPFYBRSX\",\"name\":\"Pantera\",\n\"surname\":\"Assonnata\",\"wenet_id\":928,\"id\":\"B+\",\n\"description\":\"Profilo B+\",\"teacher_wenet_id\":671},\n{\"passcode\":\"APFYBRSX\",\"name\":\"Leone\",\n\"surname\":\"Indaffarato\",\"wenet_id\":928,\"id\":\"C+\",\n\"description\":\"Profilo C+\",\"teacher_wenet_id\":671}\n\n] as any;\n\n\nexport const StudentsProfileViewer = (props:any) =>\n{   \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const studentsProfile = useSelector(StudentsProfileSelector.getStudentsProfile);\n    //const studentsProfile = fakeProfiles;\n\n    const columns = [\n\n      {\n        dataField: 'name',\n        text: t('name'),\n        sort: true\n      },\n\n        {\n          dataField: 'surname',\n          text: t('surname'),\n          sort: true\n        },\n        \n\n        {\n          dataField: 'passcode',\n          text: t('passcode'),\n          sort: true,\n          hidden:false\n        },\n          {\n            dataField: 'id',\n            text: t('profile'),\n            sort: true\n          },\n          {\n            dataField: 'description',\n            text: t('description'),\n            sort: false\n          }\n      ]\n\n    React.useEffect(() => {\n        dispatch(StudentsProfileAction.willLoadStudentsProfile(null))        \n        return () => { }\n      }, []);\n\n    return <>\n     <BootstrapTable bootstrap4 keyField='passcode' data={ \n                      studentsProfile\n                    } \n                    columns={ columns } />\n    </>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TeacherTasksViewer } from '../components/TeacherComponents';\nimport { StudentsProfileViewer } from '../components/StudentsProfileViewer';\n\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { fakeTask } from '../components/common';\n\n\nexport const TeacherDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [activeTab, setActiveTab] = useState(\"0\");\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(UserTasksActions.willGetUserProfile());\n      }, [])\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"teacher_area\" showMenu={true} />\n            <SideBar active=\"teacher_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink style={activeTab === '0' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('0'); }}\n                        >\n                            {t(\"students_answers\")}\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={activeTab === '1' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('1'); }}\n                        >\n                            {t(\"students_profile\")}\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId=\"0\">\n                        <TeacherTasksViewer/>\n                    </TabPane>\n                    <TabPane tabId=\"1\">\n                        <StudentsProfileViewer/>\n                    </TabPane>\n                </TabContent>\n\n                \n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button, Form, FormGroup, Label, Input, FormText, Card, CardHeader, CardBody,\n    CardText, CardTitle, CardFooter\n} from 'reactstrap';\n\n\n//https://www.npmjs.com/package/compress-json\nconst WenetConnector = () => {\n    \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [passcode, setPasscode] = useState(null);\n\n    useEffect(()=>{\n         localStorage.setItem(\"passcode\", passcode);\n      }, [passcode])\n\n    const checkPassCode = (passCodeOrig) => {\n\n        //WQBLLIZQ\n        const charset = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n        const passCodeLen = 8\n        try {\n            const passCode = passCodeOrig.trim().toUpperCase();\n            if (passCode.length != passCodeLen) throw (\"Invalid\");\n            let passCodeSum = 0;\n            for (let i = 0; i < passCode.length - 1; i++) {\n                //console.log(\"Indice carattere:\",charset.indexOf(passCode.charAt(i)))\n                passCodeSum += charset.indexOf(passCode.charAt(i))\n            }\n\n            passCodeSum -= charset.indexOf(passCode.charAt(passCodeLen - 1))\n            //console.log(`PasscodeSum check:${passCodeSum}`)\n            const isValid = (passCodeSum % charset.length) == 0\n            setPasscode( isValid ? passCode : null);\n        } catch (error) {\n            setPasscode(null);\n        }\n\n    }\n\n    const onEnterPasscode = (ev) => {\n        console.log(\"entered:\", ev.target.value)\n        checkPassCode(ev.target.value);\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100vh'\n        }}>\n            <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n                <CardHeader style={{\n                    backgroundColor: \"#007bff\",\n                    borderColor: \"#007bff\",\n                    paddingBottom: 0,\n                    color: 'white'\n\n                }}>\n                    <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n                </CardHeader>\n                <CardBody>\n\n\n                    <Input onChange={(ev) => onEnterPasscode(ev)} type=\"text\" name=\"passcode\" \n                    id=\"passcode\" placeholder={t(\"passcode_enter\")} />\n\n                </CardBody>\n                    <CardFooter style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}>\n                    {\n                        passcode && (\n                            <a href={`/connect?passcode=${passcode}`}>{t(\"connect_to_wenet\")}</a>\n                        )\n                    }\n                        \n                    </CardFooter>\n\n            </Card>\n\n\n        </div>\n    );\n}\n\nexport default WenetConnector","import React, {useEffect} from \"react\";\n\nimport { ConnectedRouter, push } from 'connected-react-router'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory\n  } from \"react-router-dom\";\n  import { useSelector, useDispatch } from \"react-redux\";\n  import { history } from './store'\n  import {AppLoader} from \"./components/UtilsComponents\";\n  import { StudentDashboard } from \"./pages/StudentDashboard\";\n  import { TeacherDashboard } from \"./pages/TeacherDashboard\";\n  import { TeacherTasksViewer } from \"./components/TeacherComponents\";\n  import  {fakeTasks} from './components/common';\n  import WenetConnector from \"./pages/WenetConnector\";\n  import { selectors as UserTasksSelectors, actions as UserTasksActions } from './store/slices/userTasks'\n  import { Role } from \"./constants\";\n\nexport const AppRouter = () => { \n      \n      const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n      const dispatch = useDispatch();\n\n      useEffect(() => {\n\n            //@audit UNCOMMENT FOR PRODUCTION!\n            dispatch(UserTasksActions.willGetUserProfile(null));\n          }, [])\n\n          useEffect(() => {\n            console.log(\"UserProfile in router:\", userProfile);\n            if (userProfile!=null && userProfile[\"message\"]!=null)\n            {\n              alert(userProfile[\"message\"])\n              dispatch(push(\"/\"))\n            }\n          }, [userProfile])\n\n  return (<ConnectedRouter history={history}>\n  <Switch>\n        {/* \n      <Route path=\"/forum\">\n          <RialeDiscussionBoard />\n    </Route>\n    */}\n\n<Route path=\"/devTasks\">\n          <TeacherTasksViewer tasks={fakeTasks} />\n    </Route>\n\n    <Route path=\"/student_dashboard\">\n          { (userProfile==null) ? <AppLoader/> : (\n            (userProfile.role_id==Role.student || userProfile.role_id==Role.admin) ?\n            <StudentDashboard /> :\n            <Redirect to=\"/\" />\n          )\n          }\n          \n    </Route>\n\n    <Route path=\"/teacher_dashboard\">\n    { (userProfile==null) ? <AppLoader/>  : (\n            (userProfile.role_id==Role.teacher || userProfile.role_id==Role.admin) ?\n            <TeacherDashboard /> :\n            <Redirect to=\"/\" />\n          )\n          }\n    </Route>\n\n    <Route path=\"/\">\n          <WenetConnector />\n    </Route>\n  </Switch>\n\n</ConnectedRouter>)\n}","import React from \"react\";\nimport { Provider } from 'react-redux'\nimport { configureStore } from './store'\nimport { AppRouter } from './router';\n\nconst Test = () => { return(<></>)}\nexport default function App() {\n  return (\n    <Provider store={configureStore({})}>\n       <AppRouter/>\n    \n    </Provider >\n  );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: ['tl', 'frontend'],\n    defaultNS: 'tl',\n    fallbackLng: 'it',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport RialeDiscussionBoard from './pages/DiscussionDashBoard';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-comments-section/dist/index.css'\nimport App from './App';\n\n// seutp i18n ---------------\nimport i18n from './i18n';\n\nvar lng = window.navigator['userLanguage']|| window.navigator.language;\nif(lng !== 'it-IT'){\n    i18n.changeLanguage('en-US');\n}else{\n    i18n.changeLanguage('it-IT');\n}\n   \nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n/*\n//https://create-react-app.dev/docs/deployment/\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
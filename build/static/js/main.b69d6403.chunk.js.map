{"version":3,"sources":["store/slices/userTasks.ts","components/Header.tsx","constants.js","components/SideBar.tsx","components/Content.tsx","pages/DiscussionDashBoard.jsx","reportWebVitals.js","store/sagas/userTasks.js","store/sagas/index.ts","store/index.ts","store/reducers.ts","components/common.tsx","components/StudentComponents.jsx","pages/StudentDashboard.jsx","components/TeacherComponents.jsx","components/StudentsProfileViewer.tsx","pages/TeacherDashboard.jsx","pages/WenetConnector.jsx","router.tsx","App.tsx","i18n.js","index.js"],"names":["userTasksSlice","createSlice","name","initialState","user","tasks","studentsProfile","reducers","willLogin","state","action","willLogout","willGetUserProfile","willLoadTasks","willCreateTask","willCreateTransaction","willLoadStudentsProfile","didGetUserProfile","payload","didLogout","localStorage","removeItem","didLoadTasks","didLoadStudentsProfile","actions","reducer","selectors","userTasks","wenet_id","profiles","i","length","Header","className","section","showMenu","useTranslation","useSuspense","t","_section","i18n","undefined","React","useState","isOpen","setIsOpen","dispatch","useDispatch","userProfile","useSelector","UserTasksSelectors","console","log","Navbar","style","marginBottom","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","first","last","DropdownMenu","right","DropdownItem","UserTasksActions","Role","admin","teacher","student","SideBar","active","role","border","width","position","backgroundColor","bottom","top","vertical","NavItem","NavLink","textDecoration","fontWeight","tag","Link","to","icon","faBriefcase","Content","children","fluid","left","md5","require","RialeDiscussionBoard","props","comment","setComment","count","query","URLSearchParams","window","location","search","passcode","getItem","passcodeMD5","get","map","replies","useEffect","task","role_id","Card","padding","borderColor","CardHeader","paddingBottom","CardTitle","CardBody","currentUser","userId","avatarUrl","commentsArray","signinUrl","signupUrl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagas","takeLatest","type","put","push","call","fetch","response","json","myJson","content","headers","method","body","JSON","stringify","error","runAllSagas","all","userTasksSagas","history","createBrowserHistory","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","rootReducer","combineReducers","router","connectRouter","userTasksReducer","store","createStore","run","transactionFieldMapper","studentsTransactionOptions","StudentTransaction","transaction","indexOf","currentSelectedChoice","setCurrentSelectedChoice","currentSelectedStudentText","setCurrentStudentText","getAnswerOption","group","message","index","FormGroup","check","disabled","readonly","Input","value","onChange","ev","target","onUpdate","onChangeSelectedChoice","checked","Label","display","justifyContent","moment","_creationTs","format","Form","margin","marginTop","for","id","onChangeStudentText","StudentTask","toggle","transactionData","setTransactionData","renderTransactions","filteredTransactions","transactions","ft","filter","includes","sort","t1","t2","getFilteredTransactions","taskTitle","goal","taskDescription","description","taskCreationDate","cursor","alignContent","size","CardSubtitle","label","CardFooter","Button","createNewTransaction","renderTopicContents","StudentDashboard","TeacherTransaction","transactionActioneer","StudentsProfileSelector","TeacherTasksViewer","TeacherTaskViewer","StudentsProfileViewer","columns","dataField","text","hidden","StudentsProfileAction","bootstrap4","keyField","data","TeacherDashboard","activeTab","setActiveTab","tabs","background","TabContent","TabPane","tabId","WenetConnector","setPasscode","setItem","onEnterPasscode","passCodeOrig","charset","toUpperCase","passCode","trim","passCodeSum","charAt","isValid","passCodeLen","checkPassCode","alignItems","height","textAlign","placeholder","AppRouter","path","App","use","Backend","initReactI18next","init","ns","defaultNS","fallbackLng","debug","interpolation","escapeValue","navigator","language","changeLanguage","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.b69d6403.chunk.js","sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport { profile } from \"console\";\n\nexport const userTasksSlice = createSlice({\n    name: 'userTasks',\n    initialState: {\n      user:null,\n      tasks: [],\n      studentsProfile: []\n    }\n  ,\n    reducers: {\n     willLogin: (state, action:PayloadAction<any>) => state,\n     willLogout: (state, action:PayloadAction<any>) => state,\n     willGetUserProfile: (state, action:PayloadAction<any>) => state,\n     willLoadTasks: (state, action:PayloadAction<any>) => state,\n     willCreateTask: (state, action:PayloadAction<any>) => state,\n     willCreateTransaction: (state, action:PayloadAction<any>) => state,\n     willLoadStudentsProfile: (state, action:PayloadAction<any>) => state,\n      \n     didGetUserProfile: (state, action:PayloadAction<any>) => { \n        state.user = action.payload;\n      },\n\n      didLogout:(state) => { \n        state.user = null;\n        state.tasks = [];\n        localStorage.removeItem(\"passcode\");\n      },\n\n      didLoadTasks: (state, action:PayloadAction<any>) =>{\n        state.tasks = action.payload;\n      },\n\n      didLoadStudentsProfile: (state, action:PayloadAction<any>) =>{\n        state.studentsProfile = action.payload;\n      },\n \n \n    \n    }\n});\n\nexport const { actions, reducer } = userTasksSlice;\n\nexport const selectors = {\n  isLogged: (state:any) => {\n    return state.userTasks.user!=null && localStorage.getItem(\"passcode\")==state.userTasks.user[\"passcode\"];\n  },\n  getTasks: (state:any) => {\n    return state.userTasks.tasks;\n  },\n  getUserProfile: (state:any) => {\n    //return {\"role_id\" : 1, \"name\" : {\"first\" : \"test\", \"last\" : \"test\"}}\n    return state.userTasks.user;\n  },\n  getStudentsProfile: (state:any) => {\n    return state.userTasks.studentsProfile;\n  },\n\n  getStudentDetailsByWenetID: (wenet_id:any) => (state:any) => {\n     const profiles = state.userTasks.studentsProfile;\n     for (let i=0;i<profiles.length;i++)\n     {\n       if (profiles[i][\"wenet_id\"]==wenet_id)\n       return profiles[i];\n     }\n     return null;\n  }\n}\n","import React from \"react\";\nimport {\n    Container, Button, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav,\n    NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions as UserTasksActions, selectors as UserTasksSelectors } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\nexport const Header = ({ className, section, showMenu = false }: any) => {\n\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const _section = t(section) != undefined ? t(section) : \"Forum\"\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const dispatch = useDispatch();\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    console.log(\"UserProfile:\", userProfile);\n    return (\n        <Navbar style={{marginBottom:\"10px\"}} className={className} color=\"primary\" light expand=\"md\">\n            <NavbarBrand className=\"text-white font-weight-bold\" href=\"/\">RIALENET - {_section}</NavbarBrand>\n            {showMenu && (<>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    {(\n                        <Nav className=\"mr-auto\" navbar>\n                        </Nav>\n                    )}\n                    <Nav navbar>\n                        { userProfile!=null && userProfile.name!=null &&\n                        <>\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle className=\"text-white\" nav caret>{userProfile.name.first}{` `}{userProfile.name.last}</DropdownToggle>\n                                <DropdownMenu right>\n                                <DropdownItem onClick={() => {\n                                            dispatch(UserTasksActions.willLogout(\"\"));\n                                        }}>Logout</DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </>\n                        }\n                    </Nav>\n                </Collapse>\n            </>)}\n        </Navbar>\n\n    )\n}\n","export class Role {\n    static admin = 1;\n    static teacher = 2;\n    static student = 3;\n}","import { NavItem, NavLink, Nav } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faHome,\n    faChartPie,\n    faBriefcase,\n    faTimes,\n    faQuestion,\n    faImage,\n    faBook,\n    faCalendarAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { Role } from \"../constants\";\n\nexport const SideBar = ({ active, role }: any) => {\n  \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    console.log(\"Role in sidebar ->\", role, Role.teacher, (role==Role.teacher || role==Role.admin));\n    return (\n        <div style={{\n            border: '0px solid #000',\n            width: '240px',\n            position: 'absolute',\n            backgroundColor: '#f1f1f1',\n            bottom: 0,\n            top: 56\n        }}>\n\n            <Nav vertical className=\"list-unstyled pb-3\">\n                <NavItem active={active === \"public_area\" ? true : false} className=\"mb-1\">\n                    <NavLink className={active === \"public_area\" ? \"text-primary\" : \"text-secondary\"}\n                        style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                        to={\"/forum\"}>\n                        <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"public_area\")}\n                    </NavLink>\n                </NavItem>\n                {\n                    (role==Role.student || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"student_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"student_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/student_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"student_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n                {\n                    (role==Role.teacher || role==Role.admin) &&\n                    (\n                        <NavItem active={active === \"teacher_dashboard\" ? true : false} className=\"mb-1\">\n                            <NavLink className={active === \"teacher_dashboard\" ? \"text-primary\" : \"text-secondary\"}\n                                style={{ textDecoration: 'none', fontWeight: 'bolder' }} tag={Link}\n                                to={\"/teacher_dashboard\"}>\n                                <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" /> {t(\"teacher_area\")}\n                            </NavLink>\n                        </NavItem>\n\n                    )\n                }\n\n            </Nav>\n        </div>)\n\n}","export const Content = ({ children, className, fluid = false }: any) => {\n  return (\n    <div className={className} style={{\n      border: '0px solid #000',\n      // width: '240px',\n      position: 'absolute',\n      backgroundColor: 'white',\n      bottom: 0,\n      top: 56,\n      left: fluid ? 0 : 240,\n      right: 0\n    }}>\n      {children}\n    </div>\n  )\n}","import React, { PureComponent, useState, useEffect } from 'react'\nimport { CommentSection } from 'react-comments-section'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useLocation, useParams, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport {\n  Card, CardImg, CardText, CardBody, CardHeader,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nconst data = [\n  {\n    \"userId\": \"01a\",\n    \"comId\": \"012\",\n    \"fullName\": \"Riya Negi\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n    \"text\": \"Hey, Loved your blog! \",\n    \"replies\": [\n      {\n        \"userId\": \"02a\",\n        \"comId\": \"013\",\n\n        \"fullName\": \"Adam Scott\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Adam&background=random\",\n        \"text\": \"Thanks! It took me 1 month to finish this project but I am glad it helped out someone!🥰\"\n      },\n      {\n        \"userId\": \"01a\",\n        \"comId\": \"014\",\n\n        \"fullName\": \"Riya Negi\",\n        \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n        \"text\": \"thanks!😊\"\n      }\n    ]\n  },\n  {\n    \"userId\": \"02b\",\n    \"comId\": \"017\",\n    \"fullName\": \"Lily\",\n    \"text\": \"I have a doubt about the 4th point🤔\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Lily&background=random\"\n  },\n  {\n    \"userId\": \"01c\",\n    \"comId\": \"018\",\n    \"fullName\": \"Derek\",\n    \"text\": \"Great explanation!!!\",\n    \"avatarUrl\": \"https://ui-avatars.com/api/name=Derek&background=random\"\n  }\n]\n\nconst md5 = require('md5');\n\n\nconst RialeDiscussionBoard = (props) => {\n  const [comment, setComment] = useState([])\n  const dispatch = useDispatch();\n  \n  const tasks =  useSelector(UserTasksSelectors.getTasks);  //(result == null) ? [] : result[\"tasks\"]\n  const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n  const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n  \n  const userId = \"01a\"\n  const avatarUrl = \"https://ui-avatars.com/api/name=Riya&background=random\"\n  const name = \"xyz\"\n  const signinUrl = \"/signin\"\n  const signupUrl = \"/signup\"\n  let count = 0\n\n  const query = new URLSearchParams(window.location.search);\n  const passcode = localStorage.getItem(\"passcode\");\n  const passcodeMD5 = query.get(\"passcode\");\n  console.log(\"params:\", passcode);\n  const isAuthenticated = passcodeMD5!=null && md5(passcode)==passcodeMD5;\n\n  \n\n  comment.map(i => { count += 1; i.replies && i.replies.map(i => count += 1) })\n \n  const loadAllTasks = async () => {\n    console.log(\"WENET loading tasks\")\n    try {\n      const url = `/tasks?passcode=${passcode}`\n      const response = await fetch(url,\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"GET\"\n        }\n      )\n      console.log(\"WENET authentication response:\", response)\n\n      const result = await response.json();\n      console.log(\"WENET authentication result:\", result)\n\n     \n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          });\n        /*\n        setPosts(\n          tasks.map((task)=> {return(\n           {\"profileImage\" : 'https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg',\n           \"name\" : task[\"goal\"][\"name\"],\n           \"content\" : task[\"goal\"][\"description\"],\n           \"date\" : moment(parseInt(task[\"_creationTs\"])).toDate()\n           } )\n          }\n        )) */\n      }));\n\n    } catch (e) { console.log(\"WENET response error:\", e) }\n  }\n  \n  useEffect(() => {\n    dispatch(UserTasksActions.willGetUserProfile());\n    dispatch(UserTasksActions.willLoadTasks());\n  }, [])\n\n\n  useEffect(() => {\n    if (tasks!=null)\n    {\n\n      setComment(tasks.map((task) => {\n        return (\n          {\n            \"userId\": \"01a\",\n            \"comId\": \"012\",\n            \"fullName\": \"Riya Negi\",\n            \"avatarUrl\": \"https://ui-avatars.com/api/name=Riya&background=random\",\n            \"text\": task[\"goal\"][\"name\"],\n            \"replies\": []\n          })}));\n    }\n    else setComment([]);\n   \n  }, [tasks])\n\n\n  return (\n    <>\n    <Header className=\"mb-0 text-white\" section=\"public_area\" showMenu={true} />\n      <SideBar active=\"public_area\" role={userProfile!=null? userProfile.role_id : null} />\n      <Content>\n        <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n          <CardHeader style={{ backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n            <CardTitle>{t(\"public_area\")} (n.{count} {t(\"comments\")}) \n              {/*passcode && <div className=\"pull-right\">{passcode}</div>*/}\n            </CardTitle>\n\n          </CardHeader>\n          <CardBody>\n            <CommentSection currentUser={userId && { userId: userId, avatarUrl: avatarUrl, name: name }}\n              commentsArray={comment || []}\n              setComment={setComment} signinUrl={signinUrl} signupUrl={signupUrl} />\n          </CardBody>\n\n        </Card>\n      </Content>\n    </>\n  )\n\n}\n\nexport default RialeDiscussionBoard\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { all, call, takeLatest, put, select, take } from \"redux-saga/effects\";\nimport {\n    actions as UserTasksActions,\n    selectors as UserTasksSelector,\n  } from \"../slices/userTasks\";\nimport { push } from 'connected-react-router'\n\nexport function* sagas() {\n  yield takeLatest(UserTasksActions.willGetUserProfile.type, willGetUserProfile)\n  yield takeLatest(UserTasksActions.willLogout.type, willLogout)\n  yield takeLatest(UserTasksActions.willLoadTasks.type, willLoadTasks) \n  yield takeLatest(UserTasksActions.willLoadStudentsProfile.type, willLoadStudentsProfile) \n  \n  yield takeLatest(UserTasksActions.willCreateTask.type, willCreateTask) \n  yield takeLatest(UserTasksActions.willCreateTransaction.type, willCreateTransaction) \n}\n\n\nfunction* willLogout(action) {\n    yield put(UserTasksActions.didLogout());\n    yield put(push(\"/logout\"));\n  }\n\n\n  function* willGetUserProfile(action) {\n  \n    const url = `/userprofile`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const userProfile = (response == null) ? [] : response\n    yield put(UserTasksActions.didGetUserProfile(userProfile));\n    } catch (error) {\n      yield put(UserTasksActions.didGetUserProfile(null));\n    }\n}\n\n\n\nfunction* willCreateTask(action) {\n\n  const url = `/newtask`;\n  const content = action.payload; // {\"name\" : \"domanda 1\" , \"description\" ; \"Cosa sono i ...?\"}\n   \n    try{\n    const response = yield call(() => fetch(url,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify({ \"content\": content })  // {\"name\" : \"nome\" , \"description\" : \"...\"}\n      })\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n      console.log(\"SAGA NEW TASK response:\", response);\n  } catch (error) {\n      console.log(\"SAGA NEW TASK error:\".error);\n     // yield put(UserTasksActions.didLoadTasks([]));\n    }\n}\n\nfunction* willCreateTransaction(action) {\n\n  const url = `/newtransaction`;\n  const content = action.payload; // {\"taskId\" : \"xxxx\" , \"content\" : {} }\n   \n    try{\n    const response = yield call(() => fetch(url,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify({ \"content\": content })  // {\"taskId\" : \"xxxx\" , \n        //\"content\" : {\"label\" :\"label\", \"message\" :\"myMessage\"}}\n      })\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n      console.log(\"SAGA NEW TRANSACTION response:\", response);\n  } catch (error) {\n      console.log(\"SAGA NEW TRANSACTION error:\".error);\n     // yield put(UserTasksActions.didLoadTasks([]));\n    }\n      \n}\n\nfunction* willLoadTasks(action) {\n    //const data = action.payload;\n    //const passcode = localStorage.getItem(\"passcode\")\n    const url = `/tasks`;\n   \n    try{\n    const response = yield call(() => fetch(url)\n    .then(response => response.json())\n    .then(myJson => myJson)\n    );\n\n    const tasks = (response == null) ? [] : response[\"tasks\"]\n    yield put(UserTasksActions.didLoadTasks(tasks));\n    } catch (error) {\n      yield put(UserTasksActions.didLoadTasks([]));\n    }\n}\n\nfunction* willLoadStudentsProfile(action) {\n  const url = `/students`;\n  try{\n  const response = yield call(() => fetch(url)\n  .then(response => response.json())\n  .then(myJson => myJson)\n  );\n  const studentsProfile = (response == null) ? [] : response;\n  yield put(UserTasksActions.didLoadStudentsProfile(studentsProfile));\n  } catch (error) {\n    yield put(UserTasksActions.didLoadStudentsProfile([]));\n  }\n}\n\n\n\n\n/*\nconst newTransaction = {\n        \"taskId\": \"62a0b984925841535833b690\",\n        \"label\": \"cannotAnswer\",\n        \"attributes\": {\n            \"reason\": \"....\"\n        },\n        \"actioneerId\": \"studente\",\n        \"messages\": []\n     }\n     */","import { all } from 'redux-saga/effects'\nimport { sagas as userTasksSagas } from './userTasks'\n\nfunction* runAllSagas() {\n    console.log('in root saga')\n    yield all([\n       userTasksSagas()\n    ])\n  }\n\nexport default runAllSagas;","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\nimport runAllSagas from './sagas'\n\n// import monitorReducersEnhancer from './enhancers/monitorReducers'\n// import loggerMiddleware from './middleware/logger'\nimport { createRootReducer } from './reducers'\nexport const history = createBrowserHistory()\n\nexport const configureStore = (preloadedState: any) => {\n  // const middlewares = [loggerMiddleware, thunkMiddleware]\n\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares: any = [routerMiddleware(history), sagaMiddleware]\n\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  // const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n  \n  const rootReducer = createRootReducer(history)\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n \n  if (process.env.NODE_ENV !== 'production' && (module as any).hot) {\n    (module as any).hot.accept('./reducers', () => store.replaceReducer(rootReducer))\n  }\n \n\n  // then run the saga\n  sagaMiddleware.run(runAllSagas)\n\n  return store\n}","import { combineReducers } from 'redux'\n\nimport { reducer as userTasksReducer } from './slices/userTasks'\nimport { connectRouter } from 'connected-react-router'\n\nexport const createRootReducer = (history: any) => combineReducers({\n  router: connectRouter(history),\n  userTasks: userTasksReducer\n})","export const transactionFieldMapper = {\n    \"cannotAnswer\": \"note\",\n    \"needClarification\": \"note\",\n    \"notSure\": \"note\",\n    \"myAnswer\": \"answer\",\n    \"goToAttachment\": \"attachment\",\n    \"goToTimelinePosition\": \"timelineLink\",\n    \"goToTag\": \"tag\"\n}\n\nexport const studentsTransactionOptions = [\"cannotAnswer\", \"needClarification\", \"notSure\", \"myAnswer\"];\n\n\nconst fakeStudentTransactions = [\n    {\n       \"taskId\":\"62a9ff27925841535833b6a1\",\n       \"label\":\"needClarification\",\n       \"attributes\":{\n          \"note\":\"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n       },\n       \"actioneerId\":\"928\",\n       \"messages\":[\n          \n       ],\n       \"id\":\"0\",\n       \"_creationTs\":1655835879,\n       \"_lastUpdateTs\":1655835879\n    },\n    {\n       \"taskId\":\"62a9ff27925841535833b6a1\",\n       \"label\":\"notSure\",\n       \"attributes\":{\n          \"note\":\"Non saprei rispondere\"\n       },\n       \"actioneerId\":\"928\",\n       \"messages\":[\n          \n       ]\n    }\n]\n\nexport const fakeTask = {\n    \"id\": 2131, \"_creationTs\":1655308072,\"_lastUpdateTs\":1655308072, \n    \"goal\": {\n        \"name\": \"Quesito iniziale sulla timeline\",\n        \"description\": \"Descrizione del questito iniziale della timeline\",\n        \"keywords\": [\"social interaction\", \"lab\"],\n    }, \"transactions\": fakeStudentTransactions\n}","import React, { useState, useEffect } from 'react'\nimport {\n    Button, Collapse, Form, FormText,\n    Card, CardHeader, CardTitle, CardSubtitle, CardBody, CardFooter,\n    FormGroup, Input, Label\n} from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { createNewTransaction } from '../api/wenet_api';\nimport moment from 'moment';\nimport {transactionFieldMapper, studentsTransactionOptions} from './common';\n\nconst fakeStudentTransactions = [\n    {\n       \"taskId\":\"62a9ff27925841535833b6a1\",\n       \"label\":\"needClarification\",\n       \"attributes\":{\n          \"note\":\"Avrei bisogno di aiuto perchè non ho capito la domanda\"\n       },\n       \"actioneerId\":\"928\",\n       \"messages\":[\n          \n       ],\n       \"id\":\"0\",\n       \"_creationTs\":1655835879,\n       \"_lastUpdateTs\":1655835879\n    },\n    {\n       \"taskId\":\"62a9ff27925841535833b6a1\",\n       \"label\":\"notSure\",\n       \"attributes\":{\n          \"note\":\"Non saprei rispondere\"\n       },\n       \"actioneerId\":\"928\",\n       \"messages\":[\n          \n       ]\n    }\n]\n\n\n\nconst StudentTransaction = (props) => {\n    \n    const {transaction} = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction==null? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] = \n    useState(transaction==null? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice>=0 &&  props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            currentSelectedStudentText)\n    }\n\n    const onChangeStudentText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentStudentText(ev.target.value);\n        props.onUpdate && currentSelectedChoice>=0 &&  props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    const getAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        return currentSelectedChoice>=0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`comment_on_${studentsTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => onChangeStudentText(ev)}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderTeacherAnswerText = () => {\n        return <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={\"RISPOSTA\"}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    return (\n        <>\n         { props.transaction &&\n               <div style={{display:\"flex\",  justifyContent: \"flex-end\"}}>\n               <Label>\n                   <b>{moment(props.transaction._creationTs).format(\"DD/MM/YYYY - hh:mm\")}</b>\n               </Label>\n               </div>\n            }\n        <Form style={{ border: \"1px solid #007bff\", padding: \"10px\", margin: \"10px\" }}>\n           \n           \n            <Label>\n                <b>{t(\"selectAnswer\")}</b>\n            </Label>\n            {renderAnswerOptions()}\n            {renderStudentAnswerText()}\n            {renderTeacherAnswerText()}\n        </Form>\n        </>)\n}\n\nexport const StudentTask = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const [transactionData, setTransactionData] = useState(null);\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n\n    const createNewTransaction = () =>\n    {\n        if (transactionData==null) return;\n        const taskId = props.task[\"id\"];\n        const payload = { \"taskId\" : taskId, \"content\" : {\"label\" :transactionData[\"label\"], \n        \"message\" : transactionData[\"message\"]}}\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n       }\n    \n    const getFilteredTransactions = () =>\n    {  \n        console.log(\"Transaction: (Task):\", props.task.transactions);\n        if (props.task.transactions==null) return [];\n\n        const ft = props.task.transactions.filter((transaction) =>\n        {\n            console.log(\"Transaction: (Filter):\", transaction);\n            // mostro solo le transactions create dallo studente compatilmente con le\n            // label definite dalla app logic\n            return studentsTransactionOptions.includes(transaction[\"label\"]) \n            && userProfile!=null && userProfile[\"id\"]== transaction[\"actioneerId\"]\n            \n        })\n        // ordibate cronologicamente dalla più recente alla meno recente\n        ft.sort((t1,t2) => (t1[\"_creationTs\"]- t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const renderTransactions = () => {\n        const filteredTransactions =  getFilteredTransactions()\n        console.log(\"Transaction: (filter):\", filteredTransactions);\n        return filteredTransactions.map((transaction) => {\n            return <StudentTransaction readonly transaction={transaction} />\n        })\n    }\n\n    const renderNewTransaction = () => {\n         return <StudentTransaction onUpdate = { (label,message) => setTransactionData({label,message})} />\n    }\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs).format(\"DD/MM/YYYY - hh:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                            {renderNewTransaction()}\n                        </Form>\n                    </CardBody>\n                    <CardFooter>\n                        <Button color=\"primary\" onClick={(ev) => {createNewTransaction() }}>{t(\"send\")}</Button>\n                    </CardFooter>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { StudentTask } from '../components/StudentComponents';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { fakeTask } from '../components/common';\n\nconst fakeTransaction1 = {\n    \"taskId\": 2131,\n    \"answers\": [\"Non lo so\", \"Ho capito\", \"Ho bisogno di aiuto\"],\n    \"selectedChoiceIndex\" : 1,\n    \"studentAnswer\": { \"choice\": 1, \"comments\": \"non ci capisco niente\" },\n    \"teacherFeedback\": { \"comments\": \"bravo! ma cerca qui...\" },\n    \"readonly\" : true\n};\n\nconst fakeTransaction2 = {\n    \"taskId\": 2131,\n    \"answers\": [\"Non lo so\", \"Ho capito\", \"Ho bisogno di aiuto\"],\n    \"selectedChoiceIndex\" : 0,\n    \"studentAnswer\": { \"choice\": 1, \"comments\": \"non ci capisco niente\" },\n    \"teacherFeedback\": { \"comments\": \"bravo! ma cerca qui...\" },\n    \"readonly\": false\n};\n\n\n\n\n//const tasks = [fakeTask];\n\nexport const StudentDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const tasks =  useSelector(UserTasksSelectors.getTasks);\n\n   \n     \n\n    const renderTasks = () =>\n    {\n        return tasks && tasks.map((task,index) => <StudentTask task={task} />)\n    }\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"student_area\" showMenu={true} />\n            <SideBar active=\"student_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                {renderTasks()}\n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Button, Collapse, Form, FormText, Card, CardSubtitle, CardHeader, CardTitle, CardBody, CardFooter, FormGroup, Input, Label } from 'reactstrap'\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from \"react-icons/ai\";\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { transactionFieldMapper, studentsTransactionOptions } from './common';\nimport { fakeTask } from '../components/common';\nimport moment from 'moment';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction } from '../store/slices/userTasks'\n\n// link timeline drosophila\n//https://beta.riale.ideab3.it/public/a6563273-863b-4e60-8b05-c6b41b332b42\n\nconst TeacherTransaction = (props) => {\n\n    const { transaction } = props;\n    console.log(\"Transaction: (props) \", transaction);\n    const transactionActioneer = useSelector(StudentsProfileSelector.getStudentDetailsByWenetID(transaction && transaction[\"actioneerId\"]));   \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const [currentSelectedChoice, setCurrentSelectedChoice] = useState(transaction == null ? -1 : studentsTransactionOptions.indexOf(transaction[\"label\"]))\n    const [currentSelectedStudentText, setCurrentStudentText] =\n        useState(transaction == null ? \"\" : transaction[\"attributes\"][transactionFieldMapper[transaction[\"label\"]]])\n\n    const onChangeSelectedChoice = (ev) => {\n        console.log(\"selected choice:\", ev.target.value);\n        setCurrentSelectedChoice(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            currentSelectedStudentText)\n    }\n\n    const onChangeStudentText = (ev) => {\n        console.log(\"current text:\", ev.target.value);\n        setCurrentStudentText(ev.target.value);\n        props.onUpdate && currentSelectedChoice >= 0 && props.onUpdate(studentsTransactionOptions[currentSelectedChoice],\n            ev.target.value)\n    }\n\n    const getAnswerOption = (group, message, index) => {\n        return <FormGroup check disabled={props.readonly}>\n            <Input disabled={props.readonly}\n                name={group}\n                value={index}\n                onChange={(ev) => onChangeSelectedChoice(ev)}\n                checked={currentSelectedChoice == index}\n                type=\"radio\"\n            />\n            {' '}\n            <Label check>\n                {message}\n            </Label>\n        </FormGroup>\n    }\n\n    const renderStudentAnswerText = () => {\n        return currentSelectedChoice >= 0 && <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"studentAnswerText\">\n                    <b>{t(`teacher_comment_on_${studentsTransactionOptions[currentSelectedChoice]}`)}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"studentAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    onChange={(ev) => onChangeStudentText(ev)}\n                    value={currentSelectedStudentText}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderTeacherAnswerText = () => {\n        return <FormGroup>\n            <div style={{ marginTop: \"20px\" }}>\n                <Label for=\"teacherAnswerText\">\n                    <b>{t(\"teacherFeedback\")}</b>\n                </Label>\n                <Input disabled={props.readonly}\n                    id=\"teacherAnswerText\"\n                    name=\"text\"\n                    type=\"textarea\"\n                    value={\"RISPOSTA\"}\n                />\n            </div>\n        </FormGroup>\n    }\n\n    const renderAnswerOptions = () => {\n        return studentsTransactionOptions.map((message, index) => {\n            return getAnswerOption(\"studentChoice\", t(message), index);\n        })\n    }\n\n    return (\n        <>\n            {props.transaction &&\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    {transactionActioneer ?\n                        <Label>\n                            <b>{transactionActioneer[\"name\"]} {` `} {transactionActioneer[\"surname\"]}\n                                {' - '} {moment(props.transaction._creationTs).format(\"DD/MM/YYYY - hh:mm\")}</b>\n                        </Label>\n                        :\n                        <Label>\n                            <b>{moment(props.transaction._creationTs).format(\"DD/MM/YYYY - hh:mm\")}</b>\n                        </Label>}\n\n               </div>\n            }\n            <Form style={{ border: \"1px solid #007bff\", padding: \"10px\", margin: \"10px\" }}>\n\n\n                <Label>\n                    <b>{t(\"teacher_selectAnswer\")}</b>\n                </Label>\n                {renderAnswerOptions()}\n                {renderStudentAnswerText()}\n                {renderTeacherAnswerText()}\n            </Form>\n        </>)\n}\n\nexport const TaskCreator = (props) => {\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [currentTaskTitle, setCurrentTaskTitle] = useState(\"\");\n    const [currentTaskDescription, setCurrentTaskDescription] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const createNewTask = (ev) => {\n        dispatch(UserTasksActions.willCreateTask({\n            \"name\": currentTaskTitle,\n            \"description\": currentTaskDescription\n        }))\n    }\n\n    const onChangeTaskTitle = (ev) => {\n        setCurrentTaskTitle(ev.target.value)\n    }\n\n    const onChangeTaskDescription = (ev) => {\n        setCurrentTaskDescription(ev.target.value)\n    }\n\n    return (\n        <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n            <CardTitle>\n                {t(\"teacherCreateNewTask\")}\n            </CardTitle>\n            <CardBody>\n                <Form>\n                    <FormGroup>\n                        <div style={{ marginTop: \"20px\" }}>\n                            <Label for=\"teacherTaskTitle\">\n                                <b>{t(\"teacherTaskTitle\")}</b>\n                            </Label>\n                            <Input\n                                id=\"teacherTaskTitle\"\n                                name=\"text\"\n                                type=\"text\"\n                                onChange={(ev) => onChangeTaskTitle(ev)}\n                                value={currentTaskTitle}\n                            />\n                        </div>\n                    </FormGroup>\n                    <FormGroup>\n                        <div style={{ marginTop: \"20px\" }}>\n                            <Label for=\"teacherTaskDescription\">\n                                <b>{t(\"teacherTaskDescription\")}</b>\n                            </Label>\n                            <Input\n                                id=\"teacherTaskDescription\"\n                                name=\"text\"\n                                type=\"textarea\"\n                                onChange={(ev) => onChangeTaskDescription(ev)}\n                                value={currentTaskDescription}\n                            />\n                        </div>\n                    </FormGroup>\n                </Form>\n            </CardBody>\n            <CardFooter>\n                <Button color=\"primary\" onClick={(ev) => { createNewTask(ev) }}>{t(\"send\")}</Button>\n            </CardFooter>\n        </Card>)\n}\n\n\nconst tasks = [fakeTask];\n\nexport const TeacherTasksViewer = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    //const tasks =  useSelector(UserTasksSelectors.getTasks);\n\n\n    const renderTasks = () => {\n        return tasks && tasks.map((task, index) => <TeacherTaskViewer task={task} />)\n    }\n\n    return (\n        <>\n            {renderTasks()}\n        </>\n    )\n}\n\nexport const TeacherTaskViewer = (props) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const [transactionData, setTransactionData] = useState(null);\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n\n    const createNewTransaction = () => {\n        if (transactionData == null) return;\n        const taskId = props.task[\"id\"];\n        const payload = {\n            \"taskId\": taskId, \"content\": {\n                \"label\": transactionData[\"label\"],\n                \"message\": transactionData[\"message\"]\n            }\n        }\n        dispatch(UserTasksActions.willCreateTransaction(payload));\n    }\n\n    const getFilteredTransactions = () => {\n        console.log(\"Transaction: (Task):\", props.task.transactions);\n        if (props.task.transactions == null) return [];\n\n        const ft = props.task.transactions.filter((transaction) => {\n            console.log(\"Transaction: (Filter):\", transaction);\n            // mostro tutte le transactions create dagli compatilmente con le\n            // label definite dalla app logic\n            return studentsTransactionOptions.includes(transaction[\"label\"])\n        })\n        // ordinate cronologicamente dalla più recente alla meno recente\n        ft.sort((t1, t2) => (t1[\"_creationTs\"] - t2[\"_creationTs\"]))\n        return ft\n    }\n\n    const renderTransactions = () => {\n        const filteredTransactions = getFilteredTransactions()\n        console.log(\"Transaction: (filter):\", filteredTransactions);\n        return filteredTransactions.map((transaction) => {\n            return <TeacherTransaction readonly transaction={transaction} />\n        })\n    }\n\n    const renderNewTransaction = () => {\n        return <TeacherTransaction onUpdate={(label, message) => setTransactionData({ label, message })} />\n    }\n\n    const renderTopicContents = () => {\n        const taskTitle = props.task.goal.name;\n        const taskDescription = props.task.goal.description;\n        const taskCreationDate = moment(props.task._creationTs).format(\"DD/MM/YYYY - hh:mm\")\n        return (\n\n            <Card className=\"mb-4\" style={{ padding: \"10px\", borderColor: \"#007bff\" }}>\n\n                <CardHeader onClick={() => { toggle() }} style={{ cursor: \"pointer\", backgroundColor: \"#007bff\", borderColor: \"#007bff\", paddingBottom: 0, color: 'white' }}>\n\n                    <CardTitle>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignContent: \"space-between\" }}>\n                            ({taskCreationDate}) {taskTitle}\n                            {isOpen ?\n                                <AiOutlineCaretUp size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretUp> :\n                                <AiOutlineCaretDown size={\"1.6em\"} cursor=\"pointer\" color='white' onClick={() => { toggle() }}></AiOutlineCaretDown>\n                            }\n\n                        </div>\n\n                    </CardTitle>\n\n                </CardHeader>\n                <Collapse isOpen={isOpen}>\n                    {taskDescription &&\n                        <CardSubtitle style={{ padding: \"10px\", margin: \"10px\", backgroundColor: \"#EEEEEE\", }}>\n                            {taskDescription}\n                        </CardSubtitle>\n                    }\n\n                    <CardBody>\n                        <Form>\n                            {renderTransactions()}\n                            {renderNewTransaction()}\n                        </Form>\n                    </CardBody>\n                    <CardFooter>\n                        <Button color=\"primary\" onClick={(ev) => { createNewTransaction() }}>{t(\"send\")}</Button>\n                    </CardFooter>\n                </Collapse>\n            </Card>)\n    }\n\n    return (\n        renderTopicContents()\n    )\n\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { selectors as StudentsProfileSelector, actions as StudentsProfileAction} from '../store/slices/userTasks'\nimport { useTranslation } from 'react-i18next';\n\n\nconst fakeProfiles = [\n  {\"passcode\":\"VPFYBRSX\",\"name\":\"Pantera\",\n\"surname\":\"Assonnata\",\"wenet_id\":928,\"id\":\"B+\",\n\"description\":\"Profilo B+\",\"teacher_wenet_id\":671},\n{\"passcode\":\"APFYBRSX\",\"name\":\"Leone\",\n\"surname\":\"Indaffarato\",\"wenet_id\":928,\"id\":\"C+\",\n\"description\":\"Profilo C+\",\"teacher_wenet_id\":671}\n\n] as any;\n\n\nexport const StudentsProfileViewer = (props:any) =>\n{   \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n    const dispatch = useDispatch();\n    const studentsProfile = useSelector(StudentsProfileSelector.getStudentsProfile);\n    //const studentsProfile = fakeProfiles;\n\n    const columns = [\n\n      {\n        dataField: 'name',\n        text: t('name'),\n        sort: true\n      },\n\n        {\n          dataField: 'surname',\n          text: t('surname'),\n          sort: true\n        },\n        \n\n        {\n          dataField: 'passcode',\n          text: t('passcode'),\n          sort: true,\n          hidden:false\n        },\n          {\n            dataField: 'id',\n            text: t('profile'),\n            sort: true\n          },\n          {\n            dataField: 'description',\n            text: t('description'),\n            sort: false\n          }\n      ]\n\n    React.useEffect(() => {\n        dispatch(StudentsProfileAction.willLoadStudentsProfile(null))        \n        return () => { }\n      }, []);\n\n    return <>\n     <BootstrapTable bootstrap4 keyField='passcode' data={ \n                      studentsProfile\n                    } \n                    columns={ columns } />\n    </>\n}\n","import React, { useState, useEffect } from 'react'\nimport { Header } from '../components/Header'\nimport { SideBar } from '../components/SideBar'\nimport { Content } from '../components/Content';\nimport { selectors as UserTasksSelectors, actions as UserTasksActions } from '../store/slices/userTasks'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TaskCreator, TeacherTasksViewer } from '../components/TeacherComponents';\nimport { StudentsProfileViewer } from '../components/StudentsProfileViewer';\n\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { fakeTask } from '../components/common';\n\n\nexport const TeacherDashboard = (props) => {\n    const userProfile = useSelector(UserTasksSelectors.getUserProfile);\n    const [activeTab, setActiveTab] = useState(\"0\");\n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    return (\n        <>\n            <Header className=\"mb-0 text-white\" section=\"teacher_area\" showMenu={true} />\n            <SideBar active=\"teacher_dashboard\" role={userProfile != null ? userProfile.role_id : null} />\n            <Content>\n                <Nav tabs>\n                    <NavItem>\n                        <NavLink style={activeTab === '0' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('0'); }}\n                        >\n                            {t(\"students_answers\")}\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink style={activeTab === '1' ?\n                            { cursor: \"arrow\", fontWeight: \"bold\", background: \"#EEEEEE\" } : { cursor: \"pointer\", fontWeight: \"normal\" }}\n                            onClick={() => { setActiveTab('1'); }}\n                        >\n                            {t(\"students_profile\")}\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={activeTab}>\n                    <TabPane tabId=\"0\">\n                        <TeacherTasksViewer/>\n                    </TabPane>\n                    <TabPane tabId=\"1\">\n                        <StudentsProfileViewer/>\n                    </TabPane>\n                </TabContent>\n\n                \n            </Content>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button, Form, FormGroup, Label, Input, FormText, Card, CardHeader, CardBody,\n    CardText, CardTitle, CardFooter\n} from 'reactstrap';\n\n\n//https://www.npmjs.com/package/compress-json\nconst WenetConnector = () => {\n    \n    const { t, i18n } = useTranslation('frontend', { useSuspense: false });\n\n    const [passcode, setPasscode] = useState(null);\n\n    useEffect(()=>{\n         localStorage.setItem(\"passcode\", passcode);\n      }, [passcode])\n\n    const checkPassCode = (passCodeOrig) => {\n\n        //WQBLLIZQ\n        const charset = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase()\n        const passCodeLen = 8\n        try {\n            const passCode = passCodeOrig.trim().toUpperCase();\n            if (passCode.length != passCodeLen) throw (\"Invalid\");\n            let passCodeSum = 0;\n            for (let i = 0; i < passCode.length - 1; i++) {\n                //console.log(\"Indice carattere:\",charset.indexOf(passCode.charAt(i)))\n                passCodeSum += charset.indexOf(passCode.charAt(i))\n            }\n\n            passCodeSum -= charset.indexOf(passCode.charAt(passCodeLen - 1))\n            //console.log(`PasscodeSum check:${passCodeSum}`)\n            const isValid = (passCodeSum % charset.length) == 0\n            setPasscode( isValid ? passCode : null);\n        } catch (error) {\n            setPasscode(null);\n        }\n\n    }\n\n    const onEnterPasscode = (ev) => {\n        console.log(\"entered:\", ev.target.value)\n        checkPassCode(ev.target.value);\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            height: '100vh'\n        }}>\n            <Card className=\"mb-4\" style={{ borderColor: \"#007bff\" }}>\n                <CardHeader style={{\n                    backgroundColor: \"#007bff\",\n                    borderColor: \"#007bff\",\n                    paddingBottom: 0,\n                    color: 'white'\n\n                }}>\n                    <CardTitle style={{ textAlign: \"center\" }}>{t(\"platform_title\")}</CardTitle>\n                </CardHeader>\n                <CardBody>\n\n\n                    <Input onChange={(ev) => onEnterPasscode(ev)} type=\"text\" name=\"passcode\" \n                    id=\"passcode\" placeholder={t(\"passcode_enter\")} />\n\n                </CardBody>\n                    <CardFooter style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}>\n                    {\n                        passcode && (\n                            <a href={`/connect?passcode=${passcode}`}>{t(\"connect_to_wenet\")}</a>\n                        )\n                    }\n                        \n                    </CardFooter>\n\n            </Card>\n\n\n        </div>\n    );\n}\n\nexport default WenetConnector","import React from \"react\";\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory\n  } from \"react-router-dom\";\n  import { useSelector } from \"react-redux\";\n  import { history } from './store'\n  \n  import RialeDiscussionBoard from './pages/DiscussionDashBoard'\n  import { StudentDashboard } from \"./pages/StudentDashboard\";\n  import { TeacherDashboard } from \"./pages/TeacherDashboard\";\n  import WenetConnector from \"./pages/WenetConnector\";\nexport const AppRouter = () => { \n  return (<ConnectedRouter history={history}>\n  <Switch>\n  <Route path=\"/forum\">\n          <RialeDiscussionBoard />\n    </Route>\n\n    <Route path=\"/student_dashboard\">\n          <StudentDashboard />\n    </Route>\n\n    <Route path=\"/teacher_dashboard\">\n          <TeacherDashboard />\n    </Route>\n\n    <Route path=\"/\">\n          <WenetConnector />\n    </Route>\n  </Switch>\n\n</ConnectedRouter>)\n}","import React from \"react\";\nimport { Provider } from 'react-redux'\nimport { configureStore } from './store'\nimport { AppRouter } from './router';\n\nconst Test = () => { return(<></>)}\nexport default function App() {\n  return (\n    <Provider store={configureStore({})}>\n       <AppRouter/>\n    \n    </Provider >\n  );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    ns: ['tl', 'frontend'],\n    defaultNS: 'tl',\n    fallbackLng: 'it',\n    debug: true,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport RialeDiscussionBoard from './pages/DiscussionDashBoard';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-comments-section/dist/index.css'\nimport App from './App';\n\n// seutp i18n ---------------\nimport i18n from './i18n';\n\nvar lng = window.navigator['userLanguage']|| window.navigator.language;\nif(lng !== 'it-IT'){\n    i18n.changeLanguage('en-US');\n}else{\n    i18n.changeLanguage('it-IT');\n}\n   \nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n/*\n//https://create-react-app.dev/docs/deployment/\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}